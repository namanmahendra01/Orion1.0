Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\nxmlns:tools=\"http://schemas.android.com/tools\"\r\nandroid:layout_width=\"match_parent\"\r\nandroid:layout_height=\"match_parent\"\r\ntools:context=\".home.MainActivity\">\r\n    <FrameLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:id=\"@+id/container\">\r\n\r\n    </FrameLayout>\r\n\r\n<RelativeLayout\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:id=\"@+id/relLayoutParent\">\r\n    <!--top toolbar    -->\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id/relLayout1\">\r\n        <include layout=\"@layout/layout_top_tabs_main\"/>\r\n\r\n    </RelativeLayout>\r\n    <!--        middle section-->\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:id=\"@+id/relLayout2\"\r\n        android:layout_below=\"@+id/relLayout1\"\r\n        android:layout_above=\"@+id/bottom\">\r\n\r\n<include layout=\"@layout/layout_center_viewpager\" />\r\n    </RelativeLayout>\r\n<!--    Bottom bar-->\r\n    <include layout=\"@layout/layout_bottom_navigation_view\" />\r\n</RelativeLayout>\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
+++ app/src/main/res/layout/activity_main.xml	(date 1605447926423)
@@ -1,41 +1,44 @@
 <?xml version="1.0" encoding="utf-8"?>
 <androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
-xmlns:app="http://schemas.android.com/apk/res-auto"
-xmlns:tools="http://schemas.android.com/tools"
-android:layout_width="match_parent"
-android:layout_height="match_parent"
-tools:context=".home.MainActivity">
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".home.MainActivity"
+    android:id="@+id/activity_main_layout">
+
     <FrameLayout
+        android:id="@+id/container"
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:id="@+id/container">
+        android:layout_height="match_parent">
 
     </FrameLayout>
 
-<RelativeLayout
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:id="@+id/relLayoutParent">
-    <!--top toolbar    -->
-    <RelativeLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:id="@+id/relLayout1">
-        <include layout="@layout/layout_top_tabs_main"/>
+    <RelativeLayout
+        android:id="@+id/relLayoutParent"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+        <!--top toolbar    -->
+        <RelativeLayout
+            android:id="@+id/relLayout1"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <include layout="@layout/layout_top_tabs_main" />
 
-    </RelativeLayout>
-    <!--        middle section-->
-    <RelativeLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:id="@+id/relLayout2"
-        android:layout_below="@+id/relLayout1"
-        android:layout_above="@+id/bottom">
+        </RelativeLayout>
+        <!--        middle section-->
+        <RelativeLayout
+            android:id="@+id/relLayout2"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_above="@+id/bottom"
+            android:layout_below="@+id/relLayout1">
 
-<include layout="@layout/layout_center_viewpager" />
-    </RelativeLayout>
-<!--    Bottom bar-->
-    <include layout="@layout/layout_bottom_navigation_view" />
-</RelativeLayout>
+            <include layout="@layout/layout_center_viewpager" />
+        </RelativeLayout>
+        <!--    Bottom bar-->
+        <include layout="@layout/layout_bottom_navigation_view" />
+    </RelativeLayout>
 
 </androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/java/com/orion/orion/ViewPostActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.media.AudioManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.PopupMenu;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.VolleyLog;\r\nimport com.bumptech.glide.Glide;\r\nimport com.danikula.videocache.HttpProxyCacheServer;\r\nimport com.google.android.exoplayer2.DefaultLoadControl;\r\nimport com.google.android.exoplayer2.ExoPlaybackException;\r\nimport com.google.android.exoplayer2.ExoPlayerFactory;\r\nimport com.google.android.exoplayer2.LoadControl;\r\nimport com.google.android.exoplayer2.PlaybackParameters;\r\nimport com.google.android.exoplayer2.Player;\r\nimport com.google.android.exoplayer2.SimpleExoPlayer;\r\nimport com.google.android.exoplayer2.Timeline;\r\nimport com.google.android.exoplayer2.source.ExtractorMediaSource;\r\nimport com.google.android.exoplayer2.source.MediaSource;\r\nimport com.google.android.exoplayer2.source.TrackGroupArray;\r\nimport com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;\r\nimport com.google.android.exoplayer2.trackselection.DefaultTrackSelector;\r\nimport com.google.android.exoplayer2.trackselection.TrackSelectionArray;\r\nimport com.google.android.exoplayer2.trackselection.TrackSelector;\r\nimport com.google.android.exoplayer2.ui.PlayerView;\r\nimport com.google.android.exoplayer2.upstream.BandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DataSource;\r\nimport com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;\r\nimport com.google.android.exoplayer2.util.Util;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.Photo;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.profile;\r\nimport com.orion.orion.util.SNTPClient;\r\nimport com.orion.orion.util.SquareImageView;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.TimeZone;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport static android.view.View.GONE;\r\nimport static com.orion.orion.util.MyApplication.getProxy;\r\n\r\npublic class ViewPostActivity extends AppCompatActivity {\r\n    private static final String TAG = \"ViewPostFragment\";\r\n\r\n\r\n    //firebase\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private DatabaseReference myRef;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n    String currentUsername = \"\";\r\n\r\n    private Photo mphoto;\r\n    PlayerView playerView;\r\n    ProgressBar progressBar;\r\n    boolean play = true;\r\n    long currentPosition = 0;\r\n    SimpleExoPlayer simpleExoPlayer;\r\n\r\n    private String mLikesString = \"\";\r\n    private String numberoflike = \"0\";\r\n    ArrayList<Comment> comments = new ArrayList<>();\r\n\r\n\r\n    private SquareImageView mPostImage, thumbnail, progress2;\r\n    private BottomNavigationViewEx bottomNavigationView;\r\n    private TextView mBackLabel, duration, mCaption, mUsername, mTimestamp, mLikes, mCommentnumber, mcredit, domain, promoteNum;\r\n    private ImageView mBackArrow, mEllipses, mStarYellow, mStarWhite, mProfileImage, mComment, promote, promoted, play2, mute, unmute;\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n    LinearLayout progress;\r\n    private users mCurrentUser;\r\n    private boolean likeByCurrentsUser2;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_view_post);\r\n\r\n        mPostImage = (SquareImageView) findViewById(R.id.post_image);\r\n        bottomNavigationView = (BottomNavigationViewEx) findViewById(R.id.BottomNavViewBar);\r\n        mBackArrow = (ImageView) findViewById(R.id.backarrow);\r\n        mEllipses = (ImageView) findViewById(R.id.ivEllipses);\r\n        mStarWhite = (ImageView) findViewById(R.id.image_star);\r\n        mStarYellow = (ImageView) findViewById(R.id.image_star_yellow);\r\n        mProfileImage = (ImageView) findViewById(R.id.profile_photo1);\r\n        mBackLabel = (TextView) findViewById(R.id.tvbacklabel1);\r\n        mCaption = (TextView) findViewById(R.id.image_caption);\r\n        mUsername = (TextView) findViewById(R.id.username1);\r\n        mTimestamp = (TextView) findViewById(R.id.images_time);\r\n        mLikes = (TextView) findViewById(R.id.likes_number);\r\n        mComment = (ImageView) findViewById(R.id.image_shoutout);\r\n        mCommentnumber = (TextView) findViewById(R.id.comments_number);\r\n        mcredit = (TextView) findViewById(R.id.credit);\r\n        promote = (ImageView) findViewById(R.id.promote);\r\n        promoted = (ImageView) findViewById(R.id.promoted);\r\n        domain = (TextView) findViewById(R.id.domain12);\r\n        promoteNum = (TextView) findViewById(R.id.promote_number);\r\n\r\n        progress = findViewById(R.id.pro);\r\n        progress2 = findViewById(R.id.progress);\r\n\r\n\r\n        play2 = (ImageView) findViewById(R.id.play);\r\n        mute = (ImageView) findViewById(R.id.mute);\r\n        unmute = (ImageView) findViewById(R.id.unmute);\r\n        playerView = findViewById(R.id.player_view);\r\n        progressBar = findViewById(R.id.progress_bar);\r\n        duration = (TextView) findViewById(R.id.duration);\r\n        thumbnail = (SquareImageView) findViewById(R.id.thumbnail);\r\n\r\n\r\n//          Initialize SharedPreference variables\r\n        sp = getApplicationContext().getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n\r\n\r\n        Intent i = getIntent();\r\n        mphoto = i.getParcelableExtra(\"photo\");\r\n        comments = i.getParcelableArrayListExtra(\"comments\");\r\n\r\n        duration.setVisibility(View.GONE);\r\n\r\n\r\n        mEllipses.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                PopupMenu popupMenu = new PopupMenu(ViewPostActivity.this, mEllipses);\r\n                if (mphoto.getUser_id().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                    popupMenu.getMenuInflater().inflate(R.menu.post_menu, popupMenu.getMenu());\r\n                    Log.d(TAG, \"onClick: \" + \"yespop\");\r\n                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                        @Override\r\n                        public boolean onMenuItemClick(MenuItem item) {\r\n                            Toast.makeText(ViewPostActivity.this, \"clicked\", Toast.LENGTH_SHORT).show();\r\n\r\n                            AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);\r\n                            builder.setTitle(\"Delete\");\r\n                            builder.setMessage(\"Are you sure, you want to delete this Post?\");\r\n\r\n//                set buttons\r\n                            builder.setPositiveButton(\"Delete\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    Log.d(TAG, \"DeleteMessage: deleteing message\");\r\n                                    DeletePost();\r\n\r\n                                }\r\n                            });\r\n                            builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    dialog.dismiss();\r\n                                }\r\n                            });\r\n                            builder.create().show();\r\n\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    popupMenu.show();\r\n\r\n\r\n                } else {\r\n                    popupMenu.getMenuInflater().inflate(R.menu.post_menu_all, popupMenu.getMenu());\r\n                    Log.d(TAG, \"onClick: \" + \"yespop\");\r\n                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                        @Override\r\n                        public boolean onMenuItemClick(MenuItem item) {\r\n                            Toast.makeText(ViewPostActivity.this, \"clicked\", Toast.LENGTH_SHORT).show();\r\n\r\n                            AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);\r\n                            builder.setTitle(\"Report\");\r\n                            builder.setMessage(\"Are you sure, you want to Report this Post?\");\r\n\r\n//                set buttons\r\n                            builder.setPositiveButton(\"Report\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    Log.d(TAG, \"DeleteMessage: deleteing message\");\r\n                                    ReportPost();\r\n\r\n                                }\r\n                            });\r\n                            builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    dialog.dismiss();\r\n                                }\r\n                            });\r\n                            builder.create().show();\r\n\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    popupMenu.show();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (mphoto.getType().equals(\"photo\")) {\r\n\r\n            mPostImage.setVisibility(View.VISIBLE);\r\n            play2.setVisibility(View.GONE);\r\n            Glide.with(ViewPostActivity.this)\r\n                    .load(mphoto.getImage_path())\r\n                    .placeholder(R.drawable.load)\r\n                    .error(R.drawable.default_image2)\r\n                    .placeholder(R.drawable.load)\r\n                    .into(mPostImage);\r\n            playerView.setVisibility(GONE);\r\n\r\n        } else {\r\n            unmute.setVisibility(View.VISIBLE);\r\n            play2.setVisibility(View.VISIBLE);\r\n            mPostImage.setVisibility(View.GONE);\r\n            playerView.setVisibility(View.VISIBLE);\r\n\r\n        }\r\n\r\n//                   ***********get Video***********\r\n\r\n\r\n        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n//                    get thumbnail\r\n        reference2\r\n                .child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"thumbnail\")\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            Glide.with(ViewPostActivity.this)\r\n                                    .load(mphoto.getThumbnail())\r\n                                    .placeholder(R.drawable.load)\r\n                                    .error(R.drawable.default_image2)\r\n                                    .placeholder(R.drawable.load)\r\n                                    .thumbnail(0.25f)\r\n                                    .into(thumbnail);                           }\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n//                     play/pause video\r\n\r\n        final Handler[] mHandler = new Handler[1];\r\n        final Runnable[] updateProgressAction = new Runnable[1];\r\n        mUsername.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent i = new Intent(ViewPostActivity.this, profile.class);\r\n                i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                i.putExtra(getString(R.string.intent_user), mphoto.getUser_id());\r\n                startActivity(i);\r\n            }\r\n        });\r\n        mProfileImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent i = new Intent(ViewPostActivity.this, profile.class);\r\n                i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                i.putExtra(getString(R.string.intent_user), mphoto.getUser_id());\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        playerView.getVideoSurfaceView().setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                progressBar.setVisibility(View.VISIBLE);\r\n//                if paused\r\n                if (play) {\r\n\r\n                    play = false;\r\n                    play2.setVisibility(View.INVISIBLE);\r\n\r\n                    LoadControl loadControl = new DefaultLoadControl();\r\n                    BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n                    TrackSelector trackSelector = new DefaultTrackSelector(new AdaptiveTrackSelection.Factory(bandwidthMeter));\r\n                    if (simpleExoPlayer != null) {\r\n\r\n                        simpleExoPlayer.release();\r\n                    }\r\n\r\n                    simpleExoPlayer = ExoPlayerFactory.newSimpleInstance(ViewPostActivity.this, trackSelector, loadControl);\r\n\r\n                    DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(\r\n                            ViewPostActivity.this, Util.getUserAgent(ViewPostActivity.this, \"RecyclerView VideoPlayer\"));\r\n                    String mediaUrl = mphoto.getImage_path();\r\n                    HttpProxyCacheServer proxy = getProxy(ViewPostActivity.this);\r\n                    String proxyUrl = proxy.getProxyUrl(mediaUrl);\r\n\r\n\r\n                    playerView.setPlayer(simpleExoPlayer);\r\n\r\n\r\n                    playerView.setKeepScreenOn(true);\r\n                    playerView.setKeepScreenOn(true);\r\n\r\n\r\n                    MediaSource videoSource = new ExtractorMediaSource.Factory(dataSourceFactory)\r\n                            .createMediaSource(Uri.parse(proxyUrl));\r\n//                    set Volume\r\n                    if (mute.getVisibility() == View.VISIBLE) {\r\n                        simpleExoPlayer.setVolume(0f);\r\n                    } else if (unmute.getVisibility() == View.VISIBLE) {\r\n                        simpleExoPlayer.setVolume(AudioManager.STREAM_MUSIC);\r\n                    }\r\n\r\n                    simpleExoPlayer.prepare(videoSource);\r\n                    simpleExoPlayer.seekTo(currentPosition);\r\n                    simpleExoPlayer.setPlayWhenReady(true);\r\n                    simpleExoPlayer.getPlaybackState();\r\n\r\n\r\n                    simpleExoPlayer.addListener(new Player.EventListener() {\r\n                        @Override\r\n                        public void onTimelineChanged(Timeline timeline, Object manifest, int reason) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onLoadingChanged(boolean isLoading) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n\r\n                            if (playbackState == Player.STATE_BUFFERING) {\r\n\r\n                                progressBar.setVisibility(View.VISIBLE);\r\n\r\n                            } else if (playbackState == Player.STATE_READY) {\r\n\r\n                                duration.setVisibility(View.VISIBLE);\r\n                                thumbnail.setVisibility(GONE);\r\n                                progressBar.setVisibility(View.GONE);\r\n\r\n//                                display duration\r\n                                updateProgressAction[0] = new Runnable() {\r\n                                    @Override\r\n                                    public void run() {\r\n                                        updateProgress();\r\n                                    }\r\n\r\n                                    private void updateProgress() {\r\n\r\n                                        long delayMs = TimeUnit.SECONDS.toMillis(1);\r\n                                        mHandler[0].postDelayed(updateProgressAction[0], delayMs);\r\n                                        duration.setText(String.valueOf((int) (simpleExoPlayer.getDuration() - simpleExoPlayer.getCurrentPosition()) / 1000));\r\n\r\n                                    }\r\n\r\n                                };\r\n                                mHandler[0] = new Handler();\r\n                                mHandler[0].post(updateProgressAction[0]);\r\n\r\n\r\n                            } else if (playbackState == Player.STATE_ENDED) {\r\n\r\n                                play2.setVisibility(View.VISIBLE);\r\n                                play = true;\r\n                                thumbnail.setVisibility(View.VISIBLE);\r\n                                simpleExoPlayer.seekTo(0);\r\n                                simpleExoPlayer.setPlayWhenReady(false);\r\n                                simpleExoPlayer.release();\r\n\r\n                            } else if (playbackState == Player.STATE_IDLE) {\r\n                                play2.setVisibility(View.VISIBLE);\r\n\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onRepeatModeChanged(int repeatMode) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onShuffleModeEnabledChanged(boolean shuffleModeEnabled) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlayerError(ExoPlaybackException error) {\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPositionDiscontinuity(int reason) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlaybackParametersChanged(PlaybackParameters playbackParameters) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onSeekProcessed() {\r\n\r\n                        }\r\n                    });\r\n                } else {\r\n//                    if playing\r\n                    play = true;\r\n                    play2.setVisibility(View.VISIBLE);\r\n                    currentPosition = simpleExoPlayer.getCurrentPosition();\r\n                    simpleExoPlayer.setPlayWhenReady(false);\r\n                    simpleExoPlayer.getPlaybackState();\r\n                    simpleExoPlayer.release();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n//        toggle volume\r\n        mute.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                mute.setVisibility(View.GONE);\r\n                unmute.setVisibility(View.VISIBLE);\r\n                if (simpleExoPlayer != null) {\r\n                    simpleExoPlayer.setVolume(AudioManager.STREAM_MUSIC);\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n        unmute.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                mute.setVisibility(View.VISIBLE);\r\n                unmute.setVisibility(View.GONE);\r\n                if (simpleExoPlayer != null) {\r\n                    simpleExoPlayer.setVolume(0f);\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        getCurrentUser();\r\n\r\n\r\n        setupFirebaseAuth();\r\n        ifCurrentUserLiked();\r\n        ifCurrentUserPromoted();\r\n        numberofPromote();\r\n\r\n        getPhototDetail();\r\n        setupWidgets();\r\n\r\n\r\n        mStarWhite.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"whitestar clicked\");\r\n\r\n                mStarWhite.setVisibility(View.GONE);\r\n                mStarYellow.setVisibility(View.VISIBLE);\r\n                addlike();\r\n                NumberOfLikes();\r\n\r\n\r\n            }\r\n        });\r\n        mStarYellow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"yellowstar clicked\");\r\n\r\n                mStarWhite.setVisibility(View.VISIBLE);\r\n                mStarYellow.setVisibility(View.GONE);\r\n                removeLike();\r\n                NumberOfLikes();\r\n\r\n\r\n            }\r\n        });\r\n        promote.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                promotePost();\r\n            }\r\n        });\r\n\r\n\r\n        promoted.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                unPromotePost();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void ReportPost() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        reference.child(getString(R.string.dbname_reports))\r\n                .child(\"posts\")\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"user_id\")\r\n                .setValue(mphoto.getUser_id());\r\n    }\r\n\r\n    private void unPromotePost() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(\"Remove Promotion\");\r\n        builder.setMessage(\"Are you sure, you want to remove this Promotion?\");\r\n\r\n//                set buttons\r\n        builder.setPositiveButton(\"Remove\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                Log.d(VolleyLog.TAG, \"Rejecting: rejected \");\r\n\r\n                promote.setVisibility(View.VISIBLE);\r\n                promoted.setVisibility(View.GONE);\r\n\r\n                DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                db.child(getString(R.string.dbname_promote))\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                        .child(mphoto.getPhoto_id())\r\n                        .removeValue();\r\n\r\n                DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n                reference.child(getString(R.string.dbname_user_photos))\r\n                        .child(mphoto.getUser_id())\r\n                        .child(mphoto.getPhoto_id())\r\n                        .child(\"Promote\")\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                        .removeValue();\r\n\r\n\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n        builder.create().show();\r\n\r\n    }\r\n\r\n    private void numberofPromote() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"Promote\");\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                String num = String.valueOf(dataSnapshot.getChildrenCount());\r\n                promoteNum.setText(num);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private void promotePost() {\r\n        BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(this, R.style.BottomSheetDialogTheme);\r\n\r\n        View bottomSheetView = this.getLayoutInflater()\r\n                .inflate(R.layout.layout_bottom_sheet_promote, (LinearLayout) bottomSheetDialog.findViewById(R.id.layout_bottom_sheet_container));\r\n        TextView username = bottomSheetView.findViewById(R.id.usernameBs);\r\n        TextView cancel = bottomSheetView.findViewById(R.id.cancel);\r\n        TextView promote1 = bottomSheetView.findViewById(R.id.promote);\r\n        ImageView post = bottomSheetView.findViewById(R.id.postBs);\r\n        Glide.with(ViewPostActivity.this)\r\n                .load(mphoto.getImage_path())\r\n                .placeholder(R.drawable.load)\r\n                .error(R.drawable.default_image2)\r\n                .placeholder(R.drawable.load)\r\n                .thumbnail(0.5f)\r\n                .into(post);\r\n        username.setText(currentUsername);\r\n\r\n\r\n        cancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bottomSheetDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        promote1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                promote.setVisibility(View.GONE);\r\n                promoted.setVisibility(View.VISIBLE);\r\n\r\n\r\n                SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n                    @Override\r\n                    public void onTimeReceived(String rawDate) {\r\n                        // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n\r\n                        String str_date = rawDate;\r\n                        java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                        Date date = null;\r\n                        try {\r\n                            date = (Date) formatter.parse(str_date);\r\n                        } catch (ParseException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                        Long timeStart = date.getTime();\r\n                        Long timeEnd = date.getTime() + 84600000;\r\n\r\n\r\n                        DatabaseReference db1 = FirebaseDatabase.getInstance().getReference();\r\n\r\n                        HashMap<String, Object> hashMap = new HashMap<>();\r\n                        hashMap.put(\"photoid\", mphoto.getPhoto_id());\r\n                        hashMap.put(\"userid\", mphoto.getUser_id());\r\n                        hashMap.put(\"photoLink\", mphoto.getImage_path());\r\n                        hashMap.put(\"storyid\", mphoto.getPhoto_id());\r\n                        hashMap.put(\"timeEnd\", String.valueOf(timeEnd));\r\n                        hashMap.put(\"timeStart\", String.valueOf(timeStart));\r\n                        hashMap.put(\"promoterId\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n                        db1.child(getString(R.string.dbname_promote))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(mphoto.getPhoto_id())\r\n                                .setValue(hashMap);\r\n\r\n                        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n                        reference.child(getString(R.string.dbname_user_photos))\r\n                                .child(mphoto.getUser_id())\r\n                                .child(mphoto.getPhoto_id())\r\n                                .child(\"Promote\")\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .setValue(\"true\");\r\n\r\n                        addToHisNotification(\"\" + mphoto.getUser_id(), mphoto.getPhoto_id(), \"Promoted your post.\");\r\n\r\n\r\n                        bottomSheetDialog.dismiss();\r\n\r\n                        Log.e(SNTPClient.TAG, rawDate);\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Exception ex) {\r\n                        Log.e(SNTPClient.TAG, ex.getMessage());\r\n                    }\r\n                });\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n        bottomSheetDialog.setContentView(bottomSheetView);\r\n        bottomSheetDialog.show();\r\n\r\n\r\n    }\r\n\r\n    private void DeletePost() {\r\n\r\n        progress.setVisibility(View.VISIBLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE,\r\n                WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n        final int[] x = {0};\r\n        DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();\r\n        reference3.child(getString(R.string.dbname_follower))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                x[0]++;\r\n                                DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();\r\n                                reference3.child(getString(R.string.dbname_users))\r\n                                        .child(snapshot1.getKey())\r\n                                        .child(getString(R.string.post_updates))\r\n                                        .child(mphoto.getPhoto_id())\r\n                                        .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                                if (x[0] == snapshot.getChildrenCount()) {\r\n                                    deleteFurther();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            deleteFurther();\r\n\r\n                        }\r\n                    }\r\n\r\n                    private void deleteFurther() {\r\n\r\n                        if( !mphoto.getType().equals(\"photo\")){\r\n                            StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getThumbnail());\r\n                            photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n\r\n                                }\r\n                            });\r\n                        }\r\n                        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n                        reference2.child(getString(R.string.dbname_user_photos))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(mphoto.getPhoto_id())\r\n                                .removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getImage_path());\r\n                                photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        // File deleted successfully\r\n\r\n                                        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n                                        reference2.child(getString(R.string.explore_update))\r\n                                                .child(mphoto.getPhoto_id())\r\n                                                .setValue(true)\r\n                                                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(Void aVoid) {\r\n                                                        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Kolkata\"), new SNTPClient.Listener() {\r\n                                                            @Override\r\n                                                            public void onTimeReceived(String currentTimeStamp) {\r\n                                                                reference2.child(getString(R.string.explore_update)).child(getString(R.string.field_last_updated)).setValue(currentTimeStamp);\r\n                                                            }\r\n\r\n                                                            @Override\r\n                                                            public void onError(Exception ex) {\r\n\r\n                                                            }\r\n                                                        });\r\n                                                        String json = sp.getString(\"pl\", null);\r\n                                                        String json2 = sp.getString(\"myMedia\", null);\r\n\r\n                                                        Type type = new TypeToken<ArrayList<Photo>>() {\r\n                                                        }.getType();\r\n                                                        ArrayList<Photo> photoList = new ArrayList<>();\r\n                                                        ArrayList<Photo> mymediaList = new ArrayList<>();\r\n\r\n                                                        photoList = gson.fromJson(json, type);\r\n                                                        mymediaList = gson.fromJson(json2, type);\r\n                                                        ArrayList<Photo> photoList2 =new ArrayList<>();\r\n                                                        ArrayList<Photo> mymediaList2= new ArrayList<>();\r\n                                                        if( photoList != null) {\r\n                                                            photoList2 = new ArrayList<>(photoList);\r\n                                                        }\r\n                                                        if (mymediaList != null){\r\n                                                            mymediaList2 = new ArrayList<>(mymediaList);\r\n                                                        }\r\n\r\n\r\n                                                        if (photoList2.size() == 0) {                 //    if no arrayList is present\r\n\r\n\r\n                                                        } else {\r\n\r\n                                                            for (Photo a : photoList) {\r\n                                                                if (a.getPhoto_id().equals(mphoto.getPhoto_id()))\r\n                                                                    photoList2.remove(a);\r\n\r\n                                                            }\r\n                                                        }\r\n\r\n\r\n                                                        if (mymediaList2.size() == 0) {                 //    if no arrayList is present\r\n\r\n\r\n                                                        } else {\r\n\r\n                                                            for (Photo a : mymediaList) {\r\n                                                                if (a.getPhoto_id().equals(mphoto.getPhoto_id()))\r\n                                                                    mymediaList2.remove(a);\r\n\r\n                                                            }\r\n                                                        }\r\n\r\n\r\n                                                        //  delete from post list and save updated list\r\n                                                        SharedPreferences.Editor editor = sp.edit();\r\n                                                        json = gson.toJson(photoList2);\r\n                                                        json2 = gson.toJson(mymediaList2);\r\n\r\n                                                        editor.putString(\"pl\", json);\r\n                                                        editor.putString(\"myMedia\", json2);\r\n\r\n                                                        editor.apply();\r\n\r\n\r\n                                                        progress.setVisibility(GONE);\r\n                                                        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                                        finish();\r\n                                                    }\r\n                                                });\r\n\r\n\r\n                                    }\r\n\r\n                                }).\r\n\r\n                                        addOnFailureListener(new OnFailureListener() {\r\n                                            @Override\r\n                                            public void onFailure (@NonNull Exception exception){\r\n                                                // Uh-oh, an error occurred!\r\n                                                Log.d(VolleyLog.TAG, \"onFailure: did not delete file\");\r\n                                            }\r\n                                        });\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled (@NonNull DatabaseError error){\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n\r\n\r\n    private void getCurrentUser () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(getString(R.string.dbname_users))\r\n                .orderByChild(getString(R.string.field_user_id))\r\n                .equalTo(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                for (DataSnapshot singleSnapshot : dataSnapshot.getChildren()) {\r\n                    mCurrentUser = singleSnapshot.getValue(users.class);\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void NumberOfLikes () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\");\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                numberoflike = String.valueOf(dataSnapshot.getChildrenCount());\r\n                mLikes.setText(numberoflike);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void ifCurrentUserLiked () {\r\n        Log.d(TAG, \" checking current user liked or not\");\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    Log.d(TAG, \" checking current user liked or not: Already liked\");\r\n                    mStarWhite.setVisibility(View.GONE);\r\n                    mStarYellow.setVisibility(View.VISIBLE);\r\n                    NumberOfLikes();\r\n                    likeByCurrentsUser2 = true;\r\n\r\n                } else {\r\n                    Log.d(TAG, \" checking current user liked or not: not liked\");\r\n                    mStarWhite.setVisibility(View.VISIBLE);\r\n                    mStarYellow.setVisibility(View.GONE);\r\n                    NumberOfLikes();\r\n                    likeByCurrentsUser2 = false;\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void addToHisNotification (String hisUid, String pId, String notification){\r\n\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n\r\n                String str_date = rawDate;\r\n                java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                Date date = null;\r\n                try {\r\n                    date = (Date) formatter.parse(str_date);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                Log.d(TAG, \"onCreateView: timestampyesss\" + date.getTime());\r\n                String timestamp = String.valueOf(date.getTime());\r\n\r\n                //        data to put in notification\r\n                HashMap<Object, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"pId\", pId);\r\n\r\n                hashMap.put(\"timeStamp\", timestamp);\r\n\r\n                hashMap.put(\"pUid\", hisUid);\r\n\r\n                hashMap.put(\"notificaton\", notification);\r\n                hashMap.put(\"seen\", \"false\");\r\n\r\n\r\n                hashMap.put(\"sUid\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"users\");\r\n                ref.child(hisUid).child(\"Notifications\").child(timestamp).setValue(hashMap)\r\n                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n\r\n                            }\r\n                        }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n                Log.e(SNTPClient.TAG, rawDate);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception ex) {\r\n                Log.e(SNTPClient.TAG, ex.getMessage());\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void addlike () {\r\n        Log.d(TAG, \" like add\");\r\n\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        reference1.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(getString(R.string.field_user_id))\r\n                .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        NumberOfLikes();\r\n        addToHisNotification(\"\" + mphoto.getUser_id(), mphoto.getPhoto_id(), \"Liked your post\");\r\n\r\n\r\n    }\r\n\r\n    private void removeLike () {\r\n        Log.d(TAG, \" like removed\");\r\n\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        reference1.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .removeValue();\r\n        NumberOfLikes();\r\n\r\n\r\n    }\r\n\r\n    private void ifCurrentUserPromoted () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"Promote\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    Log.d(TAG, \" checking current user liked or not: Already liked\");\r\n                    promote.setVisibility(View.GONE);\r\n                    promoted.setVisibility(View.VISIBLE);\r\n\r\n                } else {\r\n                    Log.d(TAG, \" checking current user liked or not: not liked\");\r\n                    promote.setVisibility(View.VISIBLE);\r\n                    promoted.setVisibility(View.GONE);\r\n\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getPhototDetail () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(getString(R.string.dbname_users))\r\n                .child(mphoto.getUser_id());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                users user = dataSnapshot.getValue(users.class);\r\n                mUsername.setText(user.getUsername());\r\n                currentUsername = user.getUsername();\r\n                Glide.with(ViewPostActivity.this)\r\n                        .load(user.getProfile_photo())\r\n                        .placeholder(R.drawable.load)\r\n                        .error(R.drawable.default_image2)\r\n                        .placeholder(R.drawable.load)\r\n                        .into(mProfileImage);\r\n                mcredit.setText(\"© \" + user.getUsername());\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    private void setupWidgets () {\r\n        mTimestamp.setText(mphoto.getDate_created().substring(0, 10));\r\n\r\n        mBackArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n\r\n        mComment.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//\r\n                Intent i = new Intent(ViewPostActivity.this, CommentActivity.class);\r\n                i.putExtra(\"photoId\", mphoto.getPhoto_id());\r\n                i.putExtra(\"userId\", mphoto.getUser_id());\r\n                startActivity(i);\r\n\r\n            }\r\n        });\r\n        mCommentnumber.setText(String.valueOf(comments.size()));\r\n        mCaption.setText(mphoto.getCaption());\r\n        mLikes.setText(mLikesString);\r\n\r\n\r\n    }\r\n\r\n\r\n    private void setupFirebaseAuth () {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n\r\n        mAuthListener = new FirebaseAuth.AuthStateListener() {\r\n            @Override\r\n            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\r\n                FirebaseUser user = firebaseAuth.getCurrentUser();\r\n\r\n                if (user != null) {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n                } else {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                }\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart () {\r\n        super.onStart();\r\n\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStop () {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onPause () {\r\n        super.onPause();\r\n        if (simpleExoPlayer != null) {\r\n            simpleExoPlayer.release();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy () {\r\n        super.onDestroy();\r\n        if (simpleExoPlayer != null) {\r\n            simpleExoPlayer.release();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/ViewPostActivity.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
+++ app/src/main/java/com/orion/orion/ViewPostActivity.java	(date 1605450390258)
@@ -178,7 +178,6 @@
                         @Override
                         public boolean onMenuItemClick(MenuItem item) {
                             Toast.makeText(ViewPostActivity.this, "clicked", Toast.LENGTH_SHORT).show();
-
                             AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);
                             builder.setTitle("Delete");
                             builder.setMessage("Are you sure, you want to delete this Post?");
@@ -249,7 +248,6 @@
 
 
         if (mphoto.getType().equals("photo")) {
-
             mPostImage.setVisibility(View.VISIBLE);
             play2.setVisibility(View.GONE);
             Glide.with(ViewPostActivity.this)
@@ -742,10 +740,8 @@
     }
 
     private void DeletePost() {
-
         progress.setVisibility(View.VISIBLE);
-        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE,
-                WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE, WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
         final int[] x = {0};
         DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();
         reference3.child(getString(R.string.dbname_follower))
@@ -762,18 +758,11 @@
                                         .child(getString(R.string.post_updates))
                                         .child(mphoto.getPhoto_id())
                                         .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());
-                                if (x[0] == snapshot.getChildrenCount()) {
-                                    deleteFurther();
-                                }
+                                if (x[0] == snapshot.getChildrenCount()) deleteFurther();
                             }
-                        } else {
-                            deleteFurther();
-
-                        }
+                        } else deleteFurther();
                     }
-
                     private void deleteFurther() {
-
                         if( !mphoto.getType().equals("photo")){
                             StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getThumbnail());
                             photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {
Index: app/src/main/java/com/orion/orion/Adapters/AdapterComment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.models.Comment;\r\n\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.profile;\r\n\r\nimport java.util.List;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\nimport static com.android.volley.VolleyLog.TAG;\r\n\r\npublic class AdapterComment extends RecyclerView.Adapter<AdapterComment.ViewHolder> {\r\n    private String mAppend = \"\";\r\n\r\n    private Context mContext;\r\n    private List<Comment> comments;\r\n\r\n    public AdapterComment(Context mContext, List<Comment> comments) {\r\n        this.mContext = mContext;\r\n        this.comments = comments;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        View view= LayoutInflater.from(mContext).inflate(R.layout.layout_commets,parent,false);\r\n        return new AdapterComment.ViewHolder(view);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final ViewHolder holder, final int i) {\r\n\r\n        Comment comment= comments.get(i);\r\n\r\n        holder.comment.setText(comment.getComment());\r\n        holder.timestamp.setText(comment.getDate_created().substring(0,10));\r\n\r\n        getUserdetail(comment.getUser_id(),holder.username,holder.profileimage);\r\n\r\n        holder.username.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(mContext, profile.class);\r\n                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));\r\n\r\n                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());\r\n                mContext.startActivity(i);\r\n            }\r\n        });\r\n\r\n        holder.profileimage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(mContext, profile.class);\r\n                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));\r\n\r\n                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());\r\n                mContext.startActivity(i);\r\n            }\r\n        });\r\n\r\n       }\r\n\r\n    private void getUserdetail(String user_id, TextView username, CircleImageView profileimage) {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(mContext.getString(R.string.dbname_user_account_settings))\r\n                .child(user_id);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                    username.setText((dataSnapshot.getValue(users.class).getUsername()));\r\n\r\n                Glide.with(mContext)\r\n                        .load((dataSnapshot.getValue(users.class).getProfile_photo()))\r\n                        .placeholder(R.drawable.load)\r\n                        .error(R.drawable.default_image2)\r\n                        .placeholder(R.drawable.load)\r\n                        .into(profileimage);\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n    @Override\r\n    public long getItemId(int position) {\r\n        Comment photo = comments.get(position);\r\n        return photo.getDate_created().hashCode();\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return comments.size();\r\n    }\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        return position;\r\n    }\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        TextView comment,username,timestamp;\r\n        CircleImageView profileimage;\r\n\r\n        public ViewHolder(@NonNull View convertView) {\r\n            super(convertView);\r\n\r\n            comment=(TextView)convertView.findViewById(R.id.addcomment);\r\n            username=(TextView)convertView.findViewById(R.id.comment_username);\r\n         timestamp=(TextView)convertView.findViewById(R.id.comment_time_posted);\r\n           profileimage=(CircleImageView)convertView.findViewById((R.id.commet_profile_image));\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/Adapters/AdapterComment.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
+++ app/src/main/java/com/orion/orion/Adapters/AdapterComment.java	(date 1605450390236)
@@ -1,17 +1,23 @@
 package com.orion.orion.Adapters;
 
+import android.app.AlertDialog;
 import android.content.Context;
+import android.content.DialogInterface;
 import android.content.Intent;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.ImageButton;
+import android.widget.PopupMenu;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.bumptech.glide.Glide;
+import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.database.DataSnapshot;
 import com.google.firebase.database.DatabaseError;
 import com.google.firebase.database.DatabaseReference;
@@ -19,6 +25,7 @@
 import com.google.firebase.database.Query;
 import com.google.firebase.database.ValueEventListener;
 import com.orion.orion.R;
+import com.orion.orion.ViewPostActivity;
 import com.orion.orion.models.Comment;
 
 import com.orion.orion.models.users;
@@ -32,10 +39,8 @@
 
 public class AdapterComment extends RecyclerView.Adapter<AdapterComment.ViewHolder> {
     private String mAppend = "";
-
     private Context mContext;
     private List<Comment> comments;
-
     public AdapterComment(Context mContext, List<Comment> comments) {
         this.mContext = mContext;
         this.comments = comments;
@@ -44,45 +49,51 @@
     @NonNull
     @Override
     public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
-
-        View view= LayoutInflater.from(mContext).inflate(R.layout.layout_commets,parent,false);
+        View view = LayoutInflater.from(mContext).inflate(R.layout.layout_commets, parent, false);
         return new AdapterComment.ViewHolder(view);
-
     }
 
     @Override
     public void onBindViewHolder(@NonNull final ViewHolder holder, final int i) {
-
-        Comment comment= comments.get(i);
-
+        Comment comment = comments.get(i);
         holder.comment.setText(comment.getComment());
-        holder.timestamp.setText(comment.getDate_created().substring(0,10));
-
-        getUserdetail(comment.getUser_id(),holder.username,holder.profileimage);
-
-        holder.username.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent i = new Intent(mContext, profile.class);
-                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
-
-                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
-                mContext.startActivity(i);
-            }
-        });
-
-        holder.profileimage.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent i = new Intent(mContext, profile.class);
-                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
-
-                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
-                mContext.startActivity(i);
-            }
+        holder.timestamp.setText(comment.getDate_created().substring(0, 10));
+        getUserdetail(comment.getUser_id(), holder.username, holder.profileimage);
+        if(!comment.getUser_id().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) holder.edit.setVisibility(View.GONE);
+        else {
+            PopupMenu popup = new PopupMenu(mContext, holder.edit);
+            popup.getMenuInflater().inflate(R.menu.post_comment, popup.getMenu());
+            holder.edit.setOnClickListener(v -> popup.show());
+            popup.setOnMenuItemClickListener(item -> {
+                Toast.makeText(mContext, "You Clicked : " + item.getTitle(), Toast.LENGTH_SHORT).show();
+                AlertDialog.Builder builder = new AlertDialog.Builder(mContext);
+                builder.setTitle("Delete");
+                builder.setMessage("Are you sure, you want to delete this comment?");
+                builder.setPositiveButton("Delete", new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        Log.d(TAG, "Deleting comment");
+                        DeletePost();
+                    }
+                });
+                builder.setNegativeButton("No", (dialog, which) -> dialog.dismiss());
+                builder.create().show();
+                return true;
+            });
+        }
+        holder.username.setOnClickListener(v -> {
+            Intent i1 = new Intent(mContext, profile.class);
+            i1.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
+            i1.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
+            mContext.startActivity(i1);
         });
-
-       }
+        holder.profileimage.setOnClickListener(v -> {
+            Intent i12 = new Intent(mContext, profile.class);
+            i12.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
+            i12.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
+            mContext.startActivity(i12);
+        });
+    }
 
     private void getUserdetail(String user_id, TextView username, CircleImageView profileimage) {
         DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
@@ -92,29 +103,22 @@
         query.addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
-
-                    username.setText((dataSnapshot.getValue(users.class).getUsername()));
-
+                username.setText((dataSnapshot.getValue(users.class).getUsername()));
                 Glide.with(mContext)
                         .load((dataSnapshot.getValue(users.class).getProfile_photo()))
                         .placeholder(R.drawable.load)
                         .error(R.drawable.default_image2)
                         .placeholder(R.drawable.load)
                         .into(profileimage);
-
-
-
             }
-
 
             @Override
             public void onCancelled(@NonNull DatabaseError databaseError) {
                 Log.d(TAG, "Query Cancelled");
             }
         });
-
+    }
 
-    }
     @Override
     public long getItemId(int position) {
         Comment photo = comments.get(position);
@@ -125,30 +129,23 @@
     public int getItemCount() {
         return comments.size();
     }
+
     @Override
     public int getItemViewType(int position) {
         return position;
     }
+
     public class ViewHolder extends RecyclerView.ViewHolder {
-
-        TextView comment,username,timestamp;
+        TextView comment, username, timestamp;
         CircleImageView profileimage;
-
+        ImageButton edit;
         public ViewHolder(@NonNull View convertView) {
             super(convertView);
-
-            comment=(TextView)convertView.findViewById(R.id.addcomment);
-            username=(TextView)convertView.findViewById(R.id.comment_username);
-         timestamp=(TextView)convertView.findViewById(R.id.comment_time_posted);
-           profileimage=(CircleImageView)convertView.findViewById((R.id.commet_profile_image));
-
-
-
-
+            comment = (TextView) convertView.findViewById(R.id.addcomment);
+            username = (TextView) convertView.findViewById(R.id.comment_username);
+            timestamp = (TextView) convertView.findViewById(R.id.comment_time_posted);
+            profileimage = (CircleImageView) convertView.findViewById((R.id.commet_profile_image));
+            edit = (ImageButton) convertView.findViewById(R.id.edit);
         }
     }
-
-
-
-
 }
Index: app/src/main/res/layout/layout_commets.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"\r\n    app:cardBackgroundColor=\"@color/white\"\r\n    app:cardUseCompatPadding=\"true\"\r\n    app:cardCornerRadius=\"5dp\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:background=\"@color/white\">\r\n    <RelativeLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n>\r\n    <de.hdodenhof.circleimageview.CircleImageView\r\n        android:layout_width=\"30dp\"\r\n        android:layout_height=\"30dp\"\r\n        android:id=\"@+id/commet_profile_image\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:layout_marginLeft=\"5dp\"\r\n        app:civ_border_color=\"@color/black\"\r\n        app:civ_border_width=\"0.5dp\"/>\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id/relLayout1\"\r\n        android:layout_toRightOf=\"@+id/commet_profile_image\"\r\n        android:layout_marginTop=\"5dp\"\r\n        >\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginRight=\"60dp\"\r\n        android:layout_marginBottom=\"5dp\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"naman\"\r\n            android:id=\"@+id/comment_username\"\r\n            android:layout_marginLeft=\"15dp\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"14sp\"\r\n            android:textStyle=\"bold\"/>\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"this is a comment\"\r\n            android:layout_marginLeft=\"15dp\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"14sp\"\r\n            android:layout_below=\"@+id/comment_username\"\r\n            android:id=\"@+id/addcomment\"/>\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"3 D\"\r\n            android:layout_marginLeft=\"15dp\"\r\n            android:textColor=\"@color/grey\"\r\n            android:id=\"@+id/comment_time_posted\"\r\n            android:layout_below=\"@+id/addcomment\"\r\n            android:textSize=\"10sp\"\r\n            android:layout_marginTop=\"5dp\"/>\r\n\r\n\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n    </RelativeLayout>\r\n\r\n</androidx.cardview.widget.CardView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_commets.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
+++ app/src/main/res/layout/layout_commets.xml	(date 1605449247631)
@@ -1,76 +1,85 @@
 <?xml version="1.0" encoding="utf-8"?>
 <androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="wrap_content"
     android:layout_height="wrap_content"
+    android:background="@color/white"
     app:cardBackgroundColor="@color/white"
-    app:cardUseCompatPadding="true"
     app:cardCornerRadius="5dp"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:background="@color/white">
+    app:cardUseCompatPadding="true">
+
     <RelativeLayout
         android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
->
-    <de.hdodenhof.circleimageview.CircleImageView
-        android:layout_width="30dp"
-        android:layout_height="30dp"
-        android:id="@+id/commet_profile_image"
-        android:layout_marginTop="5dp"
-        android:layout_marginLeft="5dp"
-        app:civ_border_color="@color/black"
-        app:civ_border_width="0.5dp"/>
-    <RelativeLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:id="@+id/relLayout1"
-        android:layout_toRightOf="@+id/commet_profile_image"
-        android:layout_marginTop="5dp"
-        >
+        android:layout_height="wrap_content">
+
+        <RelativeLayout
+            android:id="@+id/relLayout1"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="5dp"
+            android:layout_toRightOf="@+id/commet_profile_image">
 
-    <RelativeLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginRight="60dp"
-        android:layout_marginBottom="5dp">
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="naman"
-            android:id="@+id/comment_username"
-            android:layout_marginLeft="15dp"
-            android:textColor="@color/black"
-            android:textSize="14sp"
-            android:textStyle="bold"/>
+            <RelativeLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginRight="60dp"
+                android:layout_marginBottom="5dp">
+
+                <TextView
+                    android:id="@+id/comment_username"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="15dp"
+                    android:text="naman"
+                    android:textColor="@color/black"
+                    android:textSize="14sp"
+                    android:textStyle="bold" />
 
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="this is a comment"
-            android:layout_marginLeft="15dp"
-            android:textColor="@color/black"
-            android:textSize="14sp"
-            android:layout_below="@+id/comment_username"
-            android:id="@+id/addcomment"/>
+                <TextView
+                    android:id="@+id/addcomment"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_below="@+id/comment_username"
+                    android:layout_marginLeft="15dp"
+                    android:text="this is a comment"
+                    android:textColor="@color/black"
+                    android:textSize="14sp" />
 
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="3 D"
-            android:layout_marginLeft="15dp"
-            android:textColor="@color/grey"
-            android:id="@+id/comment_time_posted"
-            android:layout_below="@+id/addcomment"
-            android:textSize="10sp"
-            android:layout_marginTop="5dp"/>
-
-
+                <TextView
+                    android:id="@+id/comment_time_posted"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_below="@+id/addcomment"
+                    android:layout_marginLeft="15dp"
+                    android:layout_marginTop="5dp"
+                    android:text="3 D"
+                    android:textColor="@color/grey"
+                    android:textSize="10sp" />
 
 
-    </RelativeLayout>
+            </RelativeLayout>
 
+            <ImageButton
+                android:id="@+id/edit"
+                android:layout_width="wrap_content"
+                android:layout_height="50dp"
+                android:layout_alignParentEnd="true"
+                android:layout_centerVertical="true"
+                android:src="@drawable/ic_eclipse"
+                android:background="@color/white" />
 
-    </RelativeLayout>
+        </RelativeLayout>
 
+        <de.hdodenhof.circleimageview.CircleImageView
+            android:id="@+id/commet_profile_image"
+            android:layout_width="30dp"
+            android:layout_height="30dp"
+            android:layout_marginLeft="5dp"
+            android:layout_marginTop="5dp"
+            app:civ_border_color="@color/black"
+            app:civ_border_width="0.5dp" />
+
     </RelativeLayout>
 
 </androidx.cardview.widget.CardView>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(date 1605447137911)
+++ .idea/compiler.xml	(date 1605447137911)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="1.8" />
+  </component>
+</project>
\ No newline at end of file
Index: app/src/main/java/com/orion/orion/CommentActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.Adapters.AdapterComment;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.util.FirebaseMethods;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.TimeZone;\r\n\r\npublic class CommentActivity extends AppCompatActivity {\r\n    RecyclerView commentRv;\r\n    private ArrayList<Comment> comments;\r\n    private static final String TAG = \"CommentActivity\";\r\n\r\n    private AdapterComment adapterComment;\r\n\r\n\r\n    private ImageView mBackArrow,mCheckMark;\r\n    private EditText mComment;\r\n    private boolean notify = false;\r\n    private  FirebaseMethods mFirebaseMethods;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_comment);\r\n\r\n        Intent i = getIntent();\r\n        String phhotoId = i.getStringExtra(\"photoId\");\r\n        String userId = i.getStringExtra(\"userId\");\r\n        Log.d(TAG, \"onCreate: kol\" + phhotoId + userId);\r\n\r\n        mBackArrow = findViewById(R.id.backarrow);\r\n        mCheckMark = findViewById(R.id.checkMark);\r\n        mComment = findViewById(R.id.comment);\r\n        mFirebaseMethods = new FirebaseMethods(CommentActivity.this);\r\n\r\n\r\n        commentRv = findViewById(R.id.recyclerComment);\r\n        commentRv.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);\r\n        commentRv.setItemViewCacheSize(9);\r\n        commentRv.setDrawingCacheEnabled(true);\r\n        commentRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n        linearLayoutManager.setItemPrefetchEnabled(true);\r\n        linearLayoutManager.setInitialPrefetchItemCount(20);\r\n        commentRv.setLayoutManager(linearLayoutManager);\r\n\r\n        comments=new ArrayList<>();\r\n        adapterComment = new AdapterComment(this,comments);\r\n        adapterComment.setHasStableIds(true);\r\n        commentRv.setAdapter(adapterComment);\r\n\r\n        getComments(phhotoId,userId);\r\n\r\n\r\n        mCheckMark.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (!mComment.getText().toString().equals(\"\")){\r\n                    Log.d(TAG,\"attempting to submit new comment\");\r\n                    notify = true;\r\n\r\n                    addNewComment(mComment.getText().toString(),userId,phhotoId);\r\n\r\n                    mComment.setText(\"\");\r\n\r\n                    closeKeyboard();\r\n                }else{\r\n                    Toast.makeText(CommentActivity.this, \"C'mon..Give a Shoutout\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        mBackArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"onClick: dfg\");\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n    private String getTimeStamp(){\r\n        SimpleDateFormat sdf  = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ENGLISH);\r\n        sdf.setTimeZone(TimeZone.getTimeZone(\"Asia/Kolkata\"));\r\n        return  sdf.format(new Date());\r\n    }\r\n    private void closeKeyboard(){\r\n        View view=this.getCurrentFocus();\r\n        if (view!=null) {\r\n            InputMethodManager imm = (InputMethodManager) this.getSystemService(Context.INPUT_METHOD_SERVICE);\r\n            imm.hideSoftInputFromWindow(view.getWindowToken(),0);\r\n        }\r\n\r\n    }\r\n\r\n    private void addNewComment(String newComment, String userId, String phhotoId){\r\n        Log.d(TAG,\"adding new comment\");\r\n\r\n        DatabaseReference myRef = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n        String commentID = myRef.push().getKey();\r\n\r\n        Comment comment = new Comment();\r\n        comment.setComment(newComment);\r\n        comment.setDate_created(getTimeStamp());\r\n        comment.setUser_id(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n        myRef.child(getString(R.string.dbname_user_photos))\r\n                .child(userId)\r\n                .child(phhotoId)\r\n                .child(getString(R.string.field_comment))\r\n                .child(commentID)\r\n                .setValue(comment);\r\n\r\n        final DatabaseReference data = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        data.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                users user = dataSnapshot.getValue(users.class);\r\n\r\n                if (notify) {\r\n                    mFirebaseMethods.sendNotification(userId, user.getUsername(), \"commented on your post\",\"Comment\");\r\n                }\r\n                notify = false;\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n        addToHisNotification(\"\"+userId,phhotoId,\"commented on your post\");\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    private void addToHisNotification(String hisUid,String pId,String notification){\r\n\r\n        String timestamp=\"\"+System.currentTimeMillis();\r\n\r\n\r\n//        data to put in notification\r\n        HashMap<Object,String> hashMap = new HashMap<>();\r\n        hashMap.put(\"pId\",pId);\r\n\r\n        hashMap.put(\"timeStamp\",timestamp);\r\n\r\n        hashMap.put(\"pUid\",hisUid);\r\n\r\n        hashMap.put(\"notificaton\",notification);\r\n        hashMap.put(\"seen\",\"false\");\r\n\r\n        hashMap.put(\"sUid\",FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"users\");\r\n        ref.child(hisUid).child(\"Notifications\").child(timestamp).setValue(hashMap)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n    private void getComments(String phhotoId, String userId) {\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_user_photos))\r\n                .child(userId)\r\n                .child(phhotoId)\r\n                .child(getString(R.string.field_comment))\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        comments.clear();\r\n                        for (DataSnapshot snapshot1:snapshot.getChildren()){\r\n\r\n                            Comment comment=snapshot1.getValue(Comment.class);\r\n                            Log.d(TAG, \"onDataChange: kil\"+comment.toString());\r\n                            comments.add(comment);\r\n\r\n                        }\r\n\r\n                        adapterComment.notifyDataSetChanged();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/CommentActivity.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
+++ app/src/main/java/com/orion/orion/CommentActivity.java	(date 1605448974033)
@@ -39,31 +39,21 @@
     RecyclerView commentRv;
     private ArrayList<Comment> comments;
     private static final String TAG = "CommentActivity";
-
     private AdapterComment adapterComment;
-
-
-    private ImageView mBackArrow,mCheckMark;
     private EditText mComment;
     private boolean notify = false;
-    private  FirebaseMethods mFirebaseMethods;
+    private FirebaseMethods mFirebaseMethods;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_comment);
-
         Intent i = getIntent();
-        String phhotoId = i.getStringExtra("photoId");
+        String photoId = i.getStringExtra("photoId");
         String userId = i.getStringExtra("userId");
-        Log.d(TAG, "onCreate: kol" + phhotoId + userId);
-
-        mBackArrow = findViewById(R.id.backarrow);
-        mCheckMark = findViewById(R.id.checkMark);
+        Log.d(TAG, "onCreate: kol" + photoId + userId);
         mComment = findViewById(R.id.comment);
         mFirebaseMethods = new FirebaseMethods(CommentActivity.this);
-
-
         commentRv = findViewById(R.id.recyclerComment);
         commentRv.setHasFixedSize(true);
         LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);
@@ -73,157 +63,106 @@
         linearLayoutManager.setItemPrefetchEnabled(true);
         linearLayoutManager.setInitialPrefetchItemCount(20);
         commentRv.setLayoutManager(linearLayoutManager);
-
-        comments=new ArrayList<>();
-        adapterComment = new AdapterComment(this,comments);
+        comments = new ArrayList<>();
+        adapterComment = new AdapterComment(this, comments);
         adapterComment.setHasStableIds(true);
         commentRv.setAdapter(adapterComment);
-
-        getComments(phhotoId,userId);
-
-
-        mCheckMark.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                if (!mComment.getText().toString().equals("")){
-                    Log.d(TAG,"attempting to submit new comment");
-                    notify = true;
-
-                    addNewComment(mComment.getText().toString(),userId,phhotoId);
-
-                    mComment.setText("");
-
-                    closeKeyboard();
-                }else{
-                    Toast.makeText(CommentActivity.this, "C'mon..Give a Shoutout", Toast.LENGTH_SHORT).show();
-                }
-
-            }
+        getComments(photoId, userId);
+        ImageView mCheckMark = findViewById(R.id.checkMark);
+        mCheckMark.setOnClickListener(v -> {
+            if (!mComment.getText().toString().equals("")) {
+                Log.d(TAG, "attempting to submit new comment");
+                notify = true;
+                addNewComment(mComment.getText().toString(), userId, photoId);
+                mComment.setText("");
+                closeKeyboard();
+            } else
+                Toast.makeText(CommentActivity.this, "C'mon..Give a Shoutout", Toast.LENGTH_SHORT).show();
         });
+        ImageView mBackArrow = findViewById(R.id.backarrow);
+        mBackArrow.setOnClickListener(v -> finish());
+    }
 
-        mBackArrow.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Log.d(TAG, "onClick: dfg");
-                finish();
-            }
-        });
-    }
-    private String getTimeStamp(){
-        SimpleDateFormat sdf  = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", Locale.ENGLISH);
+    private String getTimeStamp() {
+        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", Locale.ENGLISH);
         sdf.setTimeZone(TimeZone.getTimeZone("Asia/Kolkata"));
-        return  sdf.format(new Date());
+        return sdf.format(new Date());
     }
-    private void closeKeyboard(){
-        View view=this.getCurrentFocus();
-        if (view!=null) {
+
+    private void closeKeyboard() {
+        View view = this.getCurrentFocus();
+        if (view != null) {
             InputMethodManager imm = (InputMethodManager) this.getSystemService(Context.INPUT_METHOD_SERVICE);
-            imm.hideSoftInputFromWindow(view.getWindowToken(),0);
+            imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
         }
-
     }
 
-    private void addNewComment(String newComment, String userId, String phhotoId){
-        Log.d(TAG,"adding new comment");
-
+    private void addNewComment(String newComment, String userId, String photoId) {
+        Log.d(TAG, "adding new comment");
         DatabaseReference myRef = FirebaseDatabase.getInstance().getReference();
-
-
         String commentID = myRef.push().getKey();
-
         Comment comment = new Comment();
         comment.setComment(newComment);
         comment.setDate_created(getTimeStamp());
         comment.setUser_id(FirebaseAuth.getInstance().getCurrentUser().getUid());
-
-
         myRef.child(getString(R.string.dbname_user_photos))
                 .child(userId)
-                .child(phhotoId)
+                .child(photoId)
                 .child(getString(R.string.field_comment))
                 .child(commentID)
                 .setValue(comment);
-
         final DatabaseReference data = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users))
                 .child(FirebaseAuth.getInstance().getCurrentUser().getUid());
         data.addValueEventListener(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                 users user = dataSnapshot.getValue(users.class);
-
-                if (notify) {
-                    mFirebaseMethods.sendNotification(userId, user.getUsername(), "commented on your post","Comment");
-                }
+                if (notify)
+                    mFirebaseMethods.sendNotification(userId, user.getUsername(), "commented on your post", "Comment");
                 notify = false;
-
             }
 
             @Override
             public void onCancelled(@NonNull DatabaseError databaseError) {
-
             }
         });
-
-        addToHisNotification(""+userId,phhotoId,"commented on your post");
-
-
-
-
-
+        addToHisNotification("" + userId, photoId, "commented on your post");
     }
-    private void addToHisNotification(String hisUid,String pId,String notification){
-
-        String timestamp=""+System.currentTimeMillis();
-
-
+
+    private void addToHisNotification(String hisUid, String pId, String notification) {
+        String timestamp = "" + System.currentTimeMillis();
 //        data to put in notification
-        HashMap<Object,String> hashMap = new HashMap<>();
-        hashMap.put("pId",pId);
-
-        hashMap.put("timeStamp",timestamp);
-
-        hashMap.put("pUid",hisUid);
-
-        hashMap.put("notificaton",notification);
-        hashMap.put("seen","false");
-
-        hashMap.put("sUid",FirebaseAuth.getInstance().getCurrentUser().getUid());
-
-
-
+        HashMap<Object, String> hashMap = new HashMap<>();
+        hashMap.put("pId", pId);
+        hashMap.put("timeStamp", timestamp);
+        hashMap.put("pUid", hisUid);
+        hashMap.put("notificaton", notification);
+        hashMap.put("seen", "false");
+        hashMap.put("sUid", FirebaseAuth.getInstance().getCurrentUser().getUid());
         DatabaseReference ref = FirebaseDatabase.getInstance().getReference("users");
         ref.child(hisUid).child("Notifications").child(timestamp).setValue(hashMap)
-                .addOnSuccessListener(new OnSuccessListener<Void>() {
-                    @Override
-                    public void onSuccess(Void aVoid) {
+                .addOnSuccessListener(aVoid -> {
 
-                    }
-                }).addOnFailureListener(new OnFailureListener() {
-            @Override
-            public void onFailure(@NonNull Exception e) {
+                }).addOnFailureListener(e -> {
 
-            }
         });
-
     }
-    private void getComments(String phhotoId, String userId) {
+
+    private void getComments(String photoId, String userId) {
         DatabaseReference db = FirebaseDatabase.getInstance().getReference();
         db.child(getString(R.string.dbname_user_photos))
                 .child(userId)
-                .child(phhotoId)
+                .child(photoId)
                 .child(getString(R.string.field_comment))
                 .addValueEventListener(new ValueEventListener() {
                     @Override
                     public void onDataChange(@NonNull DataSnapshot snapshot) {
                         comments.clear();
-                        for (DataSnapshot snapshot1:snapshot.getChildren()){
-
-                            Comment comment=snapshot1.getValue(Comment.class);
-                            Log.d(TAG, "onDataChange: kil"+comment.toString());
+                        for (DataSnapshot snapshot1 : snapshot.getChildren()) {
+                            Comment comment = snapshot1.getValue(Comment.class);
+                            Log.d(TAG, "onDataChange: kil" + comment.toString());
                             comments.add(comment);
-
                         }
-
                         adapterComment.notifyDataSetChanged();
                     }
 
@@ -232,7 +171,5 @@
 
                     }
                 });
-
-
     }
-}
+}
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.0.2'\r\n        classpath 'com.google.gms:google-services:4.3.3'\r\n        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.2.0'\r\n        classpath 'com.google.firebase:perf-plugin:1.3.1'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url \"https://jitpack.io\" }\r\n        maven { url \"https://maven.google.com\" }\r\n        \r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision f663a29a8d1c8290d711089b217f1d140de116de)
+++ build.gradle	(date 1605447145790)
@@ -7,7 +7,7 @@
         
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:4.0.2'
+        classpath 'com.android.tools.build:gradle:4.1.1'
         classpath 'com.google.gms:google-services:4.3.3'
         classpath 'com.google.firebase:firebase-crashlytics-gradle:2.2.0'
         classpath 'com.google.firebase:perf-plugin:1.3.1'
Index: app/src/main/java/com/orion/orion/home/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.home;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\n\r\n\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.iid.FirebaseInstanceId;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.Notifications.Token;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.login.login;\r\nimport com.orion.orion.models.Chat;\r\nimport com.orion.orion.util.BottomNaavigationViewHelper;\r\nimport com.orion.orion.Adapters.SectionPagerAdapter;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class MainActivity extends AppCompatActivity\r\n        {\r\n\r\n\r\n    private static final String TAG = \"MainActivity\";\r\n    private static final int HOME_FRAGMENT = 1;\r\n            public TabLayout tablayout;\r\n    private static final int ACTIVITY_NUM = 0;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private ViewPager mViewPager;\r\n    private FrameLayout mFramelayoutl;\r\n    private RelativeLayout mRelativeLayout;\r\n    LinearLayout prom;\r\n    Context context=MainActivity.this;\r\n    String mUid;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Log.d(TAG, \"onCreate:starting.\");\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mViewPager = (ViewPager) findViewById(R.id.viewpager_container);\r\n        mFramelayoutl = (FrameLayout) findViewById(R.id.container);\r\n        mRelativeLayout = (RelativeLayout) findViewById(R.id.relLayoutParent);\r\n\r\n\r\n        setupBottomNavigationView();\r\n        checkCurrentuser(mAuth.getCurrentUser());\r\n        setupFirebaseAuth();\r\n\r\n        setupViewPager();\r\n\r\n\r\n//        update Token\r\n        updateToken(FirebaseInstanceId.getInstance().getToken());\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        checkCurrentuser(mAuth.getCurrentUser());\r\n        super.onResume();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //    *********************FIREBASE***************************\r\n    private void checkCurrentuser(FirebaseUser user) {\r\n        Log.d(TAG, \"checkCurrentuser:check if current user logged in\");\r\n        if (user == null) {\r\n            Intent intent = new Intent(MainActivity.this, login.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n\r\n    }\r\n\r\n            public void updateToken(String token) {\r\n\r\n                try {\r\n\r\n\r\n                    DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"Tokens\");\r\n                    Token mToken = new Token(token);\r\n                    ref.child(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid()).setValue(mToken);\r\n                }catch (NullPointerException e){\r\n                    Log.e(TAG, \"updateToken: \"+e.getMessage() );\r\n                }\r\n\r\n            }\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        mAuthListener = new FirebaseAuth.AuthStateListener() {\r\n            @Override\r\n            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\r\n                FirebaseUser user = firebaseAuth.getCurrentUser();\r\n                checkCurrentuser(user);\r\n                if (user != null) {\r\n\r\n                    Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n                } else {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                    Intent intent = new Intent(MainActivity.this, login.class);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n        mViewPager.setCurrentItem(HOME_FRAGMENT);\r\n        checkCurrentuser(mAuth.getCurrentUser());\r\n\r\n\r\n    }\r\n\r\n            @Override\r\n            public void onDestroy() {\r\n                super.onDestroy();\r\n            }\r\n\r\n            @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n\r\n    //   ************************FIREBASE****************************\r\n\r\n\r\n    //    for adding 3 tabs -media,home,message\r\n    private void setupViewPager() {\r\n        SectionPagerAdapter adapter = new SectionPagerAdapter(getSupportFragmentManager());\r\n        adapter.addFragment(new notificationFragment());\r\n        adapter.addFragment(new Homefragment());\r\n        adapter.addFragment(new messagesfragment());\r\n\r\n        mViewPager.setAdapter(adapter);\r\n\r\n        tablayout = (TabLayout) findViewById(R.id.tabs);\r\n        tablayout.setupWithViewPager(mViewPager);\r\n//        for giving icon to them\r\n        tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);\r\n        tablayout.getTabAt(1).setText(\"ORION\");\r\n        tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);\r\n\r\n\r\n\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(\"Notifications\").orderByKey().limitToLast(1)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n\r\n                                if (snapshot1.child(\"seen\").getValue().equals(\"true\")) {\r\n\r\n                                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);\r\n\r\n                                }\r\n                                if (snapshot1.child(\"seen\").getValue().equals(\"false\")) {\r\n                                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_red);\r\n                                    break;\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n        checkMessageSeen(context);\r\n\r\n\r\n        tablayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n\r\n                if (tablayout.getSelectedTabPosition() == 0) {\r\n\r\n\r\n                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);\r\n\r\n\r\n                    DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                    db.child(getString(R.string.dbname_users))\r\n                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                            .child(\"Notifications\")\r\n                            .orderByChild(\"seen\")\r\n                            .equalTo(\"false\")\r\n                            .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                    if (snapshot.exists()) {\r\n                                        for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                            if (tablayout.getSelectedTabPosition() == 0) {\r\n                                                db.child(getString(R.string.dbname_users))\r\n                                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                        .child(\"Notifications\")\r\n                                                        .child(snapshot1.getKey())\r\n                                                        .child(\"seen\")\r\n                                                        .setValue(\"true\");\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                }\r\n                            });\r\n                }\r\n                if (tablayout.getSelectedTabPosition()==2){\r\n                    checkMessageSeen(context);\r\n                }\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n                tablayout.removeOnTabSelectedListener(this);\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n            public void checkMessageSeen(Context context) {\r\n\r\n                DatabaseReference refer = FirebaseDatabase.getInstance().getReference();\r\n                Query query = refer.child(context.getString(R.string.dbname_Chats))\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n                query.addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                        final long[] x = {0};\r\n                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n\r\n\r\n                            refer.child(context.getString(R.string.dbname_ChatList))\r\n                                    .child(dataSnapshot.getValue().toString())\r\n                                    .orderByKey()\r\n                                    .limitToLast(1)\r\n                                    .addValueEventListener(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot1) {\r\n\r\n\r\n                                            for (DataSnapshot ds : snapshot1.getChildren()) {\r\n\r\n                                                if (ds.exists()) {\r\n\r\n                                                    Chat chat = ds.getValue(Chat.class);\r\n                                                    if (!chat.isIfseen()&&chat.getReceiver().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                                                        tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_red);\r\n                                                        x[0]++;\r\n                                                    }\r\n\r\n                                                }\r\n\r\n\r\n                                            }\r\n\r\n                                        }\r\n\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                                        }\r\n                                    });\r\n\r\n                            if (x[0]>0){\r\n\r\n                                break;\r\n                            }else{\r\n                                tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);\r\n\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            public void hideLayout() {\r\n        mRelativeLayout.setVisibility(View.GONE);\r\n        mFramelayoutl.setVisibility(View.VISIBLE);\r\n\r\n    }\r\n\r\n    public void showLayout() {\r\n        mRelativeLayout.setVisibility(View.VISIBLE);\r\n        mFramelayoutl.setVisibility(View.GONE);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n        if (mFramelayoutl.getVisibility() == View.VISIBLE) {\r\n            showLayout();\r\n        }\r\n    }\r\n\r\n    private void setupBottomNavigationView() {\r\n        Log.d(TAG, \" setupBottomNavigationView:setting up BottomNavigationView\");\r\n        BottomNavigationViewEx bottomNavigationViewEx = (BottomNavigationViewEx) findViewById(R.id.BottomNavViewBar);\r\n        BottomNaavigationViewHelper.setupBottomNavigationView(bottomNavigationViewEx);\r\n        BottomNaavigationViewHelper.enableNavigation(MainActivity.this, this, bottomNavigationViewEx);\r\n\r\n        Menu menu = bottomNavigationViewEx.getMenu();\r\n        MenuItem menuItem = menu.getItem(ACTIVITY_NUM);\r\n        menuItem.setChecked(true);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/home/MainActivity.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
+++ app/src/main/java/com/orion/orion/home/MainActivity.java	(date 1605448404813)
@@ -2,10 +2,13 @@
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.preference.PreferenceManager;
 import androidx.viewpager.widget.ViewPager;
 
 import android.content.Context;
 import android.content.Intent;
+import android.content.IntentSender;
+import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.util.Log;
 import android.view.Menu;
@@ -16,7 +19,17 @@
 import android.widget.RelativeLayout;
 
 
+import com.google.android.material.snackbar.Snackbar;
 import com.google.android.material.tabs.TabLayout;
+import com.google.android.play.core.appupdate.AppUpdateInfo;
+import com.google.android.play.core.appupdate.AppUpdateManager;
+import com.google.android.play.core.appupdate.AppUpdateManagerFactory;
+import com.google.android.play.core.install.InstallState;
+import com.google.android.play.core.install.InstallStateUpdatedListener;
+import com.google.android.play.core.install.model.AppUpdateType;
+import com.google.android.play.core.install.model.InstallStatus;
+import com.google.android.play.core.install.model.UpdateAvailability;
+import com.google.android.play.core.tasks.Task;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
 import com.google.firebase.database.DataSnapshot;
@@ -36,101 +49,211 @@
 
 import java.util.Objects;
 
-public class MainActivity extends AppCompatActivity
-        {
-
+public class MainActivity extends AppCompatActivity {
 
     private static final String TAG = "MainActivity";
+    private static final int ACTIVITY_NUM = 0;
     private static final int HOME_FRAGMENT = 1;
-            public TabLayout tablayout;
-    private static final int ACTIVITY_NUM = 0;
+    private Context mContext;
+
+    public TabLayout tablayout;
     private FirebaseAuth mAuth;
     private FirebaseAuth.AuthStateListener mAuthListener;
     private ViewPager mViewPager;
     private FrameLayout mFramelayoutl;
     private RelativeLayout mRelativeLayout;
-    LinearLayout prom;
-    Context context=MainActivity.this;
-    String mUid;
+    private static final int REQ_CODE_VERSION_UPDATE = 530;
+    private AppUpdateManager appUpdateManager;
+    private InstallStateUpdatedListener installStateUpdatedListener;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-
+        mContext = MainActivity.this;
         Log.d(TAG, "onCreate:starting.");
         mAuth = FirebaseAuth.getInstance();
-        mViewPager = (ViewPager) findViewById(R.id.viewpager_container);
-        mFramelayoutl = (FrameLayout) findViewById(R.id.container);
-        mRelativeLayout = (RelativeLayout) findViewById(R.id.relLayoutParent);
+        mViewPager = findViewById(R.id.viewpager_container);
+        mFramelayoutl = findViewById(R.id.container);
+        mRelativeLayout = findViewById(R.id.relLayoutParent);
 
-
+        checkForAppUpdate();
         setupBottomNavigationView();
         checkCurrentuser(mAuth.getCurrentUser());
         setupFirebaseAuth();
-
         setupViewPager();
-
-
-//        update Token
         updateToken(FirebaseInstanceId.getInstance().getToken());
     }
 
-    @Override
-    protected void onResume() {
-        checkCurrentuser(mAuth.getCurrentUser());
-        super.onResume();
-    }
-
-
-
-
-
-    //    *********************FIREBASE***************************
     private void checkCurrentuser(FirebaseUser user) {
         Log.d(TAG, "checkCurrentuser:check if current user logged in");
         if (user == null) {
             Intent intent = new Intent(MainActivity.this, login.class);
             startActivity(intent);
         }
-
-
     }
 
-            public void updateToken(String token) {
-
-                try {
-
-
-                    DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Tokens");
-                    Token mToken = new Token(token);
-                    ref.child(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid()).setValue(mToken);
-                }catch (NullPointerException e){
-                    Log.e(TAG, "updateToken: "+e.getMessage() );
-                }
-
-            }
+    public void updateToken(String token) {
+        try {
+            DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Tokens");
+            Token mToken = new Token(token);
+            ref.child(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid()).setValue(mToken);
+        } catch (NullPointerException e) {
+            Log.e(TAG, "updateToken: " + e.getMessage());
+        }
+    }
 
     private void setupFirebaseAuth() {
         Log.d(TAG, "setup FirebaseAuth: setting up firebase auth.");
-
         mAuth = FirebaseAuth.getInstance();
-
-        mAuthListener = new FirebaseAuth.AuthStateListener() {
-            @Override
-            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {
-                FirebaseUser user = firebaseAuth.getCurrentUser();
-                checkCurrentuser(user);
-                if (user != null) {
-
-                    Log.d(TAG, "onAuthStateChanged:signed in:" + user.getUid());
-                } else {
-                    Log.d(TAG, "onAuthStateChanged:signed_out");
-                    Intent intent = new Intent(MainActivity.this, login.class);
-                    startActivity(intent);
-                }
+        mAuthListener = firebaseAuth -> {
+            FirebaseUser user = firebaseAuth.getCurrentUser();
+            checkCurrentuser(user);
+            if (user != null) {
+                Log.d(TAG, "onAuthStateChanged:signed in:" + user.getUid());
+            } else {
+                Log.d(TAG, "onAuthStateChanged:signed_out");
+                SharedPreferences settings = getSharedPreferences("shared preferences", Context.MODE_PRIVATE);
+                settings.edit().clear().apply();
+                PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit().clear().apply();
+                Intent intent = new Intent(mContext, login.class);
+                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
+                mAuth.signOut();
+                startActivity(intent);
+            }
+        };
+    }
+
+    private void checkForAppUpdate() {
+        // Creates instance of the manager.
+        appUpdateManager = AppUpdateManagerFactory.create(mContext);
+
+        // Returns an intent object that you use to check for an update.
+        Task<AppUpdateInfo> appUpdateInfoTask = appUpdateManager.getAppUpdateInfo();
+
+        // Create a listener to track request state updates.
+        installStateUpdatedListener = new InstallStateUpdatedListener() {
+            @Override
+            public void onStateUpdate(InstallState installState) {
+                // Show module progress, log state, or install the update.
+                if (installState.installStatus() == InstallStatus.DOWNLOADED)
+                    // After the update is downloaded, show a notification
+                    // and request user confirmation to restart the app.
+                    popupSnackbarForCompleteUpdateAndUnregister();
             }
         };
+
+        // Checks that the platform will allow the specified type of update.
+        appUpdateInfoTask.addOnSuccessListener(appUpdateInfo -> {
+            if (appUpdateInfo.updateAvailability() == UpdateAvailability.UPDATE_AVAILABLE) {
+                // Request the update.
+                if (appUpdateInfo.isUpdateTypeAllowed(AppUpdateType.FLEXIBLE)) {
+
+                    // Before starting an update, register a listener for updates.
+                    appUpdateManager.registerListener(installStateUpdatedListener);
+                    // Start an update.
+                    startAppUpdateFlexible(appUpdateInfo);
+                } else if (appUpdateInfo.isUpdateTypeAllowed(AppUpdateType.IMMEDIATE)) {
+                    // Start an update.
+                    startAppUpdateImmediate(appUpdateInfo);
+                }
+            }
+        });
+    }
+
+    private void startAppUpdateImmediate(AppUpdateInfo appUpdateInfo) {
+        try {
+            appUpdateManager.startUpdateFlowForResult(
+                    appUpdateInfo,
+                    AppUpdateType.IMMEDIATE,
+                    // The current activity making the update request.
+                    this,
+                    // Include a request code to later monitor this update request.
+                    MainActivity.REQ_CODE_VERSION_UPDATE);
+        } catch (IntentSender.SendIntentException e) {
+            e.printStackTrace();
+        }
+    }
+
+    private void startAppUpdateFlexible(AppUpdateInfo appUpdateInfo) {
+        try {
+            appUpdateManager.startUpdateFlowForResult(
+                    appUpdateInfo,
+                    AppUpdateType.FLEXIBLE,
+                    // The current activity making the update request.
+                    this,
+                    // Include a request code to later monitor this update request.
+                    MainActivity.REQ_CODE_VERSION_UPDATE);
+        } catch (IntentSender.SendIntentException e) {
+            e.printStackTrace();
+            unregisterInstallStateUpdListener();
+        }
+    }
+
+    /**
+     * Displays the snackbar notification and call to action.
+     * Needed only for Flexible app update
+     */
+    private void popupSnackbarForCompleteUpdateAndUnregister() {
+        Snackbar snackbar = Snackbar.make(findViewById(R.id.activity_main_layout), "An update has just been downloaded.", Snackbar.LENGTH_INDEFINITE);
+        snackbar.setAction("RESTART", view -> appUpdateManager.completeUpdate());
+        snackbar.setActionTextColor(getResources().getColor(R.color.scheme8));
+        snackbar.show();
+
+        unregisterInstallStateUpdListener();
+    }
+
+    /**
+     * Checks that the update is not stalled during 'onResume()'.
+     * However, you should execute this check at all app entry points.
+     */
+    private void checkNewAppVersionState() {
+        appUpdateManager
+                .getAppUpdateInfo()
+                .addOnSuccessListener(
+                        appUpdateInfo -> {
+                            //FLEXIBLE:
+                            // If the update is downloaded but not installed,
+                            // notify the user to complete the update.
+                            if (appUpdateInfo.installStatus() == InstallStatus.DOWNLOADED) {
+                                popupSnackbarForCompleteUpdateAndUnregister();
+                            }
+
+                            //IMMEDIATE:
+                            if (appUpdateInfo.updateAvailability()
+                                    == UpdateAvailability.DEVELOPER_TRIGGERED_UPDATE_IN_PROGRESS) {
+                                // If an in-app update is already running, resume the update.
+                                startAppUpdateImmediate(appUpdateInfo);
+                            }
+                        });
+
+    }
+
+    /**
+     * Needed only for FLEXIBLE update
+     */
+    private void unregisterInstallStateUpdListener() {
+        if (appUpdateManager != null && installStateUpdatedListener != null)
+            appUpdateManager.unregisterListener(installStateUpdatedListener);
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, final int resultCode, Intent intent) {
+        super.onActivityResult(requestCode, resultCode, intent);
+        if (requestCode == REQ_CODE_VERSION_UPDATE && resultCode != RESULT_OK) {
+            //RESULT_OK / RESULT_CANCELED / RESULT_IN_APP_UPDATE_FAILED
+            Log.d(TAG, "Update flow failed! Result code: " + resultCode);
+            // If the update is cancelled or fails,
+            // you can request to start the update again.
+            unregisterInstallStateUpdListener();
+        }
+    }
+
+    @Override
+    protected void onResume() {
+        checkCurrentuser(mAuth.getCurrentUser());
+        checkNewAppVersionState();
+        super.onResume();
     }
 
     @Override
@@ -139,16 +262,15 @@
         mAuth.addAuthStateListener(mAuthListener);
         mViewPager.setCurrentItem(HOME_FRAGMENT);
         checkCurrentuser(mAuth.getCurrentUser());
-
-
     }
 
-            @Override
-            public void onDestroy() {
-                super.onDestroy();
-            }
+    @Override
+    public void onDestroy() {
+        unregisterInstallStateUpdListener();
+        super.onDestroy();
+    }
 
-            @Override
+    @Override
     public void onStop() {
         super.onStop();
         if (mAuthListener != null) {
@@ -165,42 +287,30 @@
         adapter.addFragment(new notificationFragment());
         adapter.addFragment(new Homefragment());
         adapter.addFragment(new messagesfragment());
-
         mViewPager.setAdapter(adapter);
-
         tablayout = (TabLayout) findViewById(R.id.tabs);
         tablayout.setupWithViewPager(mViewPager);
-//        for giving icon to them
         tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
         tablayout.getTabAt(1).setText("ORION");
         tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);
-
-
-
         DatabaseReference db = FirebaseDatabase.getInstance().getReference();
-        db.child(getString(R.string.dbname_users))
-                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                .child("Notifications").orderByKey().limitToLast(1)
+        db.child(getString(R.string.dbname_users)).child(mAuth.getCurrentUser().getUid())
+                .child("Notifications")
+                .orderByKey()
+                .limitToLast(1)
                 .addValueEventListener(new ValueEventListener() {
                     @Override
                     public void onDataChange(@NonNull DataSnapshot snapshot) {
                         if (snapshot.exists()) {
                             for (DataSnapshot snapshot1 : snapshot.getChildren()) {
-
-                                if (snapshot1.child("seen").getValue().equals("true")) {
-
-                                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
-
-                                }
+                                if (snapshot1.child("seen").getValue().equals("true")) tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
                                 if (snapshot1.child("seen").getValue().equals("false")) {
                                     tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_red);
                                     break;
                                 }
-
                             }
                         }
                     }
-
 
                     @Override
                     public void onCancelled(@NonNull DatabaseError error) {
@@ -208,19 +318,12 @@
                     }
                 });
 
-        checkMessageSeen(context);
-
-
+        checkMessageSeen(mContext);
         tablayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
             @Override
             public void onTabSelected(TabLayout.Tab tab) {
-
                 if (tablayout.getSelectedTabPosition() == 0) {
-
-
                     tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
-
-
                     DatabaseReference db = FirebaseDatabase.getInstance().getReference();
                     db.child(getString(R.string.dbname_users))
                             .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
@@ -250,95 +353,66 @@
                                 }
                             });
                 }
-                if (tablayout.getSelectedTabPosition()==2){
-                    checkMessageSeen(context);
-                }
+                if (tablayout.getSelectedTabPosition() == 2) checkMessageSeen(mContext);
             }
-
 
             @Override
             public void onTabUnselected(TabLayout.Tab tab) {
-
-
             }
 
             @Override
             public void onTabReselected(TabLayout.Tab tab) {
                 tablayout.removeOnTabSelectedListener(this);
-
             }
         });
-
-
     }
 
-            public void checkMessageSeen(Context context) {
-
-                DatabaseReference refer = FirebaseDatabase.getInstance().getReference();
-                Query query = refer.child(context.getString(R.string.dbname_Chats))
-                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid());
-
-                query.addValueEventListener(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-
-                        final long[] x = {0};
-                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {
-
-
-                            refer.child(context.getString(R.string.dbname_ChatList))
-                                    .child(dataSnapshot.getValue().toString())
-                                    .orderByKey()
-                                    .limitToLast(1)
-                                    .addValueEventListener(new ValueEventListener() {
-                                        @Override
-                                        public void onDataChange(@NonNull DataSnapshot snapshot1) {
-
-
-                                            for (DataSnapshot ds : snapshot1.getChildren()) {
-
-                                                if (ds.exists()) {
-
-                                                    Chat chat = ds.getValue(Chat.class);
-                                                    if (!chat.isIfseen()&&chat.getReceiver().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {
-                                                        tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_red);
-                                                        x[0]++;
-                                                    }
-
-                                                }
-
-
-                                            }
-
-                                        }
-
+    public void checkMessageSeen(Context context) {
+        DatabaseReference refer = FirebaseDatabase.getInstance().getReference();
+        Query query = refer.child(context.getString(R.string.dbname_Chats))
+                .child(mAuth.getCurrentUser().getUid());
+        query.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                final long[] x = {0};
+                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {
+                    refer.child(context.getString(R.string.dbname_ChatList))
+                            .child(dataSnapshot.getValue().toString())
+                            .orderByKey()
+                            .limitToLast(1)
+                            .addValueEventListener(new ValueEventListener() {
+                                @Override
+                                public void onDataChange(@NonNull DataSnapshot snapshot1) {
+                                    for (DataSnapshot ds : snapshot1.getChildren()) {
+                                        if (ds.exists()) {
+                                            Chat chat = ds.getValue(Chat.class);
+                                            if (!chat.isIfseen() && chat.getReceiver().equals(mAuth.getCurrentUser().getUid())) {
+                                                tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_red);
+                                                x[0]++;
+                                            }
+                                        }
+                                    }
+                                }
 
-                                        @Override
-                                        public void onCancelled(@NonNull DatabaseError databaseError) {
+                                @Override
+                                public void onCancelled(@NonNull DatabaseError databaseError) {
 
-                                        }
-                                    });
+                                }
+                            });
 
-                            if (x[0]>0){
-
-                                break;
-                            }else{
-                                tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);
-
-                            }
-
-                        }
-                    }
+                    if (x[0] > 0) break;
+                    else tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);
+                }
+            }
 
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
 
-                    }
-                });
-
-            }
+            }
+        });
+    }
 
-            public void hideLayout() {
+    public void hideLayout() {
         mRelativeLayout.setVisibility(View.GONE);
         mFramelayoutl.setVisibility(View.VISIBLE);
 
@@ -347,15 +421,12 @@
     public void showLayout() {
         mRelativeLayout.setVisibility(View.VISIBLE);
         mFramelayoutl.setVisibility(View.GONE);
-
     }
 
     @Override
     public void onBackPressed() {
         super.onBackPressed();
-        if (mFramelayoutl.getVisibility() == View.VISIBLE) {
-            showLayout();
-        }
+        if (mFramelayoutl.getVisibility() == View.VISIBLE) showLayout();
     }
 
     private void setupBottomNavigationView() {
@@ -363,11 +434,8 @@
         BottomNavigationViewEx bottomNavigationViewEx = (BottomNavigationViewEx) findViewById(R.id.BottomNavViewBar);
         BottomNaavigationViewHelper.setupBottomNavigationView(bottomNavigationViewEx);
         BottomNaavigationViewHelper.enableNavigation(MainActivity.this, this, bottomNavigationViewEx);
-
         Menu menu = bottomNavigationViewEx.getMenu();
         MenuItem menuItem = menu.getItem(ACTIVITY_NUM);
         menuItem.setChecked(true);
     }
-
-
-}
+}
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n  <component name=\"SuppressABINotification\">\r\n    <option name=\"modulesWithSuppressedNotConfigured\">\r\n      <set>\r\n        <option value=\"app\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
+++ .idea/misc.xml	(date 1605447137889)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/res/menu/post_comment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/post_comment.xml	(date 1605450034567)
+++ app/src/main/res/menu/post_comment.xml	(date 1605450034567)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <item
+        android:id="@+id/one"
+        android:title="Delete Comment" />
+</menu>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
+++ .idea/gradle.xml	(date 1605447459756)
@@ -5,6 +5,7 @@
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
         <option name="testRunner" value="PLATFORM" />
+        <option name="disableWrapperSourceDistributionNotification" value="true" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="gradleJvm" value="1.8" />
@@ -15,6 +16,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Fri Jul 17 18:20:13 IST 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.1.1-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision f663a29a8d1c8290d711089b217f1d140de116de)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1605447145796)
@@ -1,6 +1,6 @@
-#Fri Jul 17 18:20:13 IST 2020
+#Sun Nov 15 19:02:25 IST 2020
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.1.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\napply plugin: 'com.google.firebase.firebase-perf'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion '30.0.2'\r\n    defaultConfig {\r\n        applicationId \"com.orion.orion\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        multiDexEnabled true\r\n\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'\r\n    implementation 'com.google.firebase:firebase-auth:19.4.0'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    def multidex_version = \"2.0.1\"\r\n    implementation \"androidx.multidex:multidex:$multidex_version\"\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n\r\n    implementation 'com.github.judemanutd:autostarter:1.0.3'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n\r\n    implementation 'com.google.firebase:firebase-database:19.5.0'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.0'\r\n    implementation 'com.google.firebase:firebase-messaging:20.3.0'\r\n    implementation 'com.google.firebase:firebase-firestore:21.7.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-crashlytics:17.1.1'\r\n    implementation 'com.google.firebase:firebase-analytics:17.4.4'\r\n    implementation 'com.google.firebase:firebase-perf:19.0.8'\r\n    testImplementation 'junit:junit:4.13.1'\r\n    androidTestImplementation 'androidx.test:runner:1.3.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.google.android.gms:play-services-location:17.1.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n    //animations\r\n    implementation 'com.daimajia.easing:library:2.4@aar'\r\n    implementation 'com.daimajia.androidanimations:library:2.4@aar'\r\n\r\n\r\n//exoplayer\r\n    implementation 'com.google.android.exoplayer:exoplayer:2.11.7'\r\n    implementation 'com.danikula:videocache:2.7.1'\r\n\r\n    //VideoCompressor + kotlin\r\n    implementation 'com.github.AbedElazizShe:LightCompressor:0.7.5'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'\r\n\r\n    implementation 'androidx.preference:preference:1.1.1'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision f663a29a8d1c8290d711089b217f1d140de116de)
+++ app/build.gradle	(date 1605447427332)
@@ -79,4 +79,7 @@
     implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
 
     implementation 'androidx.preference:preference:1.1.1'
+
+    //    update
+    implementation 'com.google.android.play:core:1.6.1'
 }
