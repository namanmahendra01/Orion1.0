Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <color name=\"gray_scale\">#8affffff</color>\r\n    <color name=\"progress_max_active\">@color/white</color>\r\n    <color name=\"progress_primary\">@color/white</color>\r\n    <color name=\"progress_secondary\">@color/gray_scale</color>\r\n    <declare-styleable name=\"StoriesProgressView2\">\r\n        <attr name=\"progressCount\" format=\"integer|reference\" />\r\n    </declare-styleable>\r\n\r\n    <dimen name=\"progress_bar_height\">2dp</dimen>\r\n    <string name=\"app_name\">Orion</string>\r\n\r\n    <!--    Databases-->\r\n\r\n    <string name=\"edit_profile\">Edit Pofile</string>\r\n    <string name=\"sign_out\">Sign Out</string>\r\n    <string name=\"profie_fragment\">Profile</string>\r\n    <string name=\"view_post_fragment\">View Post</string>\r\n    <string name=\"calling_activity\">calling_activity</string>\r\n    <string name=\"profile_activity\">profile_activity</string>\r\n\r\n    <string name=\"confirm_password_dialog\">ConfirmPasswordDialog</string>\r\n\r\n\r\n    <string name=\"selected_image\">selected_image</string>\r\n    <string name=\"selected_bitmap\">selected_bitmap</string>\r\n\r\n    <string name=\"return_to_fragment\">return_to_fragment</string>\r\n    <string name=\"activity_number\">activity_number</string>\r\n\r\n    <string name=\"comments\">Comments</string>\r\n    <string name=\"view_comment_fragment\">View Comments</string>\r\n\r\n    <string name=\"search_activity\">Search Activity</string>\r\n    <string name=\"intent_user\">intent_user</string>\r\n    <string name=\"view_profile_fragment\">ViewProfile</string>\r\n\r\n    <string name=\"bundle_user_accountsetting\">bundle_user_accountsetting</string>\r\n    <string name=\"bundle_photo\">bundle_photo</string>\r\n    <string name=\"home\">Home Activity</string>\r\n    <string name=\"his_UID\">his_UID</string>\r\n\r\n    <string name=\"entryfee_prompt\">Select here</string>\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n\r\n\r\n    <!-- Databses names-->\r\n    <string name=\"dbname_users\">users</string>\r\n    <string name=\"dbname_contests\">Contests</string>\r\n    <string name=\"dbname_follower\">followers</string>\r\n    <string name=\"dbname_following\">following</string>\r\n    <string name=\"dbname_user_photos\">user_photos</string>\r\n    <string name=\"dbname_contestlist\">ContestList</string>\r\n    <string name=\"dbname_participantList\">ParticipantList</string>\r\n    <string name=\"dbname_leaderboard\">Leaderboard</string>\r\n    <string name=\"dbname_Chats\">Chats</string>\r\n    <string name=\"dbname_request\">Requests</string>\r\n    <string name=\"dbname_promote\">Promote</string>\r\n    <string name=\"dbname_reports\">Reports</string>\r\n    <string name=\"dbname_ChatList\">ChatList</string>\r\n    <string name=\"db_topUsersParams\">db_topUsersParams</string>\r\n    <string name=\"dbname_username\">username</string>\r\n\r\n\r\n    <!-- Field Names -->\r\n    <string name=\"field_followers\">f</string>\r\n    <string name=\"field_promotes\">pmt</string>\r\n    <string name=\"field_contest_title\">ct</string>\r\n    <string name=\"field_contest_organized_by\">cob</string>\r\n    <string name=\"field_contest_description\">cd</string>\r\n    <string name=\"field_all_time\">at</string>\r\n    <string name=\"field_yearly\">y</string>\r\n    <string name=\"field_last_month\">lm</string>\r\n    <string name=\"field_this_month\">tm</string>\r\n    <string name=\"field_last_week\">lw</string>\r\n    <string name=\"field_this_week\">tw</string>\r\n    <string name=\"field_contest\">c</string>\r\n    <string name=\"field_last_updated\">lu</string>\r\n    <string name=\"field_last_known_location\">lkl</string>\r\n    <string name=\"field_month\">m</string>\r\n    <string name=\"field_country\">cntry</string>\r\n    <string name=\"field_city\">cty</string>\r\n    <string name=\"field_area\">area</string>\r\n    <string name=\"field_domain\">d</string>\r\n    <string name=\"field_post\">p</string>\r\n    <string name=\"post_updates\">pu</string>\r\n    <string name=\"thumbnail\">t</string>\r\n    <string name=\"type\">ty</string>\r\n    <string name=\"field_last_updated_topUsers\">luu</string>\r\n    <string name=\"field_overall\">Overall</string>\r\n    <string name=\"field_completed\">cmp</string>\r\n    <string name=\"contest_update\">cu</string>\r\n    <string name=\"changedFollowers\">cf</string>\r\n    <string name=\"changedJoinedContest\">cjc</string>\r\n    <string name=\"changedCreatedContest\">ccc</string>\r\n    <string name=\"field_instagram\">in</string>\r\n    <string name=\"field_facebook\">fb</string>\r\n    <string name=\"field_twitter\">tw</string>\r\n    <string name=\"field_whatsapp\">wa</string>\r\n    <string name=\"db_posts_deleted\">dp</string>\r\n    <string name=\"explore_update\">eu</string>\r\n    <string name=\"field_link1\">l1</string>\r\n    <string name=\"field_link2\">l2</string>\r\n    <string name=\"field_link3\">l3</string>\r\n    <string name=\"created_contest\">cc</string>\r\n    <string name=\"joined_contest\">jc</string>\r\n    <string name=\"voting_list\">vl</string>\r\n    <string name=\"juryMarks\">jm</string>\r\n    <string name=\"field_comment\">cmnt</string>\r\n    <string name=\"profile_photo\">pp</string>\r\n    <string name=\"field_likes\">l</string>\r\n    <string name=\"field_image_path\">ip</string>\r\n    <string name=\"field_username\">u</string>\r\n    <string name=\"field_email\">e</string>\r\n    <string name=\"field_display_name\">dn</string>\r\n    <string name=\"field_user_id\">ui</string>\r\n    <string name=\"field_website\">web</string>\r\n    <string name=\"field_description\">des</string>\r\n    <string name=\"field_phone_number\">pn</string>\r\n    <string name=\"field_Notifications\">n</string>\r\n    <string name=\"field_caption\">cap</string>\r\n    <string name=\"field_date_createdr\">dc</string>\r\n    <string name=\"field_photo_id\">pi</string>\r\n    <string name=\"field_tags\">tg</string>\r\n    <string name=\"field_Participant_List\">pl</string>\r\n    <string name=\"gp_displayer_tittle\">GP:GENUINE PERCENTAGE</string>\r\n    <string name=\"delete_message_prompt\">Are you sure, you want to delete this message?</string>\r\n    <string name=\"delete_post_prompt\">Are you sure, you want to delete this Post?</string>\r\n    <string name=\"remove_promotion_prompt\">\"Are you sure, you want to remove this Promotion?\"</string>\r\n    <string name=\"promotion_prompt\">\"Are you sure, you want to promote this Post?\"</string>\r\n\r\n    <string name=\"field_contest_completed\">c_cmp</string>\r\n    <string name=\"field_contest_reports\">c_rprt</string>\r\n    <string name=\"field_contest_report_list\">rl</string>\r\n    <string name=\"report_prompt\">Are you sure, you want to Report this Contest?</string>\r\n    <string name=\"report_post_prompt\">Are you sure, you want to Report this Post?</string>\r\n\r\n    <string name=\"gp_diplayer_description\">This is the percentage showing how much genuine this host is.</string>\r\n    <string name=\"field_total_voters_list\">tvl</string>\r\n    <string name=\"delete_notification_prompt\">Are you sure, you want to delete this Notification?</string>\r\n    <string name=\"remove_participant_prompt\">Are you sure, you want to remove this Participant?</string>\r\n    <string name=\"field_status\">st</string>\r\n    <string name=\"field_joined_updates\">ju</string>\r\n    <string name=\"reject_participant_prompt\">Are you sure, you want to Reject this Participant?</string>\r\n    <string name=\"allow_participanr_prompt\">Are you sure, you want to Allow this Participant?</string>\r\n    <string name=\"field_open_for\">of</string>\r\n    <string name=\"field_view\">v</string>\r\n    <string name=\"field_total_score\">ts</string>\r\n    <string name=\"field_rule\">rul</string>\r\n    <string name=\"field_contest_created_updates\">ccu</string>\r\n    <string name=\"field_contest_joined_updates\">cju</string>\r\n    <string name=\"field_result\">r</string>\r\n    <string name=\"field_media_link\">ml</string>\r\n    <string name=\"field_jury_pic_1\">jp1</string>\r\n    <string name=\"field_jury_pic_2\">jp2</string>\r\n    <string name=\"field_jury_pic_3\">jp3</string>\r\n    <string name=\"field_poster\">po</string>\r\n    <string name=\"field_id_link\">il</string>\r\n    <string name=\"field_contest_judged\">cj</string>\r\n    <string name=\"field_contest_wins\">cw</string>\r\n    <string name=\"field_contest_participated\">cp</string>\r\n    <string name=\"field_sender_ID\">sid</string>\r\n    <string name=\"field_receiver_ID\">rid</string>\r\n    <string name=\"field_message\">msg</string>\r\n    <string name=\"field_timestamp\">tim</string>\r\n    <string name=\"field_if_seen\">ifs</string>\r\n    <string name=\"field_message_ID\">mid</string>\r\n    <string name=\"field_entry_fee\">ef</string>\r\n    <string name=\"field_contest_ID\">ci</string>\r\n    <string name=\"field_vote_type\">vt</string>\r\n    <string name=\"field_registration_begin\">rb</string>\r\n    <string name=\"field_registration_end\">re</string>\r\n    <string name=\"field_voting_begin\">vb</string>\r\n    <string name=\"field_voting_end\">ve</string>\r\n    <string name=\"field_max_participant_limit\">mlt</string>\r\n    <string name=\"field_winners_declare\">wd</string>\r\n    <string name=\"field_file_type\">ft</string>\r\n    <string name=\"field_total_prize\">tp</string>\r\n    <string name=\"field_place1_prize\">p1</string>\r\n    <string name=\"field_place2_prize\">p2</string>\r\n    <string name=\"field_place3_prize\">p3</string>\r\n    <string name=\"field_jury_name_1\">jn1</string>\r\n    <string name=\"field_jury_name_2\">jn2</string>\r\n    <string name=\"field_jury_name_3\">jn3</string>\r\n    <string name=\"field_host\">hst</string>\r\n    <string name=\"field_college\">clg</string>\r\n    <string name=\"field_joining_ID\">ji</string>\r\n    <string name=\"field_jury_comment1\">c1</string>\r\n    <string name=\"field_jury_comment2\">c2</string>\r\n    <string name=\"field_jury_comment3\">c3</string>\r\n    <string name=\"field_jury_1\">j1</string>\r\n    <string name=\"field_jury_2\">j2</string>\r\n    <string name=\"field_jury_3\">j3</string>\r\n    <string name=\"field_notification_message\">not</string>\r\n\r\n    <string name=\"field_promotion_time_start\">tiS</string>\r\n    <string name=\"field_promotion_time_end\">tiE</string>\r\n    <string name=\"field_promoter_ID\">pID</string>\r\n    <string name=\"field_story_ID\">stID</string>\r\n    <string name=\"field_rating\">rat</string>\r\n    <string name=\"field_unfollowed_Me\">um</string>\r\n    <string name=\"Privacy_Policy\">https://drive.google.com/file/d/1Kat9jq_H9vXxNWXmKfP4N3XerfpfHkw5/view?usp=sharing</string>\r\n    <string name=\"Terms_and_Condition\">https://drive.google.com/file/d/1t8XtHgyhvhWlWPlqoG8MREP56kFuEhPL/view?usp=sharing</string>\r\n\r\n\r\n    <string-array name=\"entryfee\">\r\n        <item>Select here</item>\r\n        <item>Free</item>\r\n        <item>Paid</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"entryfee2\">\r\n        <item>Overall</item>\r\n        <item>Free</item>\r\n        <item>Paid</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"domain\">\r\n        <item>All</item>\r\n        <item>Speaker</item>\r\n        <item>Chef</item>\r\n        <item>Cinematographer</item>\r\n        <item>Dancer</item>\r\n        <item>Instrument Player</item>\r\n        <item>Editor</item>\r\n        <item>Fashion Designer</item>\r\n        <item>Actor</item>\r\n        <item>Film maker</item>\r\n        <item>Gamer</item>\r\n        <item>Makeup Artist</item>\r\n        <item>Model</item>\r\n        <item>Singer</item>\r\n        <item>Musician</item>\r\n        <item>Sketch Artist</item>\r\n        <item>Poet</item>\r\n        <item>Photographer</item>\r\n        <item>Rapper</item>\r\n        <item>Sports</item>\r\n        <item>Writer</item>\r\n        <item>Digital Art</item>\r\n\r\n\r\n    </string-array>\r\n    <string-array name=\"domain2\">\r\n        <item>Overall</item>\r\n        <item>Speaker</item>\r\n        <item>Chef</item>\r\n        <item>Cinematographer</item>\r\n        <item>Dancer</item>\r\n        <item>Instrument Player</item>\r\n        <item>Editor</item>\r\n        <item>Fashion Designer</item>\r\n        <item>Actor</item>\r\n        <item>Film maker</item>\r\n        <item>Gamer</item>\r\n        <item>Makeup Artist</item>\r\n        <item>Model</item>\r\n        <item>Singer</item>\r\n        <item>Musician</item>\r\n        <item>Sketch Artist</item>\r\n        <item>Poet</item>\r\n        <item>Photographer</item>\r\n        <item>Rapper</item>\r\n        <item>Sports</item>\r\n        <item>Writer</item>\r\n        <item>Digital Art</item>\r\n\r\n    </string-array>\r\n\r\n    <string-array name=\"juryNumber\">\r\n        <item>Select here</item>\r\n        <item>1</item>\r\n        <item>2</item>\r\n        <item>3</item>\r\n\r\n    </string-array>\r\n\r\n    <string-array name=\"prize\">\r\n        <item>Select here</item>\r\n        <item>No</item>\r\n        <item>Yes</item>\r\n\r\n    </string-array>\r\n\r\n\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
+++ app/src/main/res/values/strings.xml	(date 1606028004973)
@@ -201,6 +201,7 @@
     <string name="field_unfollowed_Me">um</string>
     <string name="Privacy_Policy">https://drive.google.com/file/d/1Kat9jq_H9vXxNWXmKfP4N3XerfpfHkw5/view?usp=sharing</string>
     <string name="Terms_and_Condition">https://drive.google.com/file/d/1t8XtHgyhvhWlWPlqoG8MREP56kFuEhPL/view?usp=sharing</string>
+    <string name="orion_team_user_id">VGk6jAJMZhbxAYO5zqU6OGqaTXO2</string>
 
 
     <string-array name="entryfee">
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Add project specific ProGuard rules here.\r\n# You can control the set of applied configuration files using the\r\n# proguardFiles setting in build.gradle.\r\n#\r\n# For more details, see\r\n#   http://developer.android.com/guide/developing/tools/proguard.html\r\n\r\n# If your project uses WebView with JS, uncomment the following\r\n# and specify the fully qualified class name to the JavaScript interface\r\n# class:\r\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\r\n#   public *;\r\n#}\r\n\r\n# Uncomment this to preserve the line number information for\r\n# debugging stack traces.\r\n#-keepattributes SourceFile,LineNumberTable\r\n\r\n# If you keep the line number information, uncomment this to\r\n# hide the original source file name.\r\n#-renamesourcefileattribute SourceFile\r\n-keep public class * implements com.bumptech.glide.module.GlideModule\r\n-keep class * extends com.bumptech.glide.module.AppGlideModule {\r\n <init>(...);\r\n}\r\n-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {\r\n  **[] $VALUES;\r\n  public *;\r\n}\r\n-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {\r\n  *** rewind();\r\n}\r\n-keepclassmembers,allowobfuscation class * {\r\n    @com.google.gson.annotations.SerializedName <fields>;\r\n  }\r\n-keep,allowobfuscation interface com.google.gson.annotations.SerializedName\r\n\r\n-dontwarn com.squareup.okhttp.**\r\n\r\n-keep class com.orion.orion** { *; }\r\n-keep class package.model.* { *; }\r\n-keepattributes Annotation,Signature
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
+++ app/proguard-rules.pro	(date 1606027099004)
@@ -39,4 +39,15 @@
 
 -keep class com.orion.orion** { *; }
 -keep class package.model.* { *; }
--keepattributes Annotation,Signature
\ No newline at end of file
+-keepattributes Annotation,Signature
+
+-keepclassmembers,allowshrinking,allowobfuscation class com.android.volley.NetworkDispatcher {
+    void processRequest();
+}
+-keepclassmembers,allowshrinking,allowobfuscation class com.android.volley.CacheDispatcher {
+    void processRequest();
+}
+-assumenosideeffects class android.util.Log {
+    public static *** d(...);
+    public static *** v(...);
+}
\ No newline at end of file
Index: app/src/main/java/com/orion/orion/profile/ViewProfileActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.profile;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.webkit.URLUtil;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.daimajia.androidanimations.library.Techniques;\r\nimport com.daimajia.androidanimations.library.YoYo;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.orion.orion.Adapters.AdapterGridImage;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.home.Chat_Activity;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.Like;\r\nimport com.orion.orion.models.Photo;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.util.FirebaseMethods;\r\nimport com.orion.orion.util.SNTPClient;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.TimeZone;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class ViewProfileActivity extends AppCompatActivity {\r\n\r\n    //standards\r\n    private static final String TAG = \"ProfileViewFragment\";\r\n    private static final int ACTIVITY_NUM = 4;\r\n    ArrayList<Photo> imgURLsList;\r\n    ProgressDialog dialog;\r\n    private Context mContext;\r\n    boolean isFollowing = false;\r\n    int rank = 1;\r\n    //firebase\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseMethods mFirebaseMethods;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private DatabaseReference myRef;\r\n\r\n\r\n    //View Profile Widgets\r\n    private ImageView backButton;\r\n    private TextView mUsername;\r\n    private TextView mDomain;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n    private CircleImageView mProfilePhoto;\r\n    private ImageView mGmailLink;\r\n    private ImageView mInstagramLink;\r\n    private ImageView mFacebookLink;\r\n    private ImageView mTwitterLink;\r\n    private ImageView mWhatsappLink;\r\n    private String gmail;\r\n    private String instagramProfile;\r\n    private String facebookProfile;\r\n    private String twitterProfile;\r\n\r\n    private Button mFollow;\r\n    private Button mMessage;\r\n    private String whatsappNo;\r\n    private TextView mPosts;\r\n    private TextView mFans;\r\n    private TextView mWins;\r\n    private TextView mCreations;\r\n    private TextView mParticipation;\r\n\r\n    private TextView judges;\r\n    private TextView gp;\r\n\r\n    private TextView mDisplayName;\r\n    private TextView mDescription;\r\n    private TextView mLink1;\r\n    private TextView mLink2;\r\n    private TextView mLink3;\r\n    private TextView mRank;\r\n\r\n    private AdapterGridImage adapterGridImage;\r\n    private RecyclerView gridRv;\r\n    private String mUser;\r\n\r\n\r\n    private boolean notify = false;\r\n\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\r\n    @Nullable\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.fragment_viewprofile);\r\n        dialog = ProgressDialog.show(this, \"\", \"Loading Profile...\", true);\r\n        mContext = this;\r\n        mFirebaseMethods = new FirebaseMethods(mContext);\r\n        backButton = findViewById(R.id.back);\r\n\r\n        mUsername = findViewById(R.id.username);\r\n        mDomain = findViewById(R.id.domain);\r\n        mProfilePhoto = findViewById(R.id.profile_photo);\r\n\r\n        mGmailLink = findViewById(R.id.gmail_link);\r\n        mInstagramLink = findViewById(R.id.instagram_link);\r\n        mFacebookLink = findViewById(R.id.facebook_link);\r\n        mTwitterLink = findViewById(R.id.twitter_link);\r\n        mWhatsappLink = findViewById(R.id.whatsapp_link);\r\n\r\n\r\n        mFollow = findViewById(R.id.followButton);\r\n        mMessage = findViewById(R.id.messageButton);\r\n\r\n        mPosts = findViewById(R.id.posts);\r\n        mFans = findViewById(R.id.fans);\r\n        mWins = findViewById(R.id.win);\r\n        mCreations = findViewById(R.id.creations);\r\n        mParticipation = findViewById(R.id.participations);\r\n        mRank = findViewById(R.id.rank);\r\n\r\n        judges = findViewById(R.id.judge);\r\n        gp = findViewById(R.id.gp);\r\n\r\n        mDisplayName = findViewById(R.id.display_name);\r\n        mDescription = findViewById(R.id.description);\r\n        mLink1 = findViewById(R.id.link1);\r\n        mLink2 = findViewById(R.id.link2);\r\n        mLink3 = findViewById(R.id.link3);\r\n\r\n        gridRv = findViewById(R.id.gridRv);\r\n\r\n        gridRv.setHasFixedSize(true);\r\n        GridLayoutManager linearLayoutManager = new GridLayoutManager(this, 3);\r\n        gridRv.setLayoutManager(linearLayoutManager);\r\n        imgURLsList = new ArrayList<>();\r\n        adapterGridImage = new AdapterGridImage(this, imgURLsList);\r\n        linearLayoutManager.setItemPrefetchEnabled(true);\r\n        linearLayoutManager.setInitialPrefetchItemCount(20);\r\n        gridRv.setItemViewCacheSize(9);\r\n        gridRv.setDrawingCacheEnabled(true);\r\n        gridRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n\r\n        adapterGridImage.setHasStableIds(true);\r\n        gridRv.setAdapter(adapterGridImage);\r\n\r\n        try {\r\n            Intent i = getIntent();\r\n            mUser = i.getStringExtra(getString(R.string.intent_user));\r\n            init();\r\n        } catch (NullPointerException e) {\r\n            Log.d(TAG, \"null pointer Exception\" + e.getMessage());\r\n            Toast.makeText(mContext, \"Something went wrong\", Toast.LENGTH_SHORT).show();\r\n            getSupportFragmentManager().popBackStack();\r\n        }\r\n        setupFirebaseAuth();\r\n        isFolllowing();\r\n\r\n        backButton.setOnClickListener(v -> {\r\n            getSupportFragmentManager().popBackStack();\r\n            finish();\r\n        });\r\n\r\n        mFollow.setOnClickListener(v -> {\r\n            YoYo.with(Techniques.FadeIn).duration(500).playOn(mMessage);\r\n            if (isFollowing) {\r\n                isFollowing = false;\r\n//               remove from following list\r\n                SharedPreferences sp = getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n                Gson gson = new Gson();\r\n                String json = sp.getString(\"fl\", null);\r\n                Type type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n                ArrayList<String> list = new ArrayList<String>();\r\n                list = gson.fromJson(json, type);\r\n                if (list == null) {\r\n\r\n                } else {\r\n                    list.remove(mUser);\r\n\r\n                }\r\n//                 save following list\r\n                SharedPreferences.Editor editor = sp.edit();\r\n                json = gson.toJson(list);\r\n                editor.putString(\"fl\", json);\r\n                editor.apply();\r\n\r\n//              update following list\r\n                json = sp.getString(\"removefollowing\", null);\r\n                type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n                ArrayList<String> ulist = new ArrayList<String>();\r\n                ulist = gson.fromJson(json, type);\r\n                if (ulist == null) {\r\n                    ulist = new ArrayList<String>();\r\n                    ulist.add(mUser);\r\n                } else {\r\n                    if (!ulist.contains(mUser)) {\r\n                        ulist.add(mUser);\r\n\r\n                    }\r\n                }\r\n//                save update list\r\n                editor = sp.edit();\r\n                json = gson.toJson(ulist);\r\n                editor.putString(\"removefollowing\", json);\r\n                editor.apply();\r\n\r\n\r\n//              update following list\r\n                json = sp.getString(\"addfollowing\", null);\r\n                type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n                ArrayList<String> ulist2 = new ArrayList<String>();\r\n                ulist2 = gson.fromJson(json, type);\r\n                if (ulist2 == null) {\r\n\r\n                } else {\r\n                    if (ulist2.contains(mUser)) {\r\n                        ulist2.remove(mUser);\r\n//                save update list\r\n                        editor = sp.edit();\r\n                        json = gson.toJson(ulist2);\r\n                        editor.putString(\"addfollowing\", json);\r\n                        editor.apply();\r\n                    }\r\n                }\r\n\r\n\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_following)).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child(mUser).removeValue();\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_follower)).child(mUser).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).removeValue();\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_users)).child(mUser).child(getString(R.string.changedFollowers)).setValue(\"true\");\r\n                mFollow.setText(\"Follow\");\r\n                myRef.child(mContext.getString(R.string.dbname_users))\r\n                        .child(mUser)\r\n                        .child(mContext.getString(R.string.field_Notifications))\r\n                        .orderByKey()\r\n                        .limitToLast(3)\r\n                        .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if (snapshot.exists()) {\r\n                                    for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n                                        if (dataSnapshot.exists() && dataSnapshot.child(mContext.getString(R.string.field_notification_message)).getValue().equals(\"becomes your FAN!\")\r\n                                                && dataSnapshot.child(\"sUid\").getValue().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                                            myRef.child(mContext.getString(R.string.dbname_users))\r\n                                                    .child(mUser)\r\n                                                    .child(mContext.getString(R.string.field_Notifications))\r\n                                                    .child(dataSnapshot.getKey()).removeValue()\r\n                                                    .addOnSuccessListener(aVoid -> Toast.makeText(mContext, \"Notification Deleted\", Toast.LENGTH_SHORT).show())\r\n                                                    .addOnFailureListener(e -> Toast.makeText(mContext, \"Notification not Deleted\", Toast.LENGTH_SHORT).show());\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n            } else {\r\n//               addfollowing list\r\n                isFollowing = true;\r\n                SharedPreferences sp = getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n                Gson gson = new Gson();\r\n                String json = sp.getString(\"fl\", null);\r\n                Type type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n                ArrayList<String> list = new ArrayList<String>();\r\n                list = gson.fromJson(json, type);\r\n                if (list == null) {\r\n                    list = new ArrayList<String>();\r\n                    list.add(mUser);\r\n                } else {\r\n                    if (!list.contains(mUser)) {\r\n                        list.add(mUser);\r\n                    }\r\n                }\r\n//                 save following list\r\n                SharedPreferences.Editor editor = sp.edit();\r\n                json = gson.toJson(list);\r\n                editor.putString(\"fl\", json);\r\n                editor.apply();\r\n//              update following list\r\n                json = sp.getString(\"addfollowing\", null);\r\n                type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n\r\n                ArrayList<String> ulist = new ArrayList<String>();\r\n                ulist = gson.fromJson(json, type);\r\n                if (ulist == null) {\r\n                    ulist = new ArrayList<String>();\r\n                    ulist.add(mUser);\r\n                } else {\r\n                    if (!ulist.contains(mUser)) {\r\n                        ulist.add(mUser);\r\n\r\n                    }\r\n\r\n\r\n                }\r\n//                save update list\r\n                editor = sp.edit();\r\n                json = gson.toJson(ulist);\r\n                editor.putString(\"addfollowing\", json);\r\n                editor.apply();\r\n\r\n\r\n//              update following list\r\n                json = sp.getString(\"removefollowing\", null);\r\n                type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n                ArrayList<String> ulist2 = new ArrayList<String>();\r\n                ulist2 = gson.fromJson(json, type);\r\n                if (ulist2 == null) {\r\n\r\n                } else {\r\n                    if (ulist2.contains(mUser)) {\r\n                        ulist2.remove(mUser);\r\n//                save update list\r\n                        editor = sp.edit();\r\n                        json = gson.toJson(ulist2);\r\n                        editor.putString(\"removefollowing\", json);\r\n                        editor.apply();\r\n                    }\r\n                }\r\n\r\n\r\n                notify = true;\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_following)).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child(mUser).setValue(true);\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_follower)).child(mUser).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).setValue(true);\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_users)).child(mUser).child(getString(R.string.changedFollowers)).setValue(\"true\");\r\n                mFollow.setText(\"Unfollow\");\r\n                final DatabaseReference data = myRef.child(getString(R.string.dbname_users)).child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                data.addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        users user = dataSnapshot.getValue(users.class);\r\n                        if (notify) {\r\n                            mFirebaseMethods.sendNotification(mUser, user.getU(), \"becomes your FAN!\", \"Fan\");\r\n                        }\r\n                        notify = false;\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    }\r\n                });\r\n                addToHisNotification(mUser, \"becomes your FAN!\");\r\n            }\r\n            DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n            Query query1 = reference1.child(getString(R.string.dbname_users)).child(mUser);\r\n            query1.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    users setting = dataSnapshot.getValue(users.class);\r\n                    assert setting != null;\r\n                    setProfileWidgets(setting);\r\n                    setUpInfoBox();\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                }\r\n            });\r\n        });\r\n        mMessage.setOnClickListener(v -> {\r\n            YoYo.with(Techniques.FadeIn).duration(500).playOn(mMessage);\r\n            Intent intent = new Intent(ViewProfileActivity.this, Chat_Activity.class);\r\n            intent.putExtra(getString(R.string.his_UID), mUser);\r\n            intent.putExtra(\"request\", \"no\");\r\n            startActivity(intent);\r\n        });\r\n\r\n        mGmailLink.setOnClickListener(v -> {\r\n            if (gmail != null && !gmail.equals(\"\")) {\r\n                Intent i = new Intent(Intent.ACTION_SEND);\r\n                i.setPackage(\"com.google.android.gm\");\r\n                i.setType(\"message/rfc822\");\r\n                i.putExtra(Intent.EXTRA_EMAIL, new String[]{gmail});\r\n                i.putExtra(Intent.EXTRA_SUBJECT, \"Orion\");\r\n                i.putExtra(Intent.EXTRA_TEXT, \"We from Orion would like to help and connect u with others out there\");\r\n                try {\r\n                    startActivity(Intent.createChooser(i, \"Send mail...\"));\r\n                } catch (android.content.ActivityNotFoundException ex) {\r\n                    Toast.makeText(mContext, \"There are no email clients installed.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n        mInstagramLink.setOnClickListener(v -> {\r\n            Uri uri = Uri.parse(\"http://instagram.com/_u/\" + instagramProfile);\r\n            Intent likeIng = new Intent(Intent.ACTION_VIEW, uri);\r\n            likeIng.setPackage(\"com.instagram.android\");\r\n            try {\r\n                startActivity(likeIng);\r\n            } catch (ActivityNotFoundException e) {\r\n                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"http://instagram.com/xxx\")));\r\n            }\r\n        });\r\n        mFacebookLink.setOnClickListener(v -> {\r\n            try {\r\n                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"fb://profile/426253597411506\"));\r\n                startActivity(intent);\r\n            } catch (Exception e) {\r\n                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"http://www.facebook.com/appetizerandroid\")));\r\n            }\r\n        });\r\n        mTwitterLink.setOnClickListener(v -> {\r\n            Intent intent = null;\r\n            try {\r\n                this.getPackageManager().getPackageInfo(\"com.twitter.android\", 0);\r\n                intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"twitter://user?screen_name=\" + twitterProfile));\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n            } catch (Exception e) {\r\n                intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://twitter.com/USERID_OR_PROFILENAME\"));\r\n            }\r\n            this.startActivity(intent);\r\n        });\r\n        mWhatsappLink.setOnClickListener(v -> {\r\n            if (whatsappNo != null && !whatsappNo.equals(\"\")) {\r\n                String url = \"https://api.whatsapp.com/send?phone=\" + whatsappNo;\r\n                Intent i = new Intent(Intent.ACTION_VIEW);\r\n                i.setData(Uri.parse(url));\r\n                startActivity(i);\r\n            }\r\n        });\r\n        mLink1.setOnClickListener(v -> {\r\n            try {\r\n                Uri uri = Uri.parse(String.valueOf(mLink1.getText()));\r\n                if (!URLUtil.isValidUrl(String.valueOf(mLink1.getText()))) {\r\n                    Toast.makeText(mContext, \" This is not a valid link\", Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                    intent.setData(uri);\r\n                    mContext.startActivity(intent);\r\n                }\r\n            } catch (ActivityNotFoundException e) {\r\n                Toast.makeText(mContext, \" You don't have any browser to open web page\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n        mLink2.setOnClickListener(v -> {\r\n            try {\r\n                Uri uri = Uri.parse(String.valueOf(mLink2.getText()));\r\n                if (!URLUtil.isValidUrl(String.valueOf(mLink2.getText()))) {\r\n                    Toast.makeText(mContext, \" This is not a valid link\", Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                    intent.setData(uri);\r\n                    mContext.startActivity(intent);\r\n                }\r\n            } catch (ActivityNotFoundException e) {\r\n                Toast.makeText(mContext, \" You don't have any browser to open web page\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n        mLink3.setOnClickListener(v -> {\r\n            try {\r\n                Uri uri = Uri.parse(String.valueOf(mLink3.getText()));\r\n                if (!URLUtil.isValidUrl(String.valueOf(mLink3.getText()))) {\r\n                    Toast.makeText(mContext, \" This is not a valid link\", Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                    intent.setData(uri);\r\n                    mContext.startActivity(intent);\r\n                }\r\n            } catch (ActivityNotFoundException e) {\r\n                Toast.makeText(mContext, \" You don't have any browser to open web page\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setUpInfoBox() {\r\n        Log.d(TAG, \"setUpInfoBox: started\");\r\n        getFans();\r\n        getPosts();\r\n        getWins();\r\n        getCreations();\r\n        getParticipation();\r\n        getGP();\r\n        getJudges();\r\n        mRank.setText(String.valueOf(rank));\r\n        getRank();\r\n        dialog.dismiss();\r\n    }\r\n\r\n    private void getJudges() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests))\r\n                .child(mUser)\r\n                .child(getString(R.string.field_contest_judged));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n//                mCreations.setText((int) size);\r\n                    judges.setText(String.valueOf(size));\r\n                }else{\r\n                    judges.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mCreations.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getGP() {\r\n        Query query = myRef.child(mContext.getString(R.string.dbname_contests))\r\n                .child(mUser)\r\n                .child(getString(R.string.field_contest_completed));\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long y = (long) snapshot.getValue();\r\n                    myRef.child(mContext.getString(R.string.dbname_contests))\r\n                            .child(mUser)\r\n                            .child(getString(R.string.field_contest_reports))\r\n                            .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                    if (snapshot.exists()) {\r\n                                        long x = (long) snapshot.getValue();\r\n                                        gp.setText((100 - (((x * 100) / y))) + \"%\");\r\n                                    } else gp.setText(\"100%\");\r\n                                }\r\n\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError error) {\r\n                                    gp.setText(\"100%\");\r\n                                }\r\n                            });\r\n\r\n                } else gp.setText(\"100%\");\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getFans() {\r\n        Query query = myRef.child(getString(R.string.dbname_follower)).child(mUser);\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    int size = (int) snapshot.getChildrenCount();\r\n                    Log.d(TAG, \"setUpInfoBox: fansCount\" + size);\r\n                    if (size == 0) mFans.setText(\"0\");\r\n                    else mFans.setText(String.valueOf(size));\r\n                }else{\r\n                    mFans.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mFans.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getPosts() {\r\n        Query query = myRef.child(getString(R.string.dbname_user_photos)).child(mUser);\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    int size = (int) snapshot.getChildrenCount();\r\n                    Log.d(TAG, \"setUpInfoBox: postsCount\" + size);\r\n                    if (size == 0) mPosts.setText(\"0\");\r\n                    else mPosts.setText(String.valueOf(size));\r\n                }else{\r\n                    mPosts.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mPosts.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getWins() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests)).child(mUser).child(getString(R.string.field_contest_wins));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n                    Log.d(TAG, \"setUpInfoBox: creations\" + size);\r\n//                mCreations.setText((int) size);\r\n                    mWins.setText(String.valueOf(size));\r\n                }else{\r\n                    mWins.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mCreations.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getCreations() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests)).child(mUser).child(getString(R.string.field_contest_completed));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n                    Log.d(TAG, \"setUpInfoBox: creations\" + size);\r\n//                mCreations.setText((int) size);\r\n                    mCreations.setText(String.valueOf(size));\r\n                }else{\r\n                    mCreations.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mCreations.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getParticipation() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests)).child(mUser).child(getString(R.string.field_contest_participated));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n                    Log.d(TAG, \"setUpInfoBox: participationsCount\" + size);\r\n//                mParticipation.setText((int) size);\r\n                    mParticipation.setText(String.valueOf(size));\r\n                }else{\r\n                    mParticipation.setText(\"0\");\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mParticipation.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n    private void getRank() {\r\n        Query query = myRef.child(getString(R.string.dbname_leaderboard)).child(mUser);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                int userRating = (int) (long) snapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_post)).getValue()\r\n                        + (int) (long) snapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_followers)).getValue()\r\n                        + (int) (long) snapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_contest)).getValue();\r\n                Query query1 = myRef.child(getString(R.string.dbname_leaderboard));\r\n                query1.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        for (DataSnapshot singleSnapshot : snapshot.getChildren()) {\r\n                            int rating = (int) (long) singleSnapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_post)).getValue()\r\n                                    + (int) (long) singleSnapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_followers)).getValue()\r\n                                    + (int) (long) singleSnapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_contest)).getValue();\r\n                            if (rating > userRating && !mUser.equals(singleSnapshot.getKey()))\r\n                                updateRank();\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                        mRank.setText(\"?\");\r\n                    }\r\n                });\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mRank.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateRank() {\r\n        rank += 1;\r\n        mRank.setText(String.valueOf(rank));\r\n    }\r\n\r\n    private void init() {\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        Query query1 = reference1.child(getString(R.string.dbname_users)).child(mUser);\r\n        query1.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                users setting = dataSnapshot.getValue(users.class);\r\n                assert setting != null;\r\n                setProfileWidgets(setting);\r\n                setUpInfoBox();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n            }\r\n        });\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos)).child(mUser);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                ArrayList<Photo> photos = new ArrayList<>();\r\n                for (DataSnapshot singleSnapshot : dataSnapshot.getChildren()) {\r\n                    Log.d(TAG, \"onBindViewHolder: \" + dataSnapshot.getChildrenCount());\r\n                    Photo photo = new Photo();\r\n                    Map<String, Object> objectMap = (Map<String, Object>) singleSnapshot.getValue();\r\n                    Log.d(TAG, \"onDataChange: objectMap\" + objectMap);\r\n                    try {\r\n                        photo.setCap(objectMap.get(getString(R.string.field_caption)).toString());\r\n                        photo.setTg(objectMap.get(getString(R.string.field_tags)).toString());\r\n                        photo.setPi(objectMap.get(getString(R.string.field_photo_id)).toString());\r\n                        photo.setUi(objectMap.get(getString(R.string.field_user_id)).toString());\r\n                        photo.setDc(objectMap.get(getString(R.string.field_date_createdr)).toString());\r\n                        photo.setIp(objectMap.get(getString(R.string.field_image_path)).toString());\r\n                        if (objectMap.get(getString(R.string.thumbnail)) != null)\r\n                            photo.setT(objectMap.get(getString(R.string.thumbnail)).toString());\r\n                        photo.setTy(objectMap.get(getString(R.string.type)).toString());\r\n                        ArrayList<Comment> comments = new ArrayList<>();\r\n                        for (DataSnapshot dSnapshot : singleSnapshot.child(getString(R.string.field_comment)).getChildren()) {\r\n                            Comment comment = new Comment();\r\n                            comment.setUi(dSnapshot.getValue(Comment.class).getUi());\r\n                            comment.setC(dSnapshot.getValue(Comment.class).getC());\r\n                            comment.setDc(dSnapshot.getValue(Comment.class).getDc());\r\n                            comments.add(comment);\r\n                        }\r\n                        photo.setComments(comments);\r\n                        List<Like> likeList = new ArrayList<Like>();\r\n                        for (DataSnapshot dSnapshot : singleSnapshot.child(getString(R.string.field_likes)).getChildren()) {\r\n                            Like like = new Like();\r\n                            like.setUi(dSnapshot.getValue(Like.class).getUi());\r\n                            likeList.add(like);\r\n                        }\r\n                        photos.add(photo);\r\n                    } catch (NullPointerException e) {\r\n                        Log.e(TAG, \"null pointer exception\" + e.getMessage());\r\n                    }\r\n                }\r\n                imgURLsList.addAll(photos);\r\n                Log.d(TAG, \"onDataChange: size sdf\" + imgURLsList.size());\r\n                Collections.reverse(imgURLsList);\r\n//                adapterGridImage = new AdapterGridImage(mContext, imgURLsList);\r\n//                adapterGridImage.setHasStableIds(true);\r\n                gridRv.setAdapter(adapterGridImage);\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void addToHisNotification(String hisUid, String notification) {\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n                String str_date = rawDate;\r\n                java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                Date date = null;\r\n                try {\r\n                    date = formatter.parse(str_date);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                String timestamp = String.valueOf(date.getTime());\r\n\r\n//        data to put in notification\r\n                HashMap<Object, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"pId\", \"false\");\r\n\r\n                hashMap.put(mContext.getString(R.string.field_timestamp), timestamp);\r\n\r\n                hashMap.put(\"pUid\", hisUid);\r\n\r\n                hashMap.put(mContext.getString(R.string.field_notification_message), notification);\r\n                hashMap.put(mContext.getString(R.string.field_if_seen), \"false\");\r\n\r\n                hashMap.put(\"sUid\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users));\r\n                ref.child(hisUid).child(getString(R.string.field_Notifications)).child(timestamp).setValue(hashMap)\r\n                        .addOnSuccessListener(aVoid -> {\r\n                        })\r\n                        .addOnFailureListener(e -> {\r\n                        });\r\n                Log.e(SNTPClient.TAG, rawDate);\r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception ex) {\r\n                Log.e(SNTPClient.TAG, ex.getMessage());\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void isFolllowing() {\r\n        mFollow.setText(\"Follow\");\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_following)).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child(mUser);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    mFollow.setText(\"Unfollow\");\r\n                    isFollowing = mFollow.getText().equals(\"Unfollow\");\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void setProfileWidgets(users userSetting) {\r\n        Log.d(TAG, \"onDataChange: \" + userSetting.toString());\r\n        Glide.with(ViewProfileActivity.this)\r\n                .load(userSetting.getPp())\r\n                .placeholder(R.drawable.load)\r\n                .error(R.drawable.default_image2)\r\n                .placeholder(R.drawable.load)\r\n                .thumbnail(0.2f)\r\n                .into(mProfilePhoto);\r\n        mUsername.setText(userSetting.getU());\r\n        mDomain.setText(userSetting.getD());\r\n\r\n        if (userSetting.getDn() == null || userSetting.getDn().equals(\"\"))\r\n            mDisplayName.setVisibility(View.GONE);\r\n        else {\r\n            mDisplayName.setText(userSetting.getDn());\r\n        }\r\n        if (userSetting.getDes() == null || userSetting.getDes().equals(\"\"))\r\n            mDescription.setVisibility(View.GONE);\r\n        else {\r\n            mDescription.setVisibility(View.VISIBLE);\r\n            mDescription.setText(userSetting.getDes());\r\n        }\r\n\r\n        if (userSetting.getl1() == null || userSetting.getl1().equals(\"\"))\r\n            mLink1.setVisibility(View.GONE);\r\n        else mLink1.setText(userSetting.getl1());\r\n        if (userSetting.getl2() == null || userSetting.getl2().equals(\"\"))\r\n            mLink2.setVisibility(View.GONE);\r\n        else mLink2.setText(userSetting.getl2());\r\n        if (userSetting.getl3() == null || userSetting.getl3().equals(\"\"))\r\n            mLink3.setVisibility(View.GONE);\r\n        else mLink3.setText(userSetting.getl3());\r\n\r\n        if (userSetting.getE() == null || userSetting.getE().equals(\"\")) {\r\n//            mWebsite.setVisibility(View.GONE);\r\n            mGmailLink.setClickable(false);\r\n            mGmailLink.setAlpha(0.5f);\r\n        } else {\r\n//            mWebsite.setVisibility(View.VISIBLE);\r\n//            mWebsite.setText(userSetting.getE());\r\n            gmail = userSetting.getE();\r\n        }\r\n\r\n        if (userSetting.getIn() == null || userSetting.getIn().equals(\"\")) {\r\n            mInstagramLink.setClickable(false);\r\n            mInstagramLink.setAlpha(0.5f);\r\n        } else {\r\n            instagramProfile = userSetting.getIn();\r\n        }\r\n\r\n        if (userSetting.getFb() == null || userSetting.getFb().equals(\"\")) {\r\n            mFacebookLink.setClickable(false);\r\n            mFacebookLink.setAlpha(0.5f);\r\n        } else {\r\n            facebookProfile = userSetting.getFb();\r\n\r\n        }\r\n        if (userSetting.getTw() == null || userSetting.getTw().equals(\"\")) {\r\n            mTwitterLink.setClickable(false);\r\n            mTwitterLink.setAlpha(0.5f);\r\n        } else {\r\n            twitterProfile = userSetting.getTw();\r\n        }\r\n\r\n        if (userSetting.getWa() == null || userSetting.getWa().equals(\"\")) {\r\n            mWhatsappLink.setClickable(false);\r\n            mWhatsappLink.setAlpha(0.5f);\r\n        } else {\r\n            whatsappNo = userSetting.getWa();\r\n        }\r\n//        dialog.dismiss();\r\n    }\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mAuthListener = firebaseAuth -> {\r\n            FirebaseUser user = firebaseAuth.getCurrentUser();\r\n            if (user != null) {\r\n                Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n            } else {\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/profile/ViewProfileActivity.java	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
+++ app/src/main/java/com/orion/orion/profile/ViewProfileActivity.java	(date 1606029062134)
@@ -185,6 +185,12 @@
             Toast.makeText(mContext, "Something went wrong", Toast.LENGTH_SHORT).show();
             getSupportFragmentManager().popBackStack();
         }
+        Log.d(TAG, "onCreate: yess2  "+mUser+"  "+getString(R.string.orion_team_user_id));
+
+        if (mUser.equals(getString(R.string.orion_team_user_id))){
+            Log.d(TAG, "onCreate: yess");
+            mFollow.setEnabled(false);
+        }
         setupFirebaseAuth();
         isFolllowing();
 
Index: app/src/main/java/com/orion/orion/util/BottomNaavigationViewHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.util;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.contest.contestMainActivity;\r\nimport com.orion.orion.explore.Explore;\r\nimport com.orion.orion.home.MainActivity;\r\nimport com.orion.orion.leaderboard.LeaderboardActivity;\r\nimport com.orion.orion.profile.profile;\r\n\r\npublic class BottomNaavigationViewHelper {\r\n\r\n    private static final String TAG = \"BottomNavigationViewHel\";\r\n\r\n\r\n    public static void setupBottomNavigationView(BottomNavigationViewEx bottomNavigationViewEx) {\r\n        Log.d(TAG, \"set BottomNavigationView Setting up BottomNavigationView\");\r\n        bottomNavigationViewEx.enableAnimation(true);\r\n        bottomNavigationViewEx.enableItemShiftingMode(true);\r\n        bottomNavigationViewEx.enableShiftingMode(true);\r\n        bottomNavigationViewEx.setTextVisibility(true);\r\n        bottomNavigationViewEx.setTextSize(10);\r\n    }\r\n\r\n    public static void enableNavigation(final Context context, final Activity callingActivity ,BottomNavigationViewEx view) {\r\n        view.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n            public boolean onNavigationItemSelected(MenuItem item) {\r\n\r\n                switch (item.getItemId()) {\r\n\r\n                    case R.id.ic_house:\r\n                        item.setEnabled(false);\r\n                        Intent intent1 = new Intent(context, MainActivity.class);\r\n                        context.startActivity(intent1);\r\n                        break;\r\n\r\n                    case R.id.ic_notification:\r\n                        item.setEnabled(false);\r\n\r\n                        Intent intent2 = new Intent(context, Explore.class);\r\n                        context.startActivity(intent2);\r\n\r\n                        break;\r\n\r\n                    case R.id.ic_contest:\r\n                        item.setEnabled(false);\r\n\r\n                        Intent intent3 = new Intent(context, contestMainActivity.class);\r\n                        context.startActivity(intent3);\r\n                        break;\r\n\r\n                    case R.id.ic_leaderboard:\r\n                        item.setEnabled(false);\r\n\r\n                        Intent intent4 = new Intent(context, LeaderboardActivity.class);\r\n                        context.startActivity(intent4);\r\n\r\n                        break;\r\n\r\n                    case R.id.ic_profile:\r\n                        Intent intent5 = new Intent(context, profile.class);\r\n                        context.startActivity(intent5);\r\n                        break;\r\n                }\r\n                return false;\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/util/BottomNaavigationViewHelper.java	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
+++ app/src/main/java/com/orion/orion/util/BottomNaavigationViewHelper.java	(date 1606037858039)
@@ -6,6 +6,8 @@
 import android.util.Log;
 import android.view.MenuItem;
 
+import androidx.annotation.NonNull;
+
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;
 import com.orion.orion.R;
@@ -18,6 +20,7 @@
 public class BottomNaavigationViewHelper {
 
     private static final String TAG = "BottomNavigationViewHel";
+    static int  curItem,prevItem;
 
 
     public static void setupBottomNavigationView(BottomNavigationViewEx bottomNavigationViewEx) {
@@ -27,47 +30,63 @@
         bottomNavigationViewEx.enableShiftingMode(true);
         bottomNavigationViewEx.setTextVisibility(true);
         bottomNavigationViewEx.setTextSize(10);
+
     }
 
     public static void enableNavigation(final Context context, final Activity callingActivity ,BottomNavigationViewEx view) {
         view.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {
+
             public boolean onNavigationItemSelected(MenuItem item) {
+                curItem= item.getItemId();
 
-                switch (item.getItemId()) {
+                Log.d(TAG, "onNavigationItemSelected: "+curItem+" "+prevItem);
+
+                if (curItem!=prevItem) {
+                    switch (item.getItemId()) {
 
-                    case R.id.ic_house:
-                        item.setEnabled(false);
-                        Intent intent1 = new Intent(context, MainActivity.class);
-                        context.startActivity(intent1);
-                        break;
+                        case R.id.ic_house:
+                            prevItem = curItem;
+                            item.setEnabled(false);
+                            Intent intent1 = new Intent(context, MainActivity.class);
+                            context.startActivity(intent1);
+                            break;
 
-                    case R.id.ic_notification:
-                        item.setEnabled(false);
+                        case R.id.ic_notification:
+                            prevItem = curItem;
+
+                            item.setEnabled(false);
 
-                        Intent intent2 = new Intent(context, Explore.class);
-                        context.startActivity(intent2);
+                            Intent intent2 = new Intent(context, Explore.class);
+                            context.startActivity(intent2);
 
-                        break;
+                            break;
 
-                    case R.id.ic_contest:
-                        item.setEnabled(false);
+                        case R.id.ic_contest:
+                            prevItem = curItem;
+
+                            item.setEnabled(false);
 
-                        Intent intent3 = new Intent(context, contestMainActivity.class);
-                        context.startActivity(intent3);
-                        break;
+                            Intent intent3 = new Intent(context, contestMainActivity.class);
+                            context.startActivity(intent3);
+                            break;
 
-                    case R.id.ic_leaderboard:
-                        item.setEnabled(false);
+                        case R.id.ic_leaderboard:
+                            prevItem = curItem;
+
+                            item.setEnabled(false);
 
-                        Intent intent4 = new Intent(context, LeaderboardActivity.class);
-                        context.startActivity(intent4);
+                            Intent intent4 = new Intent(context, LeaderboardActivity.class);
+                            context.startActivity(intent4);
 
-                        break;
+                            break;
 
-                    case R.id.ic_profile:
-                        Intent intent5 = new Intent(context, profile.class);
-                        context.startActivity(intent5);
-                        break;
+                        case R.id.ic_profile:
+                            prevItem = curItem;
+
+                            Intent intent5 = new Intent(context, profile.class);
+                            context.startActivity(intent5);
+                            break;
+                    }
                 }
                 return false;
             }
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:dist=\"http://schemas.android.com/apk/distribution\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.orion.orion\">\r\n\r\n    <application\r\n        android:name=\".util.MyApplication\"\r\n        android:icon=\"@drawable/orion_logo_png\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@drawable/orion_logo_png\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        tools:targetApi=\"m\">\r\n        <activity android:name=\".profile.Account.FanFolllowing.FanFollowList\" /> <!-- Activities -->\r\n        <!-- Login/Signup Section + Intro part -->\r\n        <activity\r\n            android:name=\".login.login\"\r\n            android:noHistory=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".login.register\"\r\n            android:noHistory=\"true\"/>\r\n        <!-- Home Section -->\r\n        <activity android:name=\".home.Message_Request\" />\r\n        <activity\r\n            android:name=\".home.MainActivity\"\r\n            android:hardwareAccelerated=\"true\" />\r\n        <activity android:name=\".home.Chat_Activity\" />\r\n        <activity\r\n            android:name=\".home.ViewPromoted\"\r\n            android:theme=\"@style/Theme.Transparent\" /> <!-- Explore Section -->\r\n        <activity\r\n            android:name=\".explore.Explore\"\r\n            android:windowSoftInputMode=\"adjustNothing\" /> <!-- Contest Section -->\r\n        <activity android:name=\".contest.create.form\" />\r\n        <activity android:name=\".contest.create.CheckContest\" />\r\n        <activity android:name=\".contest.ViewContestDetails\" />\r\n        <activity android:name=\".contest.joined.JoiningForm\" />\r\n        <activity android:name=\".contest.joined.joined_contest_overview_activity\" />\r\n        <activity android:name=\".contest.ranking\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.Participant_Request\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.contest_evaluation_activity\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.activity_view_media\" />\r\n        <activity android:name=\".contest.result.ResultDeclaredActivity\" />\r\n        <activity android:name=\".contest.jury_voting_media\" />\r\n        <activity android:name=\".contest.public_voting_media\" />\r\n        <activity\r\n            android:name=\".contest.contestMainActivity\"\r\n            android:windowSoftInputMode=\"adjustNothing\" /> <!-- Leaderboard Section -->\r\n        <activity android:name=\".leaderboard.LeaderboardActivity\" /> <!-- Profile Section -->\r\n        <activity\r\n            android:name=\".profile.profile\"\r\n            android:noHistory=\"true\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:launchMode=\"singleTop\" />\r\n        <activity\r\n            android:name=\".profile.ViewProfileActivity\"\r\n            android:launchMode=\"singleTop\" />\r\n        <activity android:name=\".profile.Account.AccountSettingActivity\" />\r\n        <activity android:name=\".profile.Account.EditProfile\" />\r\n        <activity android:name=\".profile.Account.Password_Reset\" />\r\n        <activity android:name=\".profile.Account.Contest\" />\r\n        <activity android:name=\".profile.Account.About\" />\r\n\r\n        <activity\r\n            android:name=\".profile.PostVideoActivity\"\r\n            android:theme=\"@style/MyMaterialThemeProfile\" />\r\n        <activity\r\n            android:name=\".profile.PostPhotoActivity\"\r\n            android:theme=\"@style/MyMaterialThemeProfile\" /> <!-- Extras -->\r\n        <activity android:name=\".CommentActivity\" />\r\n        <activity\r\n            android:name=\".ViewPostActivity\"\r\n            android:launchMode=\"singleTop\" /> <!-- Services -->\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.some_id\"\r\n            android:value=\"some_id\" /> <!-- Meta data -->\r\n        <service\r\n            android:name=\".Notifications.FirebaseMessaging\"\r\n            android:enabled=\"true\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n    </application>\r\n\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n\r\n    <dist:module dist:instant=\"true\" />\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
+++ app/src/main/AndroidManifest.xml	(date 1606027510613)
@@ -6,9 +6,9 @@
 
     <application
         android:name=".util.MyApplication"
-        android:icon="@drawable/orion_logo_png"
+        android:icon="@drawable/orion_logo_png_black"
         android:label="@string/app_name"
-        android:roundIcon="@drawable/orion_logo_png"
+        android:roundIcon="@drawable/orion_logo_png_black"
         android:supportsRtl="true"
         android:theme="@style/AppTheme"
         android:usesCleartextTraffic="true"
Index: app/src/main/java/com/orion/orion/profile/Account/FanFolllowing/FollowingFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.profile.Account.FanFolllowing;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.Adapters.AdapterFollowFanAdapter;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.models.ItemFollow;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\npublic class FollowingFragment extends Fragment {\r\n    private static final String TAG = \"FOLLOWING_FRAGMANT\";\r\n    AdapterFollowFanAdapter adapterFollowFanAdapter;\r\n    private DatabaseReference myRef;\r\n    private SwipeRefreshLayout swipeRefreshLayout;\r\n    private TextView noList;\r\n    private ArrayList<ItemFollow> mLists;\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_users_list, container, false);\r\n\r\n        myRef = FirebaseDatabase.getInstance().getReference();\r\n        swipeRefreshLayout = view.findViewById(R.id.swipeRefresh);\r\n        noList = view.findViewById(R.id.noList);\r\n        RecyclerView mRecyclerView = view.findViewById(R.id.recycler_view);\r\n        mRecyclerView.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());\r\n        mRecyclerView.setLayoutManager(linearLayoutManager);\r\n        mLists = new ArrayList<>();\r\n        adapterFollowFanAdapter = new AdapterFollowFanAdapter(getContext(), mLists);\r\n        adapterFollowFanAdapter.setHasStableIds(true);\r\n        mRecyclerView.setAdapter(adapterFollowFanAdapter);\r\n        swipeRefreshLayout.setRefreshing(true);\r\n        swipeRefreshLayout.setColorSchemeResources(\r\n                R.color.scheme1,\r\n                R.color.scheme2,\r\n                R.color.scheme3,\r\n                R.color.scheme4,\r\n                R.color.scheme5,\r\n                R.color.scheme6,\r\n                R.color.scheme7,\r\n                R.color.scheme8,\r\n                R.color.scheme9,\r\n                R.color.scheme10,\r\n                R.color.scheme11,\r\n                R.color.scheme12\r\n        );\r\n        fetchList();\r\n\r\n        swipeRefreshLayout.setOnRefreshListener(() -> {\r\n            mLists.clear();\r\n            noList.setVisibility(View.GONE);\r\n            fetchList();\r\n        });\r\n        return view;\r\n    }\r\n\r\n    private void fetchList() {\r\n        Query query = myRef.child(getString(R.string.dbname_following)).child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    for (DataSnapshot singleSnapshot : snapshot.getChildren()) {\r\n                        ItemFollow itemFollow = new ItemFollow();\r\n                        itemFollow.setUserId(singleSnapshot.getKey());\r\n                        itemFollow.setFollowing(true);\r\n                        itemFollow.setUserId(singleSnapshot.getKey());\r\n                        addToList(itemFollow);\r\n                    }\r\n                } else {\r\n                    swipeRefreshLayout.setRefreshing(false);\r\n                    noList.setVisibility(View.VISIBLE);\r\n                    noList.setText(\"LOOKS LIKE YOU ARE NOT A FAN OF ANYONE ¯\\\\_(ツ)_/¯\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                FirebaseCrashlytics.getInstance().log(\"Failed to fetch data from following database\" + error.getMessage());\r\n                swipeRefreshLayout.setRefreshing(false);\r\n                noList.setText(\"LOOKS LIKE WE RAN INTO ISSUE ¯\\\\_(ツ)_/¯\");\r\n                noList.setVisibility(View.VISIBLE);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void addToList(ItemFollow itemFollow) {\r\n        Log.d(TAG, \"addToList: started\");\r\n        Query query111 = myRef.child(getString(R.string.dbname_users)).child(itemFollow.getUserId());\r\n        query111.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    itemFollow.setUsername((String) snapshot.child(getString(R.string.field_username)).getValue());\r\n                    itemFollow.setDisplay_name((String) snapshot.child(getString(R.string.field_display_name)).getValue());\r\n                    itemFollow.setProfileUrl((String) snapshot.child(getString(R.string.profile_photo)).getValue());\r\n                    swipeRefreshLayout.setRefreshing(false);\r\n                    noList.setVisibility(View.GONE);\r\n                    mLists.add(itemFollow);\r\n                    adapterFollowFanAdapter.notifyDataSetChanged();\r\n                } else\r\n                    FirebaseCrashlytics.getInstance().log(\"Failed to find data from following database\");\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                FirebaseCrashlytics.getInstance().log(\"Failed to fetch user data from following database \" + error.getMessage());\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/profile/Account/FanFolllowing/FollowingFragment.java	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
+++ app/src/main/java/com/orion/orion/profile/Account/FanFolllowing/FollowingFragment.java	(date 1606028299457)
@@ -78,17 +78,21 @@
     }
 
     private void fetchList() {
-        Query query = myRef.child(getString(R.string.dbname_following)).child(FirebaseAuth.getInstance().getCurrentUser().getUid());
+        Query query = myRef.child(getString(R.string.dbname_following))
+                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());
         query.addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot snapshot) {
                 if (snapshot.exists()) {
                     for (DataSnapshot singleSnapshot : snapshot.getChildren()) {
-                        ItemFollow itemFollow = new ItemFollow();
-                        itemFollow.setUserId(singleSnapshot.getKey());
-                        itemFollow.setFollowing(true);
-                        itemFollow.setUserId(singleSnapshot.getKey());
-                        addToList(itemFollow);
+                        String UserId=singleSnapshot.getKey();
+                        assert UserId != null;
+                        if (!UserId.equals(getString(R.string.orion_team_user_id))) {
+                            ItemFollow itemFollow = new ItemFollow();
+                            itemFollow.setUserId(UserId);
+                            itemFollow.setFollowing(true);
+                            addToList(itemFollow);
+                        }
                     }
                 } else {
                     swipeRefreshLayout.setRefreshing(false);
Index: app/src/main/java/com/orion/orion/login/register.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.login;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.daimajia.androidanimations.library.Techniques;\r\nimport com.daimajia.androidanimations.library.YoYo;\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.gson.Gson;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.dialogs.BottomSheetDomain;\r\nimport com.orion.orion.models.Leaderboard;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.util.FirebaseMethods;\r\nimport com.orion.orion.util.SNTPClient;\r\nimport com.orion.orion.util.StringManipilation;\r\n\r\nimport java.util.TimeZone;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\npublic class register extends AppCompatActivity implements BottomSheetDomain.BottomSheetListener {\r\n\r\n    private static final String TAG = \"register\";\r\n    private static final int ANIMATION_DURATION = 1000;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private Context mContext;\r\n    //widgets\r\n    private RelativeLayout rootView;\r\n    private ProgressBar mProgressBar;\r\n    private EditText mUsername;\r\n    private EditText mEmail;\r\n    private EditText mPassword;\r\n    private EditText mConfirmPassword;\r\n    private TextView domainSelection;\r\n    private String userID;\r\n    private TextView terms;\r\n    private TextView policy;\r\n    private Button btnregister;\r\n    private TextView linkLogin;\r\n    private FusedLocationProviderClient fusedLocationClient;\r\n    //variables\r\n    private String username;\r\n    private String email;\r\n    private String password;\r\n    private String confirmPassword;\r\n    private String domain;\r\n    private FirebaseMethods firebaseMethods;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n    private DatabaseReference myRef;\r\n    private final String append = \"\";\r\n\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        setContentView(R.layout.activity_signup);\r\n        Log.d(TAG, \"onCreate: started.\");\r\n\r\n//          Initialize SharedPreference variables\r\n        sp =getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n        String justRegistered=sp.getString(\"yes\",null);\r\n\r\n        mContext = register.this;\r\n        firebaseMethods = new FirebaseMethods(mContext);\r\n        setupFirebaseAuth();\r\n        initWidgets();\r\n        init();\r\n    }\r\n\r\n    private void initWidgets() {\r\n        Log.d(TAG, \"initWidgets: initiliazing widgets\");\r\n        rootView = findViewById(R.id.rootView);\r\n        mProgressBar = findViewById(R.id.Registerrequestloadingprogressbar);\r\n        mUsername = findViewById(R.id.username);\r\n        mEmail = findViewById(R.id.input_email);\r\n        mPassword = findViewById(R.id.input_password);\r\n        mConfirmPassword = findViewById(R.id.confirm_password);\r\n        domainSelection = findViewById(R.id.domain_selection);\r\n        btnregister = findViewById(R.id.btn_register);\r\n        linkLogin = findViewById(R.id.link_login);\r\n        policy = findViewById(R.id.policy);\r\n        terms = findViewById(R.id.terms);\r\n\r\n        mContext = register.this;\r\n        mProgressBar.setVisibility(View.GONE);\r\n        domain = \"\";\r\n\r\n\r\n        policy.setOnClickListener(view -> startRedirect(getString(R.string.Privacy_Policy)));\r\n        terms.setOnClickListener(view -> startRedirect(getString(R.string.Terms_and_Condition)));\r\n\r\n    }\r\n\r\n    private void startRedirect(String url) {\r\n        Intent i2 = new Intent(Intent.ACTION_VIEW);\r\n        i2.setData(Uri.parse(url));\r\n        startActivity(i2);\r\n    }\r\n\r\n    private boolean checkInputs(String email, String username, String password, String confirmPassword, String domain) {\r\n        Log.d(TAG, \"checkInputs:checking inputs for null values\");\r\n\r\n        if (username.equals(\"\")) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mUsername);\r\n            Toast.makeText(mContext, \"Empty username field\", Toast.LENGTH_SHORT).show();\r\n            mUsername.setError(\"Please enter a username\");\r\n            mUsername.requestFocus();\r\n            return false;\r\n        }\r\n\r\n        if (username.length()>15) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mUsername);\r\n            Toast.makeText(mContext,\"Username should be less than 15 characters\", Toast.LENGTH_SHORT).show();\r\n            mUsername.setError(\"Username should be less than 15 characters\");\r\n            mUsername.requestFocus();\r\n            return false;\r\n        }\r\n        if (email.equals(\"\")) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mEmail);\r\n            Toast.makeText(mContext, \"Empty email field\", Toast.LENGTH_SHORT).show();\r\n            mEmail.setError(\"Please enter a email-id\");\r\n            mEmail.requestFocus();\r\n            return false;\r\n        }\r\n        if (password.equals(\"\")) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n            mPassword.setText(\"\");\r\n            mConfirmPassword.setText(\"\");\r\n            mPassword.setError(\"Please enter a password\");\r\n            mPassword.requestFocus();\r\n            Toast.makeText(mContext, \"Empty password field\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n        if (confirmPassword.equals(\"\")) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n            mConfirmPassword.setText(\"\");\r\n            mConfirmPassword.setError(\"Please enter a password\");\r\n            mConfirmPassword.requestFocus();\r\n            Toast.makeText(mContext, \"Empty confirm password field\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n        if (domain.equals(\"\")) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(domainSelection);\r\n            domainSelection.setText(\"Select Your Domain\");\r\n            Toast.makeText(mContext, \"No domain selected\", Toast.LENGTH_SHORT).show();\r\n            domainSelection.setError(\"Please enter a password\");\r\n            domainSelection.requestFocus();\r\n            return false;\r\n        } else\r\n            return true;\r\n    }\r\n\r\n    private boolean checkValidity(String password) {\r\n        if (password.length() < 6) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n            mPassword.setText(\"\");\r\n            mConfirmPassword.setText(\"\");\r\n            mPassword.setError(\"Password too short\");\r\n            mPassword.requestFocus();\r\n            mConfirmPassword.setError(\"Password too short\");\r\n            mConfirmPassword.requestFocus();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onButtonClicked(String text) {\r\n        Log.d(TAG, \"onButtonClicked: domain selected \" + text);\r\n        domain = text;\r\n        Log.d(TAG, \"onButtonClicked: \" + text);\r\n        domainSelection.setText(text);\r\n        YoYo.with(Techniques.FadeInUp).duration(ANIMATION_DURATION).playOn(domainSelection);\r\n    }\r\n\r\n\r\n    private void init() {\r\n\r\n        rootView.setOnClickListener(v -> {\r\n            InputMethodManager imm = (InputMethodManager) mContext.getSystemService(Activity.INPUT_METHOD_SERVICE);\r\n            assert imm != null;\r\n            imm.hideSoftInputFromWindow(rootView.getWindowToken(), 0);\r\n        });\r\n\r\n        //domain selection bottom sheet\r\n        domainSelection.setOnClickListener(v -> {\r\n            BottomSheetDomain bottomSheetDomain = new BottomSheetDomain();\r\n            bottomSheetDomain.show(getSupportFragmentManager(), \"Domain Selection\");\r\n        });\r\n\r\n\r\n\r\n        //registration button\r\n        btnregister.setOnClickListener(v -> {\r\n            email = mEmail.getText().toString();\r\n            username = mUsername.getText().toString();\r\n            password = mPassword.getText().toString();\r\n            confirmPassword = mConfirmPassword.getText().toString();\r\n\r\n            if (checkInputs(email, username, password, confirmPassword, domain)) {\r\n                if (checkValidity(password) || checkValidity(confirmPassword))\r\n                    if (password.equals(confirmPassword)) {\r\n                        mProgressBar.setVisibility(View.VISIBLE);\r\n                        checkifuserexist(username);\r\n                    } else {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n                        mPassword.setText(\"\");\r\n                        mConfirmPassword.setText(\"\");\r\n                        mPassword.setError(\"Password don not match\");\r\n                        mPassword.requestFocus();\r\n                        mConfirmPassword.setError(\"Password don not match\");\r\n                        mConfirmPassword.requestFocus();\r\n                    }\r\n            } else {\r\n                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n                mPassword.setText(\"\");\r\n                mConfirmPassword.setText(\"\");\r\n            }\r\n        });\r\n\r\n        //link login\r\n        linkLogin.setOnClickListener(v -> {\r\n            Log.d(TAG, \"on Click:navigating to register screen\");\r\n            Intent intent = new Intent(register.this, login.class);\r\n            startActivity(intent);\r\n        });\r\n    }\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuthListener = firebaseAuth -> {\r\n            FirebaseUser user = firebaseAuth.getCurrentUser();\r\n            if (user != null) {\r\n                Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n                myRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n            }\r\n        };\r\n    }\r\n\r\n    private void checkifuserexist(final String username) {\r\n        if (username.contains(\" \")){\r\n            Toast.makeText(mContext, \"No space should be there.\", Toast.LENGTH_SHORT).show();\r\n            register.this.mUsername.setError(\"No space should be there.\");\r\n            register.this.mProgressBar.setVisibility(View.GONE);\r\n        }else{\r\n            DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n            Query query = reference.child(getString(R.string.dbname_username)).child(username);\r\n            query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    if (!dataSnapshot.exists()) {\r\n                        RegisterNewEmail(email, password, mProgressBar, mEmail, mUsername, mPassword, mConfirmPassword, domainSelection);\r\n\r\n                    } else {\r\n                        Toast.makeText(mContext, \"please try different username\", Toast.LENGTH_SHORT).show();\r\n                        register.this.mUsername.setError(\"username already exist\");\r\n                        register.this.mProgressBar.setVisibility(View.GONE);\r\n\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    public void RegisterNewEmail(final String email, String password, ProgressBar mProgressBar, EditText mEmail, EditText mUsername, EditText mPassword, EditText mConfirmPassword, TextView domainSelection) {\r\n        assert password!=null;\r\n        assert  email!=null;\r\n        mAuth.createUserWithEmailAndPassword(email, password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n            private static final int ANIMATION_DURATION = 1000;\r\n\r\n            @Override\r\n            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                if (task.isSuccessful()) {\r\n                    // Sign in success, update UI with the signed-in user's information\r\n                    userID = mAuth.getCurrentUser().getUid();\r\n                    addNewUser(email, username, domain);\r\n                } else {\r\n                    // If sign in fails, display a message to the user.\r\n                    Log.w(TAG, \"createUserWithEmail:failure\", task.getException());\r\n                    new AlertDialog.Builder(mContext)\r\n                            .setTitle(\"New account cannot be created\")\r\n                            .setMessage(\"Try using a different email id\")\r\n                            .setPositiveButton(android.R.string.ok, (dialog, which) -> dialog.dismiss())\r\n                            .show();\r\n                    mProgressBar.setVisibility(View.INVISIBLE);\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mEmail);\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mUsername);\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(domainSelection);\r\n                    domainSelection.setText(\"Select Your Domain\");\r\n                    mEmail.setText(\"\");\r\n                    mPassword.setText(\"\");\r\n                    mUsername.setText(\"\");\r\n                    mPassword.setText(\"\");\r\n                    mConfirmPassword.setText(\"\");\r\n                }\r\n                // ...\r\n            }\r\n        });\r\n    }\r\n\r\n    public void sendverification() {\r\n        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n        if (user != null) {\r\n            user.sendEmailVerification().addOnCompleteListener(task -> {\r\n                if (!task.isSuccessful()) {\r\n                    new AlertDialog.Builder(mContext)\r\n                            .setTitle(\"Sorry\")\r\n                            .setMessage(\"Could not send Verification Mail\")\r\n                            .setPositiveButton(android.R.string.ok, (dialog, which) -> dialog.dismiss())\r\n                            .show();\r\n                }else{\r\n                    SharedPreferences.Editor editor = sp.edit();\r\n                    editor.putString(\"yes\", \"yes\");\r\n                    editor.apply();\r\n                    Intent intent = new Intent(register.this, login.class);\r\n                    startActivity(intent);\r\n                    Toast.makeText(mContext, \" Verification mail sent. Please verify!\", Toast.LENGTH_LONG).show();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    public void addNewUser(String email, String username, String domain) {\r\n        users user = new users(userID, email,domain, StringManipilation.condenseUsername(username), \"\", \"\", \"\",\"false\",\"false\",\"false\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\");\r\n      String username2=StringManipilation.condenseUsername(username);\r\n        Log.d(TAG, \"addNewUser: user\"+user);\r\n        myRef.child(mContext.getString(R.string.dbname_users))\r\n                .child(userID)\r\n                .setValue(user)\r\n                .addOnSuccessListener(aVoid -> {\r\n\r\n                    myRef.child(getString(R.string.dbname_username))\r\n                            .child(username2)\r\n                            .setValue(userID)\r\n                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n                                    Leaderboard leaderboard = new Leaderboard();\r\n                                    leaderboard.setU(StringManipilation.condenseUsername(username));\r\n                                    leaderboard.setD(domain);\r\n                                    leaderboard.setPp(\"\");\r\n                                    myRef.child(mContext.getString(R.string.dbname_leaderboard))\r\n                                            .child(userID)\r\n                                            .setValue(leaderboard)\r\n                                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                @Override\r\n                                                public void onSuccess(Void aVoid) {\r\n                                                    SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Kolkata\"), new SNTPClient.Listener() {\r\n                                                        @Override\r\n                                                        public void onTimeReceived(String currentTimeStamp) {\r\n                                                            leaderboard.setLu(currentTimeStamp);\r\n                                                            //domain parameter left\r\n                                                            myRef.child(mContext.getString(R.string.dbname_leaderboard))\r\n                                                                    .child(userID)\r\n                                                                    .setValue(leaderboard)\r\n                                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                                        @Override\r\n                                                                        public void onSuccess(Void aVoid) {\r\n                                                                            sendverification();\r\n                                                                        }\r\n                                                                    }).addOnFailureListener(new OnFailureListener() {\r\n                                                                @Override\r\n                                                                public void onFailure(@NonNull Exception e) {\r\n                                                                    Toast.makeText(mContext, \"Error:Please try again\", Toast.LENGTH_SHORT).show();\r\n\r\n                                                                }\r\n                                                            });\r\n\r\n                                                        }\r\n\r\n                                                        @Override\r\n                                                        public void onError(Exception ex) {\r\n                                                            myRef.child(mContext.getString(R.string.dbname_leaderboard))\r\n                                                                    .child(userID)\r\n                                                                    .setValue(leaderboard)\r\n                                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                                        @Override\r\n                                                                        public void onSuccess(Void aVoid) {\r\n                                                                            sendverification();\r\n                                                                        }\r\n                                                                    }).addOnFailureListener(new OnFailureListener() {\r\n                                                                @Override\r\n                                                                public void onFailure(@NonNull Exception e) {\r\n                                                                    Toast.makeText(mContext, \"Error:Please try again\", Toast.LENGTH_SHORT).show();\r\n\r\n                                                                }\r\n                                                            });\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            }).addOnFailureListener(new OnFailureListener() {\r\n                                        @Override\r\n                                        public void onFailure(@NonNull Exception e) {\r\n                                            Toast.makeText(mContext, \"Error:Please try again\", Toast.LENGTH_SHORT).show();\r\n\r\n                                        }\r\n                                    });\r\n\r\n                                }\r\n                            });\r\n\r\n\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Toast.makeText(mContext, \"Error:Please try again\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/login/register.java	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
+++ app/src/main/java/com/orion/orion/login/register.java	(date 1606030025706)
@@ -424,7 +424,27 @@
                                                                     .addOnSuccessListener(new OnSuccessListener<Void>() {
                                                                         @Override
                                                                         public void onSuccess(Void aVoid) {
-                                                                            sendverification();
+                                                                            myRef.child(mContext.getString(R.string.dbname_following))
+                                                                                    .child(userID)
+                                                                                    .child(getString(R.string.orion_team_user_id))
+                                                                                    .setValue(true)
+                                                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {
+                                                                                        @Override
+                                                                                        public void onSuccess(Void aVoid) {
+                                                                                            myRef.child(mContext.getString(R.string.dbname_follower))
+                                                                                                    .child(getString(R.string.orion_team_user_id))
+                                                                                                    .child(userID)
+                                                                                                    .setValue(true)
+                                                                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {
+                                                                                                        @Override
+                                                                                                        public void onSuccess(Void aVoid) {
+                                                                                                            sendverification();
+
+                                                                                                        }
+                                                                                                    });
+
+                                                                                        }
+                                                                                    });
                                                                         }
                                                                     }).addOnFailureListener(new OnFailureListener() {
                                                                 @Override
Index: .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07__Default_Changelist_.xml	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07__Default_Changelist_.xml	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_15-11-2020_21_07_[Default_Changelist]" date="1605454781608" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 15-11-2020 21:07 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07_[Default_Changelist]/shelved.patch	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07_[Default_Changelist]/shelved.patch	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
@@ -1,1460 +0,0 @@
-Index: app/src/main/res/layout/activity_main.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\nxmlns:tools=\"http://schemas.android.com/tools\"\r\nandroid:layout_width=\"match_parent\"\r\nandroid:layout_height=\"match_parent\"\r\ntools:context=\".home.MainActivity\">\r\n    <FrameLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:id=\"@+id/container\">\r\n\r\n    </FrameLayout>\r\n\r\n<RelativeLayout\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:id=\"@+id/relLayoutParent\">\r\n    <!--top toolbar    -->\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id/relLayout1\">\r\n        <include layout=\"@layout/layout_top_tabs_main\"/>\r\n\r\n    </RelativeLayout>\r\n    <!--        middle section-->\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:id=\"@+id/relLayout2\"\r\n        android:layout_below=\"@+id/relLayout1\"\r\n        android:layout_above=\"@+id/bottom\">\r\n\r\n<include layout=\"@layout/layout_center_viewpager\" />\r\n    </RelativeLayout>\r\n<!--    Bottom bar-->\r\n    <include layout=\"@layout/layout_bottom_navigation_view\" />\r\n</RelativeLayout>\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/activity_main.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
-+++ app/src/main/res/layout/activity_main.xml	(date 1605447926423)
-@@ -1,41 +1,44 @@
- <?xml version="1.0" encoding="utf-8"?>
- <androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
--xmlns:app="http://schemas.android.com/apk/res-auto"
--xmlns:tools="http://schemas.android.com/tools"
--android:layout_width="match_parent"
--android:layout_height="match_parent"
--tools:context=".home.MainActivity">
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:layout_width="match_parent"
-+    android:layout_height="match_parent"
-+    tools:context=".home.MainActivity"
-+    android:id="@+id/activity_main_layout">
-+
-     <FrameLayout
-+        android:id="@+id/container"
-         android:layout_width="match_parent"
--        android:layout_height="match_parent"
--        android:id="@+id/container">
-+        android:layout_height="match_parent">
- 
-     </FrameLayout>
- 
--<RelativeLayout
--    android:layout_width="match_parent"
--    android:layout_height="match_parent"
--    android:id="@+id/relLayoutParent">
--    <!--top toolbar    -->
--    <RelativeLayout
--        android:layout_width="match_parent"
--        android:layout_height="wrap_content"
--        android:id="@+id/relLayout1">
--        <include layout="@layout/layout_top_tabs_main"/>
-+    <RelativeLayout
-+        android:id="@+id/relLayoutParent"
-+        android:layout_width="match_parent"
-+        android:layout_height="match_parent">
-+        <!--top toolbar    -->
-+        <RelativeLayout
-+            android:id="@+id/relLayout1"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content">
-+
-+            <include layout="@layout/layout_top_tabs_main" />
- 
--    </RelativeLayout>
--    <!--        middle section-->
--    <RelativeLayout
--        android:layout_width="match_parent"
--        android:layout_height="match_parent"
--        android:id="@+id/relLayout2"
--        android:layout_below="@+id/relLayout1"
--        android:layout_above="@+id/bottom">
-+        </RelativeLayout>
-+        <!--        middle section-->
-+        <RelativeLayout
-+            android:id="@+id/relLayout2"
-+            android:layout_width="match_parent"
-+            android:layout_height="match_parent"
-+            android:layout_above="@+id/bottom"
-+            android:layout_below="@+id/relLayout1">
- 
--<include layout="@layout/layout_center_viewpager" />
--    </RelativeLayout>
--<!--    Bottom bar-->
--    <include layout="@layout/layout_bottom_navigation_view" />
--</RelativeLayout>
-+            <include layout="@layout/layout_center_viewpager" />
-+        </RelativeLayout>
-+        <!--    Bottom bar-->
-+        <include layout="@layout/layout_bottom_navigation_view" />
-+    </RelativeLayout>
- 
- </androidx.coordinatorlayout.widget.CoordinatorLayout>
-\ No newline at end of file
-Index: app/src/main/java/com/orion/orion/ViewPostActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.media.AudioManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.PopupMenu;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.VolleyLog;\r\nimport com.bumptech.glide.Glide;\r\nimport com.danikula.videocache.HttpProxyCacheServer;\r\nimport com.google.android.exoplayer2.DefaultLoadControl;\r\nimport com.google.android.exoplayer2.ExoPlaybackException;\r\nimport com.google.android.exoplayer2.ExoPlayerFactory;\r\nimport com.google.android.exoplayer2.LoadControl;\r\nimport com.google.android.exoplayer2.PlaybackParameters;\r\nimport com.google.android.exoplayer2.Player;\r\nimport com.google.android.exoplayer2.SimpleExoPlayer;\r\nimport com.google.android.exoplayer2.Timeline;\r\nimport com.google.android.exoplayer2.source.ExtractorMediaSource;\r\nimport com.google.android.exoplayer2.source.MediaSource;\r\nimport com.google.android.exoplayer2.source.TrackGroupArray;\r\nimport com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;\r\nimport com.google.android.exoplayer2.trackselection.DefaultTrackSelector;\r\nimport com.google.android.exoplayer2.trackselection.TrackSelectionArray;\r\nimport com.google.android.exoplayer2.trackselection.TrackSelector;\r\nimport com.google.android.exoplayer2.ui.PlayerView;\r\nimport com.google.android.exoplayer2.upstream.BandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DataSource;\r\nimport com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;\r\nimport com.google.android.exoplayer2.util.Util;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.Photo;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.profile;\r\nimport com.orion.orion.util.SNTPClient;\r\nimport com.orion.orion.util.SquareImageView;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.TimeZone;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport static android.view.View.GONE;\r\nimport static com.orion.orion.util.MyApplication.getProxy;\r\n\r\npublic class ViewPostActivity extends AppCompatActivity {\r\n    private static final String TAG = \"ViewPostFragment\";\r\n\r\n\r\n    //firebase\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private DatabaseReference myRef;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n    String currentUsername = \"\";\r\n\r\n    private Photo mphoto;\r\n    PlayerView playerView;\r\n    ProgressBar progressBar;\r\n    boolean play = true;\r\n    long currentPosition = 0;\r\n    SimpleExoPlayer simpleExoPlayer;\r\n\r\n    private String mLikesString = \"\";\r\n    private String numberoflike = \"0\";\r\n    ArrayList<Comment> comments = new ArrayList<>();\r\n\r\n\r\n    private SquareImageView mPostImage, thumbnail, progress2;\r\n    private BottomNavigationViewEx bottomNavigationView;\r\n    private TextView mBackLabel, duration, mCaption, mUsername, mTimestamp, mLikes, mCommentnumber, mcredit, domain, promoteNum;\r\n    private ImageView mBackArrow, mEllipses, mStarYellow, mStarWhite, mProfileImage, mComment, promote, promoted, play2, mute, unmute;\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n    LinearLayout progress;\r\n    private users mCurrentUser;\r\n    private boolean likeByCurrentsUser2;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_view_post);\r\n\r\n        mPostImage = (SquareImageView) findViewById(R.id.post_image);\r\n        bottomNavigationView = (BottomNavigationViewEx) findViewById(R.id.BottomNavViewBar);\r\n        mBackArrow = (ImageView) findViewById(R.id.backarrow);\r\n        mEllipses = (ImageView) findViewById(R.id.ivEllipses);\r\n        mStarWhite = (ImageView) findViewById(R.id.image_star);\r\n        mStarYellow = (ImageView) findViewById(R.id.image_star_yellow);\r\n        mProfileImage = (ImageView) findViewById(R.id.profile_photo1);\r\n        mBackLabel = (TextView) findViewById(R.id.tvbacklabel1);\r\n        mCaption = (TextView) findViewById(R.id.image_caption);\r\n        mUsername = (TextView) findViewById(R.id.username1);\r\n        mTimestamp = (TextView) findViewById(R.id.images_time);\r\n        mLikes = (TextView) findViewById(R.id.likes_number);\r\n        mComment = (ImageView) findViewById(R.id.image_shoutout);\r\n        mCommentnumber = (TextView) findViewById(R.id.comments_number);\r\n        mcredit = (TextView) findViewById(R.id.credit);\r\n        promote = (ImageView) findViewById(R.id.promote);\r\n        promoted = (ImageView) findViewById(R.id.promoted);\r\n        domain = (TextView) findViewById(R.id.domain12);\r\n        promoteNum = (TextView) findViewById(R.id.promote_number);\r\n\r\n        progress = findViewById(R.id.pro);\r\n        progress2 = findViewById(R.id.progress);\r\n\r\n\r\n        play2 = (ImageView) findViewById(R.id.play);\r\n        mute = (ImageView) findViewById(R.id.mute);\r\n        unmute = (ImageView) findViewById(R.id.unmute);\r\n        playerView = findViewById(R.id.player_view);\r\n        progressBar = findViewById(R.id.progress_bar);\r\n        duration = (TextView) findViewById(R.id.duration);\r\n        thumbnail = (SquareImageView) findViewById(R.id.thumbnail);\r\n\r\n\r\n//          Initialize SharedPreference variables\r\n        sp = getApplicationContext().getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n\r\n\r\n        Intent i = getIntent();\r\n        mphoto = i.getParcelableExtra(\"photo\");\r\n        comments = i.getParcelableArrayListExtra(\"comments\");\r\n\r\n        duration.setVisibility(View.GONE);\r\n\r\n\r\n        mEllipses.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                PopupMenu popupMenu = new PopupMenu(ViewPostActivity.this, mEllipses);\r\n                if (mphoto.getUser_id().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                    popupMenu.getMenuInflater().inflate(R.menu.post_menu, popupMenu.getMenu());\r\n                    Log.d(TAG, \"onClick: \" + \"yespop\");\r\n                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                        @Override\r\n                        public boolean onMenuItemClick(MenuItem item) {\r\n                            Toast.makeText(ViewPostActivity.this, \"clicked\", Toast.LENGTH_SHORT).show();\r\n\r\n                            AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);\r\n                            builder.setTitle(\"Delete\");\r\n                            builder.setMessage(\"Are you sure, you want to delete this Post?\");\r\n\r\n//                set buttons\r\n                            builder.setPositiveButton(\"Delete\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    Log.d(TAG, \"DeleteMessage: deleteing message\");\r\n                                    DeletePost();\r\n\r\n                                }\r\n                            });\r\n                            builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    dialog.dismiss();\r\n                                }\r\n                            });\r\n                            builder.create().show();\r\n\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    popupMenu.show();\r\n\r\n\r\n                } else {\r\n                    popupMenu.getMenuInflater().inflate(R.menu.post_menu_all, popupMenu.getMenu());\r\n                    Log.d(TAG, \"onClick: \" + \"yespop\");\r\n                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                        @Override\r\n                        public boolean onMenuItemClick(MenuItem item) {\r\n                            Toast.makeText(ViewPostActivity.this, \"clicked\", Toast.LENGTH_SHORT).show();\r\n\r\n                            AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);\r\n                            builder.setTitle(\"Report\");\r\n                            builder.setMessage(\"Are you sure, you want to Report this Post?\");\r\n\r\n//                set buttons\r\n                            builder.setPositiveButton(\"Report\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    Log.d(TAG, \"DeleteMessage: deleteing message\");\r\n                                    ReportPost();\r\n\r\n                                }\r\n                            });\r\n                            builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    dialog.dismiss();\r\n                                }\r\n                            });\r\n                            builder.create().show();\r\n\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    popupMenu.show();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (mphoto.getType().equals(\"photo\")) {\r\n\r\n            mPostImage.setVisibility(View.VISIBLE);\r\n            play2.setVisibility(View.GONE);\r\n            Glide.with(ViewPostActivity.this)\r\n                    .load(mphoto.getImage_path())\r\n                    .placeholder(R.drawable.load)\r\n                    .error(R.drawable.default_image2)\r\n                    .placeholder(R.drawable.load)\r\n                    .into(mPostImage);\r\n            playerView.setVisibility(GONE);\r\n\r\n        } else {\r\n            unmute.setVisibility(View.VISIBLE);\r\n            play2.setVisibility(View.VISIBLE);\r\n            mPostImage.setVisibility(View.GONE);\r\n            playerView.setVisibility(View.VISIBLE);\r\n\r\n        }\r\n\r\n//                   ***********get Video***********\r\n\r\n\r\n        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n//                    get thumbnail\r\n        reference2\r\n                .child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"thumbnail\")\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            Glide.with(ViewPostActivity.this)\r\n                                    .load(mphoto.getThumbnail())\r\n                                    .placeholder(R.drawable.load)\r\n                                    .error(R.drawable.default_image2)\r\n                                    .placeholder(R.drawable.load)\r\n                                    .thumbnail(0.25f)\r\n                                    .into(thumbnail);                           }\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n//                     play/pause video\r\n\r\n        final Handler[] mHandler = new Handler[1];\r\n        final Runnable[] updateProgressAction = new Runnable[1];\r\n        mUsername.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent i = new Intent(ViewPostActivity.this, profile.class);\r\n                i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                i.putExtra(getString(R.string.intent_user), mphoto.getUser_id());\r\n                startActivity(i);\r\n            }\r\n        });\r\n        mProfileImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent i = new Intent(ViewPostActivity.this, profile.class);\r\n                i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                i.putExtra(getString(R.string.intent_user), mphoto.getUser_id());\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        playerView.getVideoSurfaceView().setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                progressBar.setVisibility(View.VISIBLE);\r\n//                if paused\r\n                if (play) {\r\n\r\n                    play = false;\r\n                    play2.setVisibility(View.INVISIBLE);\r\n\r\n                    LoadControl loadControl = new DefaultLoadControl();\r\n                    BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n                    TrackSelector trackSelector = new DefaultTrackSelector(new AdaptiveTrackSelection.Factory(bandwidthMeter));\r\n                    if (simpleExoPlayer != null) {\r\n\r\n                        simpleExoPlayer.release();\r\n                    }\r\n\r\n                    simpleExoPlayer = ExoPlayerFactory.newSimpleInstance(ViewPostActivity.this, trackSelector, loadControl);\r\n\r\n                    DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(\r\n                            ViewPostActivity.this, Util.getUserAgent(ViewPostActivity.this, \"RecyclerView VideoPlayer\"));\r\n                    String mediaUrl = mphoto.getImage_path();\r\n                    HttpProxyCacheServer proxy = getProxy(ViewPostActivity.this);\r\n                    String proxyUrl = proxy.getProxyUrl(mediaUrl);\r\n\r\n\r\n                    playerView.setPlayer(simpleExoPlayer);\r\n\r\n\r\n                    playerView.setKeepScreenOn(true);\r\n                    playerView.setKeepScreenOn(true);\r\n\r\n\r\n                    MediaSource videoSource = new ExtractorMediaSource.Factory(dataSourceFactory)\r\n                            .createMediaSource(Uri.parse(proxyUrl));\r\n//                    set Volume\r\n                    if (mute.getVisibility() == View.VISIBLE) {\r\n                        simpleExoPlayer.setVolume(0f);\r\n                    } else if (unmute.getVisibility() == View.VISIBLE) {\r\n                        simpleExoPlayer.setVolume(AudioManager.STREAM_MUSIC);\r\n                    }\r\n\r\n                    simpleExoPlayer.prepare(videoSource);\r\n                    simpleExoPlayer.seekTo(currentPosition);\r\n                    simpleExoPlayer.setPlayWhenReady(true);\r\n                    simpleExoPlayer.getPlaybackState();\r\n\r\n\r\n                    simpleExoPlayer.addListener(new Player.EventListener() {\r\n                        @Override\r\n                        public void onTimelineChanged(Timeline timeline, Object manifest, int reason) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onLoadingChanged(boolean isLoading) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n\r\n                            if (playbackState == Player.STATE_BUFFERING) {\r\n\r\n                                progressBar.setVisibility(View.VISIBLE);\r\n\r\n                            } else if (playbackState == Player.STATE_READY) {\r\n\r\n                                duration.setVisibility(View.VISIBLE);\r\n                                thumbnail.setVisibility(GONE);\r\n                                progressBar.setVisibility(View.GONE);\r\n\r\n//                                display duration\r\n                                updateProgressAction[0] = new Runnable() {\r\n                                    @Override\r\n                                    public void run() {\r\n                                        updateProgress();\r\n                                    }\r\n\r\n                                    private void updateProgress() {\r\n\r\n                                        long delayMs = TimeUnit.SECONDS.toMillis(1);\r\n                                        mHandler[0].postDelayed(updateProgressAction[0], delayMs);\r\n                                        duration.setText(String.valueOf((int) (simpleExoPlayer.getDuration() - simpleExoPlayer.getCurrentPosition()) / 1000));\r\n\r\n                                    }\r\n\r\n                                };\r\n                                mHandler[0] = new Handler();\r\n                                mHandler[0].post(updateProgressAction[0]);\r\n\r\n\r\n                            } else if (playbackState == Player.STATE_ENDED) {\r\n\r\n                                play2.setVisibility(View.VISIBLE);\r\n                                play = true;\r\n                                thumbnail.setVisibility(View.VISIBLE);\r\n                                simpleExoPlayer.seekTo(0);\r\n                                simpleExoPlayer.setPlayWhenReady(false);\r\n                                simpleExoPlayer.release();\r\n\r\n                            } else if (playbackState == Player.STATE_IDLE) {\r\n                                play2.setVisibility(View.VISIBLE);\r\n\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onRepeatModeChanged(int repeatMode) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onShuffleModeEnabledChanged(boolean shuffleModeEnabled) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlayerError(ExoPlaybackException error) {\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPositionDiscontinuity(int reason) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlaybackParametersChanged(PlaybackParameters playbackParameters) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onSeekProcessed() {\r\n\r\n                        }\r\n                    });\r\n                } else {\r\n//                    if playing\r\n                    play = true;\r\n                    play2.setVisibility(View.VISIBLE);\r\n                    currentPosition = simpleExoPlayer.getCurrentPosition();\r\n                    simpleExoPlayer.setPlayWhenReady(false);\r\n                    simpleExoPlayer.getPlaybackState();\r\n                    simpleExoPlayer.release();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n//        toggle volume\r\n        mute.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                mute.setVisibility(View.GONE);\r\n                unmute.setVisibility(View.VISIBLE);\r\n                if (simpleExoPlayer != null) {\r\n                    simpleExoPlayer.setVolume(AudioManager.STREAM_MUSIC);\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n        unmute.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                mute.setVisibility(View.VISIBLE);\r\n                unmute.setVisibility(View.GONE);\r\n                if (simpleExoPlayer != null) {\r\n                    simpleExoPlayer.setVolume(0f);\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        getCurrentUser();\r\n\r\n\r\n        setupFirebaseAuth();\r\n        ifCurrentUserLiked();\r\n        ifCurrentUserPromoted();\r\n        numberofPromote();\r\n\r\n        getPhototDetail();\r\n        setupWidgets();\r\n\r\n\r\n        mStarWhite.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"whitestar clicked\");\r\n\r\n                mStarWhite.setVisibility(View.GONE);\r\n                mStarYellow.setVisibility(View.VISIBLE);\r\n                addlike();\r\n                NumberOfLikes();\r\n\r\n\r\n            }\r\n        });\r\n        mStarYellow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"yellowstar clicked\");\r\n\r\n                mStarWhite.setVisibility(View.VISIBLE);\r\n                mStarYellow.setVisibility(View.GONE);\r\n                removeLike();\r\n                NumberOfLikes();\r\n\r\n\r\n            }\r\n        });\r\n        promote.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                promotePost();\r\n            }\r\n        });\r\n\r\n\r\n        promoted.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                unPromotePost();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void ReportPost() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        reference.child(getString(R.string.dbname_reports))\r\n                .child(\"posts\")\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"user_id\")\r\n                .setValue(mphoto.getUser_id());\r\n    }\r\n\r\n    private void unPromotePost() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(\"Remove Promotion\");\r\n        builder.setMessage(\"Are you sure, you want to remove this Promotion?\");\r\n\r\n//                set buttons\r\n        builder.setPositiveButton(\"Remove\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                Log.d(VolleyLog.TAG, \"Rejecting: rejected \");\r\n\r\n                promote.setVisibility(View.VISIBLE);\r\n                promoted.setVisibility(View.GONE);\r\n\r\n                DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                db.child(getString(R.string.dbname_promote))\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                        .child(mphoto.getPhoto_id())\r\n                        .removeValue();\r\n\r\n                DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n                reference.child(getString(R.string.dbname_user_photos))\r\n                        .child(mphoto.getUser_id())\r\n                        .child(mphoto.getPhoto_id())\r\n                        .child(\"Promote\")\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                        .removeValue();\r\n\r\n\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n        builder.create().show();\r\n\r\n    }\r\n\r\n    private void numberofPromote() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"Promote\");\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                String num = String.valueOf(dataSnapshot.getChildrenCount());\r\n                promoteNum.setText(num);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private void promotePost() {\r\n        BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(this, R.style.BottomSheetDialogTheme);\r\n\r\n        View bottomSheetView = this.getLayoutInflater()\r\n                .inflate(R.layout.layout_bottom_sheet_promote, (LinearLayout) bottomSheetDialog.findViewById(R.id.layout_bottom_sheet_container));\r\n        TextView username = bottomSheetView.findViewById(R.id.usernameBs);\r\n        TextView cancel = bottomSheetView.findViewById(R.id.cancel);\r\n        TextView promote1 = bottomSheetView.findViewById(R.id.promote);\r\n        ImageView post = bottomSheetView.findViewById(R.id.postBs);\r\n        Glide.with(ViewPostActivity.this)\r\n                .load(mphoto.getImage_path())\r\n                .placeholder(R.drawable.load)\r\n                .error(R.drawable.default_image2)\r\n                .placeholder(R.drawable.load)\r\n                .thumbnail(0.5f)\r\n                .into(post);\r\n        username.setText(currentUsername);\r\n\r\n\r\n        cancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bottomSheetDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        promote1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                promote.setVisibility(View.GONE);\r\n                promoted.setVisibility(View.VISIBLE);\r\n\r\n\r\n                SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n                    @Override\r\n                    public void onTimeReceived(String rawDate) {\r\n                        // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n\r\n                        String str_date = rawDate;\r\n                        java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                        Date date = null;\r\n                        try {\r\n                            date = (Date) formatter.parse(str_date);\r\n                        } catch (ParseException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                        Long timeStart = date.getTime();\r\n                        Long timeEnd = date.getTime() + 84600000;\r\n\r\n\r\n                        DatabaseReference db1 = FirebaseDatabase.getInstance().getReference();\r\n\r\n                        HashMap<String, Object> hashMap = new HashMap<>();\r\n                        hashMap.put(\"photoid\", mphoto.getPhoto_id());\r\n                        hashMap.put(\"userid\", mphoto.getUser_id());\r\n                        hashMap.put(\"photoLink\", mphoto.getImage_path());\r\n                        hashMap.put(\"storyid\", mphoto.getPhoto_id());\r\n                        hashMap.put(\"timeEnd\", String.valueOf(timeEnd));\r\n                        hashMap.put(\"timeStart\", String.valueOf(timeStart));\r\n                        hashMap.put(\"promoterId\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n                        db1.child(getString(R.string.dbname_promote))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(mphoto.getPhoto_id())\r\n                                .setValue(hashMap);\r\n\r\n                        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n                        reference.child(getString(R.string.dbname_user_photos))\r\n                                .child(mphoto.getUser_id())\r\n                                .child(mphoto.getPhoto_id())\r\n                                .child(\"Promote\")\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .setValue(\"true\");\r\n\r\n                        addToHisNotification(\"\" + mphoto.getUser_id(), mphoto.getPhoto_id(), \"Promoted your post.\");\r\n\r\n\r\n                        bottomSheetDialog.dismiss();\r\n\r\n                        Log.e(SNTPClient.TAG, rawDate);\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Exception ex) {\r\n                        Log.e(SNTPClient.TAG, ex.getMessage());\r\n                    }\r\n                });\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n        bottomSheetDialog.setContentView(bottomSheetView);\r\n        bottomSheetDialog.show();\r\n\r\n\r\n    }\r\n\r\n    private void DeletePost() {\r\n\r\n        progress.setVisibility(View.VISIBLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE,\r\n                WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n        final int[] x = {0};\r\n        DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();\r\n        reference3.child(getString(R.string.dbname_follower))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                x[0]++;\r\n                                DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();\r\n                                reference3.child(getString(R.string.dbname_users))\r\n                                        .child(snapshot1.getKey())\r\n                                        .child(getString(R.string.post_updates))\r\n                                        .child(mphoto.getPhoto_id())\r\n                                        .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                                if (x[0] == snapshot.getChildrenCount()) {\r\n                                    deleteFurther();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            deleteFurther();\r\n\r\n                        }\r\n                    }\r\n\r\n                    private void deleteFurther() {\r\n\r\n                        if( !mphoto.getType().equals(\"photo\")){\r\n                            StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getThumbnail());\r\n                            photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n\r\n                                }\r\n                            });\r\n                        }\r\n                        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n                        reference2.child(getString(R.string.dbname_user_photos))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(mphoto.getPhoto_id())\r\n                                .removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getImage_path());\r\n                                photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        // File deleted successfully\r\n\r\n                                        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n                                        reference2.child(getString(R.string.explore_update))\r\n                                                .child(mphoto.getPhoto_id())\r\n                                                .setValue(true)\r\n                                                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(Void aVoid) {\r\n                                                        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Kolkata\"), new SNTPClient.Listener() {\r\n                                                            @Override\r\n                                                            public void onTimeReceived(String currentTimeStamp) {\r\n                                                                reference2.child(getString(R.string.explore_update)).child(getString(R.string.field_last_updated)).setValue(currentTimeStamp);\r\n                                                            }\r\n\r\n                                                            @Override\r\n                                                            public void onError(Exception ex) {\r\n\r\n                                                            }\r\n                                                        });\r\n                                                        String json = sp.getString(\"pl\", null);\r\n                                                        String json2 = sp.getString(\"myMedia\", null);\r\n\r\n                                                        Type type = new TypeToken<ArrayList<Photo>>() {\r\n                                                        }.getType();\r\n                                                        ArrayList<Photo> photoList = new ArrayList<>();\r\n                                                        ArrayList<Photo> mymediaList = new ArrayList<>();\r\n\r\n                                                        photoList = gson.fromJson(json, type);\r\n                                                        mymediaList = gson.fromJson(json2, type);\r\n                                                        ArrayList<Photo> photoList2 =new ArrayList<>();\r\n                                                        ArrayList<Photo> mymediaList2= new ArrayList<>();\r\n                                                        if( photoList != null) {\r\n                                                            photoList2 = new ArrayList<>(photoList);\r\n                                                        }\r\n                                                        if (mymediaList != null){\r\n                                                            mymediaList2 = new ArrayList<>(mymediaList);\r\n                                                        }\r\n\r\n\r\n                                                        if (photoList2.size() == 0) {                 //    if no arrayList is present\r\n\r\n\r\n                                                        } else {\r\n\r\n                                                            for (Photo a : photoList) {\r\n                                                                if (a.getPhoto_id().equals(mphoto.getPhoto_id()))\r\n                                                                    photoList2.remove(a);\r\n\r\n                                                            }\r\n                                                        }\r\n\r\n\r\n                                                        if (mymediaList2.size() == 0) {                 //    if no arrayList is present\r\n\r\n\r\n                                                        } else {\r\n\r\n                                                            for (Photo a : mymediaList) {\r\n                                                                if (a.getPhoto_id().equals(mphoto.getPhoto_id()))\r\n                                                                    mymediaList2.remove(a);\r\n\r\n                                                            }\r\n                                                        }\r\n\r\n\r\n                                                        //  delete from post list and save updated list\r\n                                                        SharedPreferences.Editor editor = sp.edit();\r\n                                                        json = gson.toJson(photoList2);\r\n                                                        json2 = gson.toJson(mymediaList2);\r\n\r\n                                                        editor.putString(\"pl\", json);\r\n                                                        editor.putString(\"myMedia\", json2);\r\n\r\n                                                        editor.apply();\r\n\r\n\r\n                                                        progress.setVisibility(GONE);\r\n                                                        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                                        finish();\r\n                                                    }\r\n                                                });\r\n\r\n\r\n                                    }\r\n\r\n                                }).\r\n\r\n                                        addOnFailureListener(new OnFailureListener() {\r\n                                            @Override\r\n                                            public void onFailure (@NonNull Exception exception){\r\n                                                // Uh-oh, an error occurred!\r\n                                                Log.d(VolleyLog.TAG, \"onFailure: did not delete file\");\r\n                                            }\r\n                                        });\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled (@NonNull DatabaseError error){\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n\r\n\r\n    private void getCurrentUser () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(getString(R.string.dbname_users))\r\n                .orderByChild(getString(R.string.field_user_id))\r\n                .equalTo(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                for (DataSnapshot singleSnapshot : dataSnapshot.getChildren()) {\r\n                    mCurrentUser = singleSnapshot.getValue(users.class);\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void NumberOfLikes () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\");\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                numberoflike = String.valueOf(dataSnapshot.getChildrenCount());\r\n                mLikes.setText(numberoflike);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void ifCurrentUserLiked () {\r\n        Log.d(TAG, \" checking current user liked or not\");\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    Log.d(TAG, \" checking current user liked or not: Already liked\");\r\n                    mStarWhite.setVisibility(View.GONE);\r\n                    mStarYellow.setVisibility(View.VISIBLE);\r\n                    NumberOfLikes();\r\n                    likeByCurrentsUser2 = true;\r\n\r\n                } else {\r\n                    Log.d(TAG, \" checking current user liked or not: not liked\");\r\n                    mStarWhite.setVisibility(View.VISIBLE);\r\n                    mStarYellow.setVisibility(View.GONE);\r\n                    NumberOfLikes();\r\n                    likeByCurrentsUser2 = false;\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void addToHisNotification (String hisUid, String pId, String notification){\r\n\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n\r\n                String str_date = rawDate;\r\n                java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                Date date = null;\r\n                try {\r\n                    date = (Date) formatter.parse(str_date);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                Log.d(TAG, \"onCreateView: timestampyesss\" + date.getTime());\r\n                String timestamp = String.valueOf(date.getTime());\r\n\r\n                //        data to put in notification\r\n                HashMap<Object, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"pId\", pId);\r\n\r\n                hashMap.put(\"timeStamp\", timestamp);\r\n\r\n                hashMap.put(\"pUid\", hisUid);\r\n\r\n                hashMap.put(\"notificaton\", notification);\r\n                hashMap.put(\"seen\", \"false\");\r\n\r\n\r\n                hashMap.put(\"sUid\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"users\");\r\n                ref.child(hisUid).child(\"Notifications\").child(timestamp).setValue(hashMap)\r\n                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n\r\n                            }\r\n                        }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n                Log.e(SNTPClient.TAG, rawDate);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception ex) {\r\n                Log.e(SNTPClient.TAG, ex.getMessage());\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void addlike () {\r\n        Log.d(TAG, \" like add\");\r\n\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        reference1.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(getString(R.string.field_user_id))\r\n                .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        NumberOfLikes();\r\n        addToHisNotification(\"\" + mphoto.getUser_id(), mphoto.getPhoto_id(), \"Liked your post\");\r\n\r\n\r\n    }\r\n\r\n    private void removeLike () {\r\n        Log.d(TAG, \" like removed\");\r\n\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        reference1.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .removeValue();\r\n        NumberOfLikes();\r\n\r\n\r\n    }\r\n\r\n    private void ifCurrentUserPromoted () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"Promote\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    Log.d(TAG, \" checking current user liked or not: Already liked\");\r\n                    promote.setVisibility(View.GONE);\r\n                    promoted.setVisibility(View.VISIBLE);\r\n\r\n                } else {\r\n                    Log.d(TAG, \" checking current user liked or not: not liked\");\r\n                    promote.setVisibility(View.VISIBLE);\r\n                    promoted.setVisibility(View.GONE);\r\n\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getPhototDetail () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(getString(R.string.dbname_users))\r\n                .child(mphoto.getUser_id());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                users user = dataSnapshot.getValue(users.class);\r\n                mUsername.setText(user.getUsername());\r\n                currentUsername = user.getUsername();\r\n                Glide.with(ViewPostActivity.this)\r\n                        .load(user.getProfile_photo())\r\n                        .placeholder(R.drawable.load)\r\n                        .error(R.drawable.default_image2)\r\n                        .placeholder(R.drawable.load)\r\n                        .into(mProfileImage);\r\n                mcredit.setText(\"© \" + user.getUsername());\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    private void setupWidgets () {\r\n        mTimestamp.setText(mphoto.getDate_created().substring(0, 10));\r\n\r\n        mBackArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n\r\n        mComment.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//\r\n                Intent i = new Intent(ViewPostActivity.this, CommentActivity.class);\r\n                i.putExtra(\"photoId\", mphoto.getPhoto_id());\r\n                i.putExtra(\"userId\", mphoto.getUser_id());\r\n                startActivity(i);\r\n\r\n            }\r\n        });\r\n        mCommentnumber.setText(String.valueOf(comments.size()));\r\n        mCaption.setText(mphoto.getCaption());\r\n        mLikes.setText(mLikesString);\r\n\r\n\r\n    }\r\n\r\n\r\n    private void setupFirebaseAuth () {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n\r\n        mAuthListener = new FirebaseAuth.AuthStateListener() {\r\n            @Override\r\n            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\r\n                FirebaseUser user = firebaseAuth.getCurrentUser();\r\n\r\n                if (user != null) {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n                } else {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                }\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart () {\r\n        super.onStart();\r\n\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStop () {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onPause () {\r\n        super.onPause();\r\n        if (simpleExoPlayer != null) {\r\n            simpleExoPlayer.release();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy () {\r\n        super.onDestroy();\r\n        if (simpleExoPlayer != null) {\r\n            simpleExoPlayer.release();\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/ViewPostActivity.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
-+++ app/src/main/java/com/orion/orion/ViewPostActivity.java	(date 1605450390258)
-@@ -178,7 +178,6 @@
-                         @Override
-                         public boolean onMenuItemClick(MenuItem item) {
-                             Toast.makeText(ViewPostActivity.this, "clicked", Toast.LENGTH_SHORT).show();
--
-                             AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);
-                             builder.setTitle("Delete");
-                             builder.setMessage("Are you sure, you want to delete this Post?");
-@@ -249,7 +248,6 @@
- 
- 
-         if (mphoto.getType().equals("photo")) {
--
-             mPostImage.setVisibility(View.VISIBLE);
-             play2.setVisibility(View.GONE);
-             Glide.with(ViewPostActivity.this)
-@@ -742,10 +740,8 @@
-     }
- 
-     private void DeletePost() {
--
-         progress.setVisibility(View.VISIBLE);
--        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE,
--                WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
-+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE, WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
-         final int[] x = {0};
-         DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();
-         reference3.child(getString(R.string.dbname_follower))
-@@ -762,18 +758,11 @@
-                                         .child(getString(R.string.post_updates))
-                                         .child(mphoto.getPhoto_id())
-                                         .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());
--                                if (x[0] == snapshot.getChildrenCount()) {
--                                    deleteFurther();
--                                }
-+                                if (x[0] == snapshot.getChildrenCount()) deleteFurther();
-                             }
--                        } else {
--                            deleteFurther();
--
--                        }
-+                        } else deleteFurther();
-                     }
--
-                     private void deleteFurther() {
--
-                         if( !mphoto.getType().equals("photo")){
-                             StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getThumbnail());
-                             photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {
-Index: app/src/main/java/com/orion/orion/Adapters/AdapterComment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.models.Comment;\r\n\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.profile;\r\n\r\nimport java.util.List;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\nimport static com.android.volley.VolleyLog.TAG;\r\n\r\npublic class AdapterComment extends RecyclerView.Adapter<AdapterComment.ViewHolder> {\r\n    private String mAppend = \"\";\r\n\r\n    private Context mContext;\r\n    private List<Comment> comments;\r\n\r\n    public AdapterComment(Context mContext, List<Comment> comments) {\r\n        this.mContext = mContext;\r\n        this.comments = comments;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        View view= LayoutInflater.from(mContext).inflate(R.layout.layout_commets,parent,false);\r\n        return new AdapterComment.ViewHolder(view);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final ViewHolder holder, final int i) {\r\n\r\n        Comment comment= comments.get(i);\r\n\r\n        holder.comment.setText(comment.getComment());\r\n        holder.timestamp.setText(comment.getDate_created().substring(0,10));\r\n\r\n        getUserdetail(comment.getUser_id(),holder.username,holder.profileimage);\r\n\r\n        holder.username.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(mContext, profile.class);\r\n                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));\r\n\r\n                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());\r\n                mContext.startActivity(i);\r\n            }\r\n        });\r\n\r\n        holder.profileimage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(mContext, profile.class);\r\n                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));\r\n\r\n                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());\r\n                mContext.startActivity(i);\r\n            }\r\n        });\r\n\r\n       }\r\n\r\n    private void getUserdetail(String user_id, TextView username, CircleImageView profileimage) {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(mContext.getString(R.string.dbname_user_account_settings))\r\n                .child(user_id);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                    username.setText((dataSnapshot.getValue(users.class).getUsername()));\r\n\r\n                Glide.with(mContext)\r\n                        .load((dataSnapshot.getValue(users.class).getProfile_photo()))\r\n                        .placeholder(R.drawable.load)\r\n                        .error(R.drawable.default_image2)\r\n                        .placeholder(R.drawable.load)\r\n                        .into(profileimage);\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n    @Override\r\n    public long getItemId(int position) {\r\n        Comment photo = comments.get(position);\r\n        return photo.getDate_created().hashCode();\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return comments.size();\r\n    }\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        return position;\r\n    }\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        TextView comment,username,timestamp;\r\n        CircleImageView profileimage;\r\n\r\n        public ViewHolder(@NonNull View convertView) {\r\n            super(convertView);\r\n\r\n            comment=(TextView)convertView.findViewById(R.id.addcomment);\r\n            username=(TextView)convertView.findViewById(R.id.comment_username);\r\n         timestamp=(TextView)convertView.findViewById(R.id.comment_time_posted);\r\n           profileimage=(CircleImageView)convertView.findViewById((R.id.commet_profile_image));\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/Adapters/AdapterComment.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
-+++ app/src/main/java/com/orion/orion/Adapters/AdapterComment.java	(date 1605450390236)
-@@ -1,17 +1,23 @@
- package com.orion.orion.Adapters;
- 
-+import android.app.AlertDialog;
- import android.content.Context;
-+import android.content.DialogInterface;
- import android.content.Intent;
- import android.util.Log;
- import android.view.LayoutInflater;
- import android.view.View;
- import android.view.ViewGroup;
-+import android.widget.ImageButton;
-+import android.widget.PopupMenu;
- import android.widget.TextView;
-+import android.widget.Toast;
- 
- import androidx.annotation.NonNull;
- import androidx.recyclerview.widget.RecyclerView;
- 
- import com.bumptech.glide.Glide;
-+import com.google.firebase.auth.FirebaseAuth;
- import com.google.firebase.database.DataSnapshot;
- import com.google.firebase.database.DatabaseError;
- import com.google.firebase.database.DatabaseReference;
-@@ -19,6 +25,7 @@
- import com.google.firebase.database.Query;
- import com.google.firebase.database.ValueEventListener;
- import com.orion.orion.R;
-+import com.orion.orion.ViewPostActivity;
- import com.orion.orion.models.Comment;
- 
- import com.orion.orion.models.users;
-@@ -32,10 +39,8 @@
- 
- public class AdapterComment extends RecyclerView.Adapter<AdapterComment.ViewHolder> {
-     private String mAppend = "";
--
-     private Context mContext;
-     private List<Comment> comments;
--
-     public AdapterComment(Context mContext, List<Comment> comments) {
-         this.mContext = mContext;
-         this.comments = comments;
-@@ -44,45 +49,51 @@
-     @NonNull
-     @Override
-     public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
--
--        View view= LayoutInflater.from(mContext).inflate(R.layout.layout_commets,parent,false);
-+        View view = LayoutInflater.from(mContext).inflate(R.layout.layout_commets, parent, false);
-         return new AdapterComment.ViewHolder(view);
--
-     }
- 
-     @Override
-     public void onBindViewHolder(@NonNull final ViewHolder holder, final int i) {
--
--        Comment comment= comments.get(i);
--
-+        Comment comment = comments.get(i);
-         holder.comment.setText(comment.getComment());
--        holder.timestamp.setText(comment.getDate_created().substring(0,10));
--
--        getUserdetail(comment.getUser_id(),holder.username,holder.profileimage);
--
--        holder.username.setOnClickListener(new View.OnClickListener() {
--            @Override
--            public void onClick(View v) {
--                Intent i = new Intent(mContext, profile.class);
--                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
--
--                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
--                mContext.startActivity(i);
--            }
--        });
--
--        holder.profileimage.setOnClickListener(new View.OnClickListener() {
--            @Override
--            public void onClick(View v) {
--                Intent i = new Intent(mContext, profile.class);
--                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
--
--                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
--                mContext.startActivity(i);
--            }
-+        holder.timestamp.setText(comment.getDate_created().substring(0, 10));
-+        getUserdetail(comment.getUser_id(), holder.username, holder.profileimage);
-+        if(!comment.getUser_id().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) holder.edit.setVisibility(View.GONE);
-+        else {
-+            PopupMenu popup = new PopupMenu(mContext, holder.edit);
-+            popup.getMenuInflater().inflate(R.menu.post_comment, popup.getMenu());
-+            holder.edit.setOnClickListener(v -> popup.show());
-+            popup.setOnMenuItemClickListener(item -> {
-+                Toast.makeText(mContext, "You Clicked : " + item.getTitle(), Toast.LENGTH_SHORT).show();
-+                AlertDialog.Builder builder = new AlertDialog.Builder(mContext);
-+                builder.setTitle("Delete");
-+                builder.setMessage("Are you sure, you want to delete this comment?");
-+                builder.setPositiveButton("Delete", new DialogInterface.OnClickListener() {
-+                    @Override
-+                    public void onClick(DialogInterface dialog, int which) {
-+                        Log.d(TAG, "Deleting comment");
-+                        DeletePost();
-+                    }
-+                });
-+                builder.setNegativeButton("No", (dialog, which) -> dialog.dismiss());
-+                builder.create().show();
-+                return true;
-+            });
-+        }
-+        holder.username.setOnClickListener(v -> {
-+            Intent i1 = new Intent(mContext, profile.class);
-+            i1.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
-+            i1.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
-+            mContext.startActivity(i1);
-         });
--
--       }
-+        holder.profileimage.setOnClickListener(v -> {
-+            Intent i12 = new Intent(mContext, profile.class);
-+            i12.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
-+            i12.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
-+            mContext.startActivity(i12);
-+        });
-+    }
- 
-     private void getUserdetail(String user_id, TextView username, CircleImageView profileimage) {
-         DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
-@@ -92,29 +103,22 @@
-         query.addListenerForSingleValueEvent(new ValueEventListener() {
-             @Override
-             public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
--
--                    username.setText((dataSnapshot.getValue(users.class).getUsername()));
--
-+                username.setText((dataSnapshot.getValue(users.class).getUsername()));
-                 Glide.with(mContext)
-                         .load((dataSnapshot.getValue(users.class).getProfile_photo()))
-                         .placeholder(R.drawable.load)
-                         .error(R.drawable.default_image2)
-                         .placeholder(R.drawable.load)
-                         .into(profileimage);
--
--
--
-             }
--
- 
-             @Override
-             public void onCancelled(@NonNull DatabaseError databaseError) {
-                 Log.d(TAG, "Query Cancelled");
-             }
-         });
--
-+    }
- 
--    }
-     @Override
-     public long getItemId(int position) {
-         Comment photo = comments.get(position);
-@@ -125,30 +129,23 @@
-     public int getItemCount() {
-         return comments.size();
-     }
-+
-     @Override
-     public int getItemViewType(int position) {
-         return position;
-     }
-+
-     public class ViewHolder extends RecyclerView.ViewHolder {
--
--        TextView comment,username,timestamp;
-+        TextView comment, username, timestamp;
-         CircleImageView profileimage;
--
-+        ImageButton edit;
-         public ViewHolder(@NonNull View convertView) {
-             super(convertView);
--
--            comment=(TextView)convertView.findViewById(R.id.addcomment);
--            username=(TextView)convertView.findViewById(R.id.comment_username);
--         timestamp=(TextView)convertView.findViewById(R.id.comment_time_posted);
--           profileimage=(CircleImageView)convertView.findViewById((R.id.commet_profile_image));
--
--
--
--
-+            comment = (TextView) convertView.findViewById(R.id.addcomment);
-+            username = (TextView) convertView.findViewById(R.id.comment_username);
-+            timestamp = (TextView) convertView.findViewById(R.id.comment_time_posted);
-+            profileimage = (CircleImageView) convertView.findViewById((R.id.commet_profile_image));
-+            edit = (ImageButton) convertView.findViewById(R.id.edit);
-         }
-     }
--
--
--
--
- }
-Index: app/src/main/res/layout/layout_commets.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"\r\n    app:cardBackgroundColor=\"@color/white\"\r\n    app:cardUseCompatPadding=\"true\"\r\n    app:cardCornerRadius=\"5dp\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:background=\"@color/white\">\r\n    <RelativeLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n>\r\n    <de.hdodenhof.circleimageview.CircleImageView\r\n        android:layout_width=\"30dp\"\r\n        android:layout_height=\"30dp\"\r\n        android:id=\"@+id/commet_profile_image\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:layout_marginLeft=\"5dp\"\r\n        app:civ_border_color=\"@color/black\"\r\n        app:civ_border_width=\"0.5dp\"/>\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id/relLayout1\"\r\n        android:layout_toRightOf=\"@+id/commet_profile_image\"\r\n        android:layout_marginTop=\"5dp\"\r\n        >\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginRight=\"60dp\"\r\n        android:layout_marginBottom=\"5dp\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"naman\"\r\n            android:id=\"@+id/comment_username\"\r\n            android:layout_marginLeft=\"15dp\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"14sp\"\r\n            android:textStyle=\"bold\"/>\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"this is a comment\"\r\n            android:layout_marginLeft=\"15dp\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"14sp\"\r\n            android:layout_below=\"@+id/comment_username\"\r\n            android:id=\"@+id/addcomment\"/>\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"3 D\"\r\n            android:layout_marginLeft=\"15dp\"\r\n            android:textColor=\"@color/grey\"\r\n            android:id=\"@+id/comment_time_posted\"\r\n            android:layout_below=\"@+id/addcomment\"\r\n            android:textSize=\"10sp\"\r\n            android:layout_marginTop=\"5dp\"/>\r\n\r\n\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n    </RelativeLayout>\r\n\r\n</androidx.cardview.widget.CardView>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/layout_commets.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
-+++ app/src/main/res/layout/layout_commets.xml	(date 1605449247631)
-@@ -1,76 +1,85 @@
- <?xml version="1.0" encoding="utf-8"?>
- <androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    xmlns:tools="http://schemas.android.com/tools"
-     android:layout_width="wrap_content"
-     android:layout_height="wrap_content"
-+    android:background="@color/white"
-     app:cardBackgroundColor="@color/white"
--    app:cardUseCompatPadding="true"
-     app:cardCornerRadius="5dp"
--    xmlns:app="http://schemas.android.com/apk/res-auto"
--    android:background="@color/white">
-+    app:cardUseCompatPadding="true">
-+
-     <RelativeLayout
-         android:layout_width="wrap_content"
--        android:layout_height="wrap_content"
-->
--    <de.hdodenhof.circleimageview.CircleImageView
--        android:layout_width="30dp"
--        android:layout_height="30dp"
--        android:id="@+id/commet_profile_image"
--        android:layout_marginTop="5dp"
--        android:layout_marginLeft="5dp"
--        app:civ_border_color="@color/black"
--        app:civ_border_width="0.5dp"/>
--    <RelativeLayout
--        android:layout_width="match_parent"
--        android:layout_height="wrap_content"
--        android:id="@+id/relLayout1"
--        android:layout_toRightOf="@+id/commet_profile_image"
--        android:layout_marginTop="5dp"
--        >
-+        android:layout_height="wrap_content">
-+
-+        <RelativeLayout
-+            android:id="@+id/relLayout1"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:layout_marginTop="5dp"
-+            android:layout_toRightOf="@+id/commet_profile_image">
- 
--    <RelativeLayout
--        android:layout_width="match_parent"
--        android:layout_height="wrap_content"
--        android:layout_marginRight="60dp"
--        android:layout_marginBottom="5dp">
--        <TextView
--            android:layout_width="wrap_content"
--            android:layout_height="wrap_content"
--            android:text="naman"
--            android:id="@+id/comment_username"
--            android:layout_marginLeft="15dp"
--            android:textColor="@color/black"
--            android:textSize="14sp"
--            android:textStyle="bold"/>
-+            <RelativeLayout
-+                android:layout_width="match_parent"
-+                android:layout_height="wrap_content"
-+                android:layout_marginRight="60dp"
-+                android:layout_marginBottom="5dp">
-+
-+                <TextView
-+                    android:id="@+id/comment_username"
-+                    android:layout_width="wrap_content"
-+                    android:layout_height="wrap_content"
-+                    android:layout_marginLeft="15dp"
-+                    android:text="naman"
-+                    android:textColor="@color/black"
-+                    android:textSize="14sp"
-+                    android:textStyle="bold" />
- 
--        <TextView
--            android:layout_width="wrap_content"
--            android:layout_height="wrap_content"
--            android:text="this is a comment"
--            android:layout_marginLeft="15dp"
--            android:textColor="@color/black"
--            android:textSize="14sp"
--            android:layout_below="@+id/comment_username"
--            android:id="@+id/addcomment"/>
-+                <TextView
-+                    android:id="@+id/addcomment"
-+                    android:layout_width="wrap_content"
-+                    android:layout_height="wrap_content"
-+                    android:layout_below="@+id/comment_username"
-+                    android:layout_marginLeft="15dp"
-+                    android:text="this is a comment"
-+                    android:textColor="@color/black"
-+                    android:textSize="14sp" />
- 
--        <TextView
--            android:layout_width="wrap_content"
--            android:layout_height="wrap_content"
--            android:text="3 D"
--            android:layout_marginLeft="15dp"
--            android:textColor="@color/grey"
--            android:id="@+id/comment_time_posted"
--            android:layout_below="@+id/addcomment"
--            android:textSize="10sp"
--            android:layout_marginTop="5dp"/>
--
--
-+                <TextView
-+                    android:id="@+id/comment_time_posted"
-+                    android:layout_width="wrap_content"
-+                    android:layout_height="wrap_content"
-+                    android:layout_below="@+id/addcomment"
-+                    android:layout_marginLeft="15dp"
-+                    android:layout_marginTop="5dp"
-+                    android:text="3 D"
-+                    android:textColor="@color/grey"
-+                    android:textSize="10sp" />
- 
- 
--    </RelativeLayout>
-+            </RelativeLayout>
- 
-+            <ImageButton
-+                android:id="@+id/edit"
-+                android:layout_width="wrap_content"
-+                android:layout_height="50dp"
-+                android:layout_alignParentEnd="true"
-+                android:layout_centerVertical="true"
-+                android:src="@drawable/ic_eclipse"
-+                android:background="@color/white" />
- 
--    </RelativeLayout>
-+        </RelativeLayout>
- 
-+        <de.hdodenhof.circleimageview.CircleImageView
-+            android:id="@+id/commet_profile_image"
-+            android:layout_width="30dp"
-+            android:layout_height="30dp"
-+            android:layout_marginLeft="5dp"
-+            android:layout_marginTop="5dp"
-+            app:civ_border_color="@color/black"
-+            app:civ_border_width="0.5dp" />
-+
-     </RelativeLayout>
- 
- </androidx.cardview.widget.CardView>
-\ No newline at end of file
-Index: .idea/compiler.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/compiler.xml	(date 1605447137911)
-+++ .idea/compiler.xml	(date 1605447137911)
-@@ -0,0 +1,6 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="CompilerConfiguration">
-+    <bytecodeTargetLevel target="1.8" />
-+  </component>
-+</project>
-\ No newline at end of file
-Index: app/src/main/java/com/orion/orion/CommentActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.Adapters.AdapterComment;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.util.FirebaseMethods;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.TimeZone;\r\n\r\npublic class CommentActivity extends AppCompatActivity {\r\n    RecyclerView commentRv;\r\n    private ArrayList<Comment> comments;\r\n    private static final String TAG = \"CommentActivity\";\r\n\r\n    private AdapterComment adapterComment;\r\n\r\n\r\n    private ImageView mBackArrow,mCheckMark;\r\n    private EditText mComment;\r\n    private boolean notify = false;\r\n    private  FirebaseMethods mFirebaseMethods;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_comment);\r\n\r\n        Intent i = getIntent();\r\n        String phhotoId = i.getStringExtra(\"photoId\");\r\n        String userId = i.getStringExtra(\"userId\");\r\n        Log.d(TAG, \"onCreate: kol\" + phhotoId + userId);\r\n\r\n        mBackArrow = findViewById(R.id.backarrow);\r\n        mCheckMark = findViewById(R.id.checkMark);\r\n        mComment = findViewById(R.id.comment);\r\n        mFirebaseMethods = new FirebaseMethods(CommentActivity.this);\r\n\r\n\r\n        commentRv = findViewById(R.id.recyclerComment);\r\n        commentRv.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);\r\n        commentRv.setItemViewCacheSize(9);\r\n        commentRv.setDrawingCacheEnabled(true);\r\n        commentRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n        linearLayoutManager.setItemPrefetchEnabled(true);\r\n        linearLayoutManager.setInitialPrefetchItemCount(20);\r\n        commentRv.setLayoutManager(linearLayoutManager);\r\n\r\n        comments=new ArrayList<>();\r\n        adapterComment = new AdapterComment(this,comments);\r\n        adapterComment.setHasStableIds(true);\r\n        commentRv.setAdapter(adapterComment);\r\n\r\n        getComments(phhotoId,userId);\r\n\r\n\r\n        mCheckMark.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (!mComment.getText().toString().equals(\"\")){\r\n                    Log.d(TAG,\"attempting to submit new comment\");\r\n                    notify = true;\r\n\r\n                    addNewComment(mComment.getText().toString(),userId,phhotoId);\r\n\r\n                    mComment.setText(\"\");\r\n\r\n                    closeKeyboard();\r\n                }else{\r\n                    Toast.makeText(CommentActivity.this, \"C'mon..Give a Shoutout\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        mBackArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"onClick: dfg\");\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n    private String getTimeStamp(){\r\n        SimpleDateFormat sdf  = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ENGLISH);\r\n        sdf.setTimeZone(TimeZone.getTimeZone(\"Asia/Kolkata\"));\r\n        return  sdf.format(new Date());\r\n    }\r\n    private void closeKeyboard(){\r\n        View view=this.getCurrentFocus();\r\n        if (view!=null) {\r\n            InputMethodManager imm = (InputMethodManager) this.getSystemService(Context.INPUT_METHOD_SERVICE);\r\n            imm.hideSoftInputFromWindow(view.getWindowToken(),0);\r\n        }\r\n\r\n    }\r\n\r\n    private void addNewComment(String newComment, String userId, String phhotoId){\r\n        Log.d(TAG,\"adding new comment\");\r\n\r\n        DatabaseReference myRef = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n        String commentID = myRef.push().getKey();\r\n\r\n        Comment comment = new Comment();\r\n        comment.setComment(newComment);\r\n        comment.setDate_created(getTimeStamp());\r\n        comment.setUser_id(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n        myRef.child(getString(R.string.dbname_user_photos))\r\n                .child(userId)\r\n                .child(phhotoId)\r\n                .child(getString(R.string.field_comment))\r\n                .child(commentID)\r\n                .setValue(comment);\r\n\r\n        final DatabaseReference data = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        data.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                users user = dataSnapshot.getValue(users.class);\r\n\r\n                if (notify) {\r\n                    mFirebaseMethods.sendNotification(userId, user.getUsername(), \"commented on your post\",\"Comment\");\r\n                }\r\n                notify = false;\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n        addToHisNotification(\"\"+userId,phhotoId,\"commented on your post\");\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    private void addToHisNotification(String hisUid,String pId,String notification){\r\n\r\n        String timestamp=\"\"+System.currentTimeMillis();\r\n\r\n\r\n//        data to put in notification\r\n        HashMap<Object,String> hashMap = new HashMap<>();\r\n        hashMap.put(\"pId\",pId);\r\n\r\n        hashMap.put(\"timeStamp\",timestamp);\r\n\r\n        hashMap.put(\"pUid\",hisUid);\r\n\r\n        hashMap.put(\"notificaton\",notification);\r\n        hashMap.put(\"seen\",\"false\");\r\n\r\n        hashMap.put(\"sUid\",FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"users\");\r\n        ref.child(hisUid).child(\"Notifications\").child(timestamp).setValue(hashMap)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n    private void getComments(String phhotoId, String userId) {\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_user_photos))\r\n                .child(userId)\r\n                .child(phhotoId)\r\n                .child(getString(R.string.field_comment))\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        comments.clear();\r\n                        for (DataSnapshot snapshot1:snapshot.getChildren()){\r\n\r\n                            Comment comment=snapshot1.getValue(Comment.class);\r\n                            Log.d(TAG, \"onDataChange: kil\"+comment.toString());\r\n                            comments.add(comment);\r\n\r\n                        }\r\n\r\n                        adapterComment.notifyDataSetChanged();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/CommentActivity.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
-+++ app/src/main/java/com/orion/orion/CommentActivity.java	(date 1605448974033)
-@@ -39,31 +39,21 @@
-     RecyclerView commentRv;
-     private ArrayList<Comment> comments;
-     private static final String TAG = "CommentActivity";
--
-     private AdapterComment adapterComment;
--
--
--    private ImageView mBackArrow,mCheckMark;
-     private EditText mComment;
-     private boolean notify = false;
--    private  FirebaseMethods mFirebaseMethods;
-+    private FirebaseMethods mFirebaseMethods;
- 
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
-         setContentView(R.layout.activity_comment);
--
-         Intent i = getIntent();
--        String phhotoId = i.getStringExtra("photoId");
-+        String photoId = i.getStringExtra("photoId");
-         String userId = i.getStringExtra("userId");
--        Log.d(TAG, "onCreate: kol" + phhotoId + userId);
--
--        mBackArrow = findViewById(R.id.backarrow);
--        mCheckMark = findViewById(R.id.checkMark);
-+        Log.d(TAG, "onCreate: kol" + photoId + userId);
-         mComment = findViewById(R.id.comment);
-         mFirebaseMethods = new FirebaseMethods(CommentActivity.this);
--
--
-         commentRv = findViewById(R.id.recyclerComment);
-         commentRv.setHasFixedSize(true);
-         LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);
-@@ -73,157 +63,106 @@
-         linearLayoutManager.setItemPrefetchEnabled(true);
-         linearLayoutManager.setInitialPrefetchItemCount(20);
-         commentRv.setLayoutManager(linearLayoutManager);
--
--        comments=new ArrayList<>();
--        adapterComment = new AdapterComment(this,comments);
-+        comments = new ArrayList<>();
-+        adapterComment = new AdapterComment(this, comments);
-         adapterComment.setHasStableIds(true);
-         commentRv.setAdapter(adapterComment);
--
--        getComments(phhotoId,userId);
--
--
--        mCheckMark.setOnClickListener(new View.OnClickListener() {
--            @Override
--            public void onClick(View v) {
--                if (!mComment.getText().toString().equals("")){
--                    Log.d(TAG,"attempting to submit new comment");
--                    notify = true;
--
--                    addNewComment(mComment.getText().toString(),userId,phhotoId);
--
--                    mComment.setText("");
--
--                    closeKeyboard();
--                }else{
--                    Toast.makeText(CommentActivity.this, "C'mon..Give a Shoutout", Toast.LENGTH_SHORT).show();
--                }
--
--            }
-+        getComments(photoId, userId);
-+        ImageView mCheckMark = findViewById(R.id.checkMark);
-+        mCheckMark.setOnClickListener(v -> {
-+            if (!mComment.getText().toString().equals("")) {
-+                Log.d(TAG, "attempting to submit new comment");
-+                notify = true;
-+                addNewComment(mComment.getText().toString(), userId, photoId);
-+                mComment.setText("");
-+                closeKeyboard();
-+            } else
-+                Toast.makeText(CommentActivity.this, "C'mon..Give a Shoutout", Toast.LENGTH_SHORT).show();
-         });
-+        ImageView mBackArrow = findViewById(R.id.backarrow);
-+        mBackArrow.setOnClickListener(v -> finish());
-+    }
- 
--        mBackArrow.setOnClickListener(new View.OnClickListener() {
--            @Override
--            public void onClick(View v) {
--                Log.d(TAG, "onClick: dfg");
--                finish();
--            }
--        });
--    }
--    private String getTimeStamp(){
--        SimpleDateFormat sdf  = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", Locale.ENGLISH);
-+    private String getTimeStamp() {
-+        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", Locale.ENGLISH);
-         sdf.setTimeZone(TimeZone.getTimeZone("Asia/Kolkata"));
--        return  sdf.format(new Date());
-+        return sdf.format(new Date());
-     }
--    private void closeKeyboard(){
--        View view=this.getCurrentFocus();
--        if (view!=null) {
-+
-+    private void closeKeyboard() {
-+        View view = this.getCurrentFocus();
-+        if (view != null) {
-             InputMethodManager imm = (InputMethodManager) this.getSystemService(Context.INPUT_METHOD_SERVICE);
--            imm.hideSoftInputFromWindow(view.getWindowToken(),0);
-+            imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
-         }
--
-     }
- 
--    private void addNewComment(String newComment, String userId, String phhotoId){
--        Log.d(TAG,"adding new comment");
--
-+    private void addNewComment(String newComment, String userId, String photoId) {
-+        Log.d(TAG, "adding new comment");
-         DatabaseReference myRef = FirebaseDatabase.getInstance().getReference();
--
--
-         String commentID = myRef.push().getKey();
--
-         Comment comment = new Comment();
-         comment.setComment(newComment);
-         comment.setDate_created(getTimeStamp());
-         comment.setUser_id(FirebaseAuth.getInstance().getCurrentUser().getUid());
--
--
-         myRef.child(getString(R.string.dbname_user_photos))
-                 .child(userId)
--                .child(phhotoId)
-+                .child(photoId)
-                 .child(getString(R.string.field_comment))
-                 .child(commentID)
-                 .setValue(comment);
--
-         final DatabaseReference data = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users))
-                 .child(FirebaseAuth.getInstance().getCurrentUser().getUid());
-         data.addValueEventListener(new ValueEventListener() {
-             @Override
-             public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
-                 users user = dataSnapshot.getValue(users.class);
--
--                if (notify) {
--                    mFirebaseMethods.sendNotification(userId, user.getUsername(), "commented on your post","Comment");
--                }
-+                if (notify)
-+                    mFirebaseMethods.sendNotification(userId, user.getUsername(), "commented on your post", "Comment");
-                 notify = false;
--
-             }
- 
-             @Override
-             public void onCancelled(@NonNull DatabaseError databaseError) {
--
-             }
-         });
--
--        addToHisNotification(""+userId,phhotoId,"commented on your post");
--
--
--
--
--
-+        addToHisNotification("" + userId, photoId, "commented on your post");
-     }
--    private void addToHisNotification(String hisUid,String pId,String notification){
--
--        String timestamp=""+System.currentTimeMillis();
--
--
-+
-+    private void addToHisNotification(String hisUid, String pId, String notification) {
-+        String timestamp = "" + System.currentTimeMillis();
- //        data to put in notification
--        HashMap<Object,String> hashMap = new HashMap<>();
--        hashMap.put("pId",pId);
--
--        hashMap.put("timeStamp",timestamp);
--
--        hashMap.put("pUid",hisUid);
--
--        hashMap.put("notificaton",notification);
--        hashMap.put("seen","false");
--
--        hashMap.put("sUid",FirebaseAuth.getInstance().getCurrentUser().getUid());
--
--
--
-+        HashMap<Object, String> hashMap = new HashMap<>();
-+        hashMap.put("pId", pId);
-+        hashMap.put("timeStamp", timestamp);
-+        hashMap.put("pUid", hisUid);
-+        hashMap.put("notificaton", notification);
-+        hashMap.put("seen", "false");
-+        hashMap.put("sUid", FirebaseAuth.getInstance().getCurrentUser().getUid());
-         DatabaseReference ref = FirebaseDatabase.getInstance().getReference("users");
-         ref.child(hisUid).child("Notifications").child(timestamp).setValue(hashMap)
--                .addOnSuccessListener(new OnSuccessListener<Void>() {
--                    @Override
--                    public void onSuccess(Void aVoid) {
-+                .addOnSuccessListener(aVoid -> {
- 
--                    }
--                }).addOnFailureListener(new OnFailureListener() {
--            @Override
--            public void onFailure(@NonNull Exception e) {
-+                }).addOnFailureListener(e -> {
- 
--            }
-         });
--
-     }
--    private void getComments(String phhotoId, String userId) {
-+
-+    private void getComments(String photoId, String userId) {
-         DatabaseReference db = FirebaseDatabase.getInstance().getReference();
-         db.child(getString(R.string.dbname_user_photos))
-                 .child(userId)
--                .child(phhotoId)
-+                .child(photoId)
-                 .child(getString(R.string.field_comment))
-                 .addValueEventListener(new ValueEventListener() {
-                     @Override
-                     public void onDataChange(@NonNull DataSnapshot snapshot) {
-                         comments.clear();
--                        for (DataSnapshot snapshot1:snapshot.getChildren()){
--
--                            Comment comment=snapshot1.getValue(Comment.class);
--                            Log.d(TAG, "onDataChange: kil"+comment.toString());
-+                        for (DataSnapshot snapshot1 : snapshot.getChildren()) {
-+                            Comment comment = snapshot1.getValue(Comment.class);
-+                            Log.d(TAG, "onDataChange: kil" + comment.toString());
-                             comments.add(comment);
--
-                         }
--
-                         adapterComment.notifyDataSetChanged();
-                     }
- 
-@@ -232,7 +171,5 @@
- 
-                     }
-                 });
--
--
-     }
--}
-+}
-\ No newline at end of file
-Index: build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.0.2'\r\n        classpath 'com.google.gms:google-services:4.3.3'\r\n        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.2.0'\r\n        classpath 'com.google.firebase:perf-plugin:1.3.1'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url \"https://jitpack.io\" }\r\n        maven { url \"https://maven.google.com\" }\r\n        \r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- build.gradle	(revision f663a29a8d1c8290d711089b217f1d140de116de)
-+++ build.gradle	(date 1605447145790)
-@@ -7,7 +7,7 @@
-         
-     }
-     dependencies {
--        classpath 'com.android.tools.build:gradle:4.0.2'
-+        classpath 'com.android.tools.build:gradle:4.1.1'
-         classpath 'com.google.gms:google-services:4.3.3'
-         classpath 'com.google.firebase:firebase-crashlytics-gradle:2.2.0'
-         classpath 'com.google.firebase:perf-plugin:1.3.1'
-Index: app/src/main/java/com/orion/orion/home/MainActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion.home;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\n\r\n\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.iid.FirebaseInstanceId;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.Notifications.Token;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.login.login;\r\nimport com.orion.orion.models.Chat;\r\nimport com.orion.orion.util.BottomNaavigationViewHelper;\r\nimport com.orion.orion.Adapters.SectionPagerAdapter;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class MainActivity extends AppCompatActivity\r\n        {\r\n\r\n\r\n    private static final String TAG = \"MainActivity\";\r\n    private static final int HOME_FRAGMENT = 1;\r\n            public TabLayout tablayout;\r\n    private static final int ACTIVITY_NUM = 0;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private ViewPager mViewPager;\r\n    private FrameLayout mFramelayoutl;\r\n    private RelativeLayout mRelativeLayout;\r\n    LinearLayout prom;\r\n    Context context=MainActivity.this;\r\n    String mUid;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Log.d(TAG, \"onCreate:starting.\");\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mViewPager = (ViewPager) findViewById(R.id.viewpager_container);\r\n        mFramelayoutl = (FrameLayout) findViewById(R.id.container);\r\n        mRelativeLayout = (RelativeLayout) findViewById(R.id.relLayoutParent);\r\n\r\n\r\n        setupBottomNavigationView();\r\n        checkCurrentuser(mAuth.getCurrentUser());\r\n        setupFirebaseAuth();\r\n\r\n        setupViewPager();\r\n\r\n\r\n//        update Token\r\n        updateToken(FirebaseInstanceId.getInstance().getToken());\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        checkCurrentuser(mAuth.getCurrentUser());\r\n        super.onResume();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //    *********************FIREBASE***************************\r\n    private void checkCurrentuser(FirebaseUser user) {\r\n        Log.d(TAG, \"checkCurrentuser:check if current user logged in\");\r\n        if (user == null) {\r\n            Intent intent = new Intent(MainActivity.this, login.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n\r\n    }\r\n\r\n            public void updateToken(String token) {\r\n\r\n                try {\r\n\r\n\r\n                    DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"Tokens\");\r\n                    Token mToken = new Token(token);\r\n                    ref.child(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid()).setValue(mToken);\r\n                }catch (NullPointerException e){\r\n                    Log.e(TAG, \"updateToken: \"+e.getMessage() );\r\n                }\r\n\r\n            }\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        mAuthListener = new FirebaseAuth.AuthStateListener() {\r\n            @Override\r\n            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\r\n                FirebaseUser user = firebaseAuth.getCurrentUser();\r\n                checkCurrentuser(user);\r\n                if (user != null) {\r\n\r\n                    Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n                } else {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                    Intent intent = new Intent(MainActivity.this, login.class);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n        mViewPager.setCurrentItem(HOME_FRAGMENT);\r\n        checkCurrentuser(mAuth.getCurrentUser());\r\n\r\n\r\n    }\r\n\r\n            @Override\r\n            public void onDestroy() {\r\n                super.onDestroy();\r\n            }\r\n\r\n            @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n\r\n    //   ************************FIREBASE****************************\r\n\r\n\r\n    //    for adding 3 tabs -media,home,message\r\n    private void setupViewPager() {\r\n        SectionPagerAdapter adapter = new SectionPagerAdapter(getSupportFragmentManager());\r\n        adapter.addFragment(new notificationFragment());\r\n        adapter.addFragment(new Homefragment());\r\n        adapter.addFragment(new messagesfragment());\r\n\r\n        mViewPager.setAdapter(adapter);\r\n\r\n        tablayout = (TabLayout) findViewById(R.id.tabs);\r\n        tablayout.setupWithViewPager(mViewPager);\r\n//        for giving icon to them\r\n        tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);\r\n        tablayout.getTabAt(1).setText(\"ORION\");\r\n        tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);\r\n\r\n\r\n\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(\"Notifications\").orderByKey().limitToLast(1)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n\r\n                                if (snapshot1.child(\"seen\").getValue().equals(\"true\")) {\r\n\r\n                                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);\r\n\r\n                                }\r\n                                if (snapshot1.child(\"seen\").getValue().equals(\"false\")) {\r\n                                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_red);\r\n                                    break;\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n        checkMessageSeen(context);\r\n\r\n\r\n        tablayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n\r\n                if (tablayout.getSelectedTabPosition() == 0) {\r\n\r\n\r\n                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);\r\n\r\n\r\n                    DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                    db.child(getString(R.string.dbname_users))\r\n                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                            .child(\"Notifications\")\r\n                            .orderByChild(\"seen\")\r\n                            .equalTo(\"false\")\r\n                            .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                    if (snapshot.exists()) {\r\n                                        for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                            if (tablayout.getSelectedTabPosition() == 0) {\r\n                                                db.child(getString(R.string.dbname_users))\r\n                                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                        .child(\"Notifications\")\r\n                                                        .child(snapshot1.getKey())\r\n                                                        .child(\"seen\")\r\n                                                        .setValue(\"true\");\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                }\r\n                            });\r\n                }\r\n                if (tablayout.getSelectedTabPosition()==2){\r\n                    checkMessageSeen(context);\r\n                }\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n                tablayout.removeOnTabSelectedListener(this);\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n            public void checkMessageSeen(Context context) {\r\n\r\n                DatabaseReference refer = FirebaseDatabase.getInstance().getReference();\r\n                Query query = refer.child(context.getString(R.string.dbname_Chats))\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n                query.addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                        final long[] x = {0};\r\n                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n\r\n\r\n                            refer.child(context.getString(R.string.dbname_ChatList))\r\n                                    .child(dataSnapshot.getValue().toString())\r\n                                    .orderByKey()\r\n                                    .limitToLast(1)\r\n                                    .addValueEventListener(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot1) {\r\n\r\n\r\n                                            for (DataSnapshot ds : snapshot1.getChildren()) {\r\n\r\n                                                if (ds.exists()) {\r\n\r\n                                                    Chat chat = ds.getValue(Chat.class);\r\n                                                    if (!chat.isIfseen()&&chat.getReceiver().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                                                        tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_red);\r\n                                                        x[0]++;\r\n                                                    }\r\n\r\n                                                }\r\n\r\n\r\n                                            }\r\n\r\n                                        }\r\n\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                                        }\r\n                                    });\r\n\r\n                            if (x[0]>0){\r\n\r\n                                break;\r\n                            }else{\r\n                                tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);\r\n\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            public void hideLayout() {\r\n        mRelativeLayout.setVisibility(View.GONE);\r\n        mFramelayoutl.setVisibility(View.VISIBLE);\r\n\r\n    }\r\n\r\n    public void showLayout() {\r\n        mRelativeLayout.setVisibility(View.VISIBLE);\r\n        mFramelayoutl.setVisibility(View.GONE);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n        if (mFramelayoutl.getVisibility() == View.VISIBLE) {\r\n            showLayout();\r\n        }\r\n    }\r\n\r\n    private void setupBottomNavigationView() {\r\n        Log.d(TAG, \" setupBottomNavigationView:setting up BottomNavigationView\");\r\n        BottomNavigationViewEx bottomNavigationViewEx = (BottomNavigationViewEx) findViewById(R.id.BottomNavViewBar);\r\n        BottomNaavigationViewHelper.setupBottomNavigationView(bottomNavigationViewEx);\r\n        BottomNaavigationViewHelper.enableNavigation(MainActivity.this, this, bottomNavigationViewEx);\r\n\r\n        Menu menu = bottomNavigationViewEx.getMenu();\r\n        MenuItem menuItem = menu.getItem(ACTIVITY_NUM);\r\n        menuItem.setChecked(true);\r\n    }\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/home/MainActivity.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
-+++ app/src/main/java/com/orion/orion/home/MainActivity.java	(date 1605448404813)
-@@ -2,10 +2,13 @@
- 
- import androidx.annotation.NonNull;
- import androidx.appcompat.app.AppCompatActivity;
-+import androidx.preference.PreferenceManager;
- import androidx.viewpager.widget.ViewPager;
- 
- import android.content.Context;
- import android.content.Intent;
-+import android.content.IntentSender;
-+import android.content.SharedPreferences;
- import android.os.Bundle;
- import android.util.Log;
- import android.view.Menu;
-@@ -16,7 +19,17 @@
- import android.widget.RelativeLayout;
- 
- 
-+import com.google.android.material.snackbar.Snackbar;
- import com.google.android.material.tabs.TabLayout;
-+import com.google.android.play.core.appupdate.AppUpdateInfo;
-+import com.google.android.play.core.appupdate.AppUpdateManager;
-+import com.google.android.play.core.appupdate.AppUpdateManagerFactory;
-+import com.google.android.play.core.install.InstallState;
-+import com.google.android.play.core.install.InstallStateUpdatedListener;
-+import com.google.android.play.core.install.model.AppUpdateType;
-+import com.google.android.play.core.install.model.InstallStatus;
-+import com.google.android.play.core.install.model.UpdateAvailability;
-+import com.google.android.play.core.tasks.Task;
- import com.google.firebase.auth.FirebaseAuth;
- import com.google.firebase.auth.FirebaseUser;
- import com.google.firebase.database.DataSnapshot;
-@@ -36,101 +49,211 @@
- 
- import java.util.Objects;
- 
--public class MainActivity extends AppCompatActivity
--        {
--
-+public class MainActivity extends AppCompatActivity {
- 
-     private static final String TAG = "MainActivity";
-+    private static final int ACTIVITY_NUM = 0;
-     private static final int HOME_FRAGMENT = 1;
--            public TabLayout tablayout;
--    private static final int ACTIVITY_NUM = 0;
-+    private Context mContext;
-+
-+    public TabLayout tablayout;
-     private FirebaseAuth mAuth;
-     private FirebaseAuth.AuthStateListener mAuthListener;
-     private ViewPager mViewPager;
-     private FrameLayout mFramelayoutl;
-     private RelativeLayout mRelativeLayout;
--    LinearLayout prom;
--    Context context=MainActivity.this;
--    String mUid;
-+    private static final int REQ_CODE_VERSION_UPDATE = 530;
-+    private AppUpdateManager appUpdateManager;
-+    private InstallStateUpdatedListener installStateUpdatedListener;
- 
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
-         setContentView(R.layout.activity_main);
--
-+        mContext = MainActivity.this;
-         Log.d(TAG, "onCreate:starting.");
-         mAuth = FirebaseAuth.getInstance();
--        mViewPager = (ViewPager) findViewById(R.id.viewpager_container);
--        mFramelayoutl = (FrameLayout) findViewById(R.id.container);
--        mRelativeLayout = (RelativeLayout) findViewById(R.id.relLayoutParent);
-+        mViewPager = findViewById(R.id.viewpager_container);
-+        mFramelayoutl = findViewById(R.id.container);
-+        mRelativeLayout = findViewById(R.id.relLayoutParent);
- 
--
-+        checkForAppUpdate();
-         setupBottomNavigationView();
-         checkCurrentuser(mAuth.getCurrentUser());
-         setupFirebaseAuth();
--
-         setupViewPager();
--
--
--//        update Token
-         updateToken(FirebaseInstanceId.getInstance().getToken());
-     }
- 
--    @Override
--    protected void onResume() {
--        checkCurrentuser(mAuth.getCurrentUser());
--        super.onResume();
--    }
--
--
--
--
--
--    //    *********************FIREBASE***************************
-     private void checkCurrentuser(FirebaseUser user) {
-         Log.d(TAG, "checkCurrentuser:check if current user logged in");
-         if (user == null) {
-             Intent intent = new Intent(MainActivity.this, login.class);
-             startActivity(intent);
-         }
--
--
-     }
- 
--            public void updateToken(String token) {
--
--                try {
--
--
--                    DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Tokens");
--                    Token mToken = new Token(token);
--                    ref.child(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid()).setValue(mToken);
--                }catch (NullPointerException e){
--                    Log.e(TAG, "updateToken: "+e.getMessage() );
--                }
--
--            }
-+    public void updateToken(String token) {
-+        try {
-+            DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Tokens");
-+            Token mToken = new Token(token);
-+            ref.child(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid()).setValue(mToken);
-+        } catch (NullPointerException e) {
-+            Log.e(TAG, "updateToken: " + e.getMessage());
-+        }
-+    }
- 
-     private void setupFirebaseAuth() {
-         Log.d(TAG, "setup FirebaseAuth: setting up firebase auth.");
--
-         mAuth = FirebaseAuth.getInstance();
--
--        mAuthListener = new FirebaseAuth.AuthStateListener() {
--            @Override
--            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {
--                FirebaseUser user = firebaseAuth.getCurrentUser();
--                checkCurrentuser(user);
--                if (user != null) {
--
--                    Log.d(TAG, "onAuthStateChanged:signed in:" + user.getUid());
--                } else {
--                    Log.d(TAG, "onAuthStateChanged:signed_out");
--                    Intent intent = new Intent(MainActivity.this, login.class);
--                    startActivity(intent);
--                }
-+        mAuthListener = firebaseAuth -> {
-+            FirebaseUser user = firebaseAuth.getCurrentUser();
-+            checkCurrentuser(user);
-+            if (user != null) {
-+                Log.d(TAG, "onAuthStateChanged:signed in:" + user.getUid());
-+            } else {
-+                Log.d(TAG, "onAuthStateChanged:signed_out");
-+                SharedPreferences settings = getSharedPreferences("shared preferences", Context.MODE_PRIVATE);
-+                settings.edit().clear().apply();
-+                PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit().clear().apply();
-+                Intent intent = new Intent(mContext, login.class);
-+                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
-+                mAuth.signOut();
-+                startActivity(intent);
-+            }
-+        };
-+    }
-+
-+    private void checkForAppUpdate() {
-+        // Creates instance of the manager.
-+        appUpdateManager = AppUpdateManagerFactory.create(mContext);
-+
-+        // Returns an intent object that you use to check for an update.
-+        Task<AppUpdateInfo> appUpdateInfoTask = appUpdateManager.getAppUpdateInfo();
-+
-+        // Create a listener to track request state updates.
-+        installStateUpdatedListener = new InstallStateUpdatedListener() {
-+            @Override
-+            public void onStateUpdate(InstallState installState) {
-+                // Show module progress, log state, or install the update.
-+                if (installState.installStatus() == InstallStatus.DOWNLOADED)
-+                    // After the update is downloaded, show a notification
-+                    // and request user confirmation to restart the app.
-+                    popupSnackbarForCompleteUpdateAndUnregister();
-             }
-         };
-+
-+        // Checks that the platform will allow the specified type of update.
-+        appUpdateInfoTask.addOnSuccessListener(appUpdateInfo -> {
-+            if (appUpdateInfo.updateAvailability() == UpdateAvailability.UPDATE_AVAILABLE) {
-+                // Request the update.
-+                if (appUpdateInfo.isUpdateTypeAllowed(AppUpdateType.FLEXIBLE)) {
-+
-+                    // Before starting an update, register a listener for updates.
-+                    appUpdateManager.registerListener(installStateUpdatedListener);
-+                    // Start an update.
-+                    startAppUpdateFlexible(appUpdateInfo);
-+                } else if (appUpdateInfo.isUpdateTypeAllowed(AppUpdateType.IMMEDIATE)) {
-+                    // Start an update.
-+                    startAppUpdateImmediate(appUpdateInfo);
-+                }
-+            }
-+        });
-+    }
-+
-+    private void startAppUpdateImmediate(AppUpdateInfo appUpdateInfo) {
-+        try {
-+            appUpdateManager.startUpdateFlowForResult(
-+                    appUpdateInfo,
-+                    AppUpdateType.IMMEDIATE,
-+                    // The current activity making the update request.
-+                    this,
-+                    // Include a request code to later monitor this update request.
-+                    MainActivity.REQ_CODE_VERSION_UPDATE);
-+        } catch (IntentSender.SendIntentException e) {
-+            e.printStackTrace();
-+        }
-+    }
-+
-+    private void startAppUpdateFlexible(AppUpdateInfo appUpdateInfo) {
-+        try {
-+            appUpdateManager.startUpdateFlowForResult(
-+                    appUpdateInfo,
-+                    AppUpdateType.FLEXIBLE,
-+                    // The current activity making the update request.
-+                    this,
-+                    // Include a request code to later monitor this update request.
-+                    MainActivity.REQ_CODE_VERSION_UPDATE);
-+        } catch (IntentSender.SendIntentException e) {
-+            e.printStackTrace();
-+            unregisterInstallStateUpdListener();
-+        }
-+    }
-+
-+    /**
-+     * Displays the snackbar notification and call to action.
-+     * Needed only for Flexible app update
-+     */
-+    private void popupSnackbarForCompleteUpdateAndUnregister() {
-+        Snackbar snackbar = Snackbar.make(findViewById(R.id.activity_main_layout), "An update has just been downloaded.", Snackbar.LENGTH_INDEFINITE);
-+        snackbar.setAction("RESTART", view -> appUpdateManager.completeUpdate());
-+        snackbar.setActionTextColor(getResources().getColor(R.color.scheme8));
-+        snackbar.show();
-+
-+        unregisterInstallStateUpdListener();
-+    }
-+
-+    /**
-+     * Checks that the update is not stalled during 'onResume()'.
-+     * However, you should execute this check at all app entry points.
-+     */
-+    private void checkNewAppVersionState() {
-+        appUpdateManager
-+                .getAppUpdateInfo()
-+                .addOnSuccessListener(
-+                        appUpdateInfo -> {
-+                            //FLEXIBLE:
-+                            // If the update is downloaded but not installed,
-+                            // notify the user to complete the update.
-+                            if (appUpdateInfo.installStatus() == InstallStatus.DOWNLOADED) {
-+                                popupSnackbarForCompleteUpdateAndUnregister();
-+                            }
-+
-+                            //IMMEDIATE:
-+                            if (appUpdateInfo.updateAvailability()
-+                                    == UpdateAvailability.DEVELOPER_TRIGGERED_UPDATE_IN_PROGRESS) {
-+                                // If an in-app update is already running, resume the update.
-+                                startAppUpdateImmediate(appUpdateInfo);
-+                            }
-+                        });
-+
-+    }
-+
-+    /**
-+     * Needed only for FLEXIBLE update
-+     */
-+    private void unregisterInstallStateUpdListener() {
-+        if (appUpdateManager != null && installStateUpdatedListener != null)
-+            appUpdateManager.unregisterListener(installStateUpdatedListener);
-+    }
-+
-+    @Override
-+    public void onActivityResult(int requestCode, final int resultCode, Intent intent) {
-+        super.onActivityResult(requestCode, resultCode, intent);
-+        if (requestCode == REQ_CODE_VERSION_UPDATE && resultCode != RESULT_OK) {
-+            //RESULT_OK / RESULT_CANCELED / RESULT_IN_APP_UPDATE_FAILED
-+            Log.d(TAG, "Update flow failed! Result code: " + resultCode);
-+            // If the update is cancelled or fails,
-+            // you can request to start the update again.
-+            unregisterInstallStateUpdListener();
-+        }
-+    }
-+
-+    @Override
-+    protected void onResume() {
-+        checkCurrentuser(mAuth.getCurrentUser());
-+        checkNewAppVersionState();
-+        super.onResume();
-     }
- 
-     @Override
-@@ -139,16 +262,15 @@
-         mAuth.addAuthStateListener(mAuthListener);
-         mViewPager.setCurrentItem(HOME_FRAGMENT);
-         checkCurrentuser(mAuth.getCurrentUser());
--
--
-     }
- 
--            @Override
--            public void onDestroy() {
--                super.onDestroy();
--            }
-+    @Override
-+    public void onDestroy() {
-+        unregisterInstallStateUpdListener();
-+        super.onDestroy();
-+    }
- 
--            @Override
-+    @Override
-     public void onStop() {
-         super.onStop();
-         if (mAuthListener != null) {
-@@ -165,42 +287,30 @@
-         adapter.addFragment(new notificationFragment());
-         adapter.addFragment(new Homefragment());
-         adapter.addFragment(new messagesfragment());
--
-         mViewPager.setAdapter(adapter);
--
-         tablayout = (TabLayout) findViewById(R.id.tabs);
-         tablayout.setupWithViewPager(mViewPager);
--//        for giving icon to them
-         tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
-         tablayout.getTabAt(1).setText("ORION");
-         tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);
--
--
--
-         DatabaseReference db = FirebaseDatabase.getInstance().getReference();
--        db.child(getString(R.string.dbname_users))
--                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
--                .child("Notifications").orderByKey().limitToLast(1)
-+        db.child(getString(R.string.dbname_users)).child(mAuth.getCurrentUser().getUid())
-+                .child("Notifications")
-+                .orderByKey()
-+                .limitToLast(1)
-                 .addValueEventListener(new ValueEventListener() {
-                     @Override
-                     public void onDataChange(@NonNull DataSnapshot snapshot) {
-                         if (snapshot.exists()) {
-                             for (DataSnapshot snapshot1 : snapshot.getChildren()) {
--
--                                if (snapshot1.child("seen").getValue().equals("true")) {
--
--                                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
--
--                                }
-+                                if (snapshot1.child("seen").getValue().equals("true")) tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
-                                 if (snapshot1.child("seen").getValue().equals("false")) {
-                                     tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_red);
-                                     break;
-                                 }
--
-                             }
-                         }
-                     }
--
- 
-                     @Override
-                     public void onCancelled(@NonNull DatabaseError error) {
-@@ -208,19 +318,12 @@
-                     }
-                 });
- 
--        checkMessageSeen(context);
--
--
-+        checkMessageSeen(mContext);
-         tablayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
-             @Override
-             public void onTabSelected(TabLayout.Tab tab) {
--
-                 if (tablayout.getSelectedTabPosition() == 0) {
--
--
-                     tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
--
--
-                     DatabaseReference db = FirebaseDatabase.getInstance().getReference();
-                     db.child(getString(R.string.dbname_users))
-                             .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-@@ -250,95 +353,66 @@
-                                 }
-                             });
-                 }
--                if (tablayout.getSelectedTabPosition()==2){
--                    checkMessageSeen(context);
--                }
-+                if (tablayout.getSelectedTabPosition() == 2) checkMessageSeen(mContext);
-             }
--
- 
-             @Override
-             public void onTabUnselected(TabLayout.Tab tab) {
--
--
-             }
- 
-             @Override
-             public void onTabReselected(TabLayout.Tab tab) {
-                 tablayout.removeOnTabSelectedListener(this);
--
-             }
-         });
--
--
-     }
- 
--            public void checkMessageSeen(Context context) {
--
--                DatabaseReference refer = FirebaseDatabase.getInstance().getReference();
--                Query query = refer.child(context.getString(R.string.dbname_Chats))
--                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid());
--
--                query.addValueEventListener(new ValueEventListener() {
--                    @Override
--                    public void onDataChange(@NonNull DataSnapshot snapshot) {
--
--                        final long[] x = {0};
--                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {
--
--
--                            refer.child(context.getString(R.string.dbname_ChatList))
--                                    .child(dataSnapshot.getValue().toString())
--                                    .orderByKey()
--                                    .limitToLast(1)
--                                    .addValueEventListener(new ValueEventListener() {
--                                        @Override
--                                        public void onDataChange(@NonNull DataSnapshot snapshot1) {
--
--
--                                            for (DataSnapshot ds : snapshot1.getChildren()) {
--
--                                                if (ds.exists()) {
--
--                                                    Chat chat = ds.getValue(Chat.class);
--                                                    if (!chat.isIfseen()&&chat.getReceiver().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {
--                                                        tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_red);
--                                                        x[0]++;
--                                                    }
--
--                                                }
--
--
--                                            }
--
--                                        }
--
-+    public void checkMessageSeen(Context context) {
-+        DatabaseReference refer = FirebaseDatabase.getInstance().getReference();
-+        Query query = refer.child(context.getString(R.string.dbname_Chats))
-+                .child(mAuth.getCurrentUser().getUid());
-+        query.addValueEventListener(new ValueEventListener() {
-+            @Override
-+            public void onDataChange(@NonNull DataSnapshot snapshot) {
-+                final long[] x = {0};
-+                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {
-+                    refer.child(context.getString(R.string.dbname_ChatList))
-+                            .child(dataSnapshot.getValue().toString())
-+                            .orderByKey()
-+                            .limitToLast(1)
-+                            .addValueEventListener(new ValueEventListener() {
-+                                @Override
-+                                public void onDataChange(@NonNull DataSnapshot snapshot1) {
-+                                    for (DataSnapshot ds : snapshot1.getChildren()) {
-+                                        if (ds.exists()) {
-+                                            Chat chat = ds.getValue(Chat.class);
-+                                            if (!chat.isIfseen() && chat.getReceiver().equals(mAuth.getCurrentUser().getUid())) {
-+                                                tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_red);
-+                                                x[0]++;
-+                                            }
-+                                        }
-+                                    }
-+                                }
- 
--                                        @Override
--                                        public void onCancelled(@NonNull DatabaseError databaseError) {
-+                                @Override
-+                                public void onCancelled(@NonNull DatabaseError databaseError) {
- 
--                                        }
--                                    });
-+                                }
-+                            });
- 
--                            if (x[0]>0){
--
--                                break;
--                            }else{
--                                tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);
--
--                            }
--
--                        }
--                    }
-+                    if (x[0] > 0) break;
-+                    else tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);
-+                }
-+            }
- 
--                    @Override
--                    public void onCancelled(@NonNull DatabaseError error) {
-+            @Override
-+            public void onCancelled(@NonNull DatabaseError error) {
- 
--                    }
--                });
--
--            }
-+            }
-+        });
-+    }
- 
--            public void hideLayout() {
-+    public void hideLayout() {
-         mRelativeLayout.setVisibility(View.GONE);
-         mFramelayoutl.setVisibility(View.VISIBLE);
- 
-@@ -347,15 +421,12 @@
-     public void showLayout() {
-         mRelativeLayout.setVisibility(View.VISIBLE);
-         mFramelayoutl.setVisibility(View.GONE);
--
-     }
- 
-     @Override
-     public void onBackPressed() {
-         super.onBackPressed();
--        if (mFramelayoutl.getVisibility() == View.VISIBLE) {
--            showLayout();
--        }
-+        if (mFramelayoutl.getVisibility() == View.VISIBLE) showLayout();
-     }
- 
-     private void setupBottomNavigationView() {
-@@ -363,11 +434,8 @@
-         BottomNavigationViewEx bottomNavigationViewEx = (BottomNavigationViewEx) findViewById(R.id.BottomNavViewBar);
-         BottomNaavigationViewHelper.setupBottomNavigationView(bottomNavigationViewEx);
-         BottomNaavigationViewHelper.enableNavigation(MainActivity.this, this, bottomNavigationViewEx);
--
-         Menu menu = bottomNavigationViewEx.getMenu();
-         MenuItem menuItem = menu.getItem(ACTIVITY_NUM);
-         menuItem.setChecked(true);
-     }
--
--
--}
-+}
-\ No newline at end of file
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n  <component name=\"SuppressABINotification\">\r\n    <option name=\"modulesWithSuppressedNotConfigured\">\r\n      <set>\r\n        <option value=\"app\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/misc.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
-+++ .idea/misc.xml	(date 1605447137889)
-@@ -1,6 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
--  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
-+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
-     <output url="file://$PROJECT_DIR$/build/classes" />
-   </component>
-   <component name="ProjectType">
-Index: app/src/main/res/menu/post_comment.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/menu/post_comment.xml	(date 1605450034567)
-+++ app/src/main/res/menu/post_comment.xml	(date 1605450034567)
-@@ -0,0 +1,6 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<menu xmlns:android="http://schemas.android.com/apk/res/android">
-+    <item
-+        android:id="@+id/one"
-+        android:title="Delete Comment" />
-+</menu>
-\ No newline at end of file
-Index: .idea/gradle.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/gradle.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
-+++ .idea/gradle.xml	(date 1605447459756)
-@@ -5,6 +5,7 @@
-     <option name="linkedExternalProjectsSettings">
-       <GradleProjectSettings>
-         <option name="testRunner" value="PLATFORM" />
-+        <option name="disableWrapperSourceDistributionNotification" value="true" />
-         <option name="distributionType" value="DEFAULT_WRAPPED" />
-         <option name="externalProjectPath" value="$PROJECT_DIR$" />
-         <option name="gradleJvm" value="1.8" />
-@@ -15,6 +16,7 @@
-           </set>
-         </option>
-         <option name="resolveModulePerSourceSet" value="false" />
-+        <option name="useQualifiedModuleNames" value="true" />
-       </GradleProjectSettings>
-     </option>
-   </component>
-Index: gradle/wrapper/gradle-wrapper.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>#Fri Jul 17 18:20:13 IST 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.1.1-all.zip\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>windows-1252
-===================================================================
---- gradle/wrapper/gradle-wrapper.properties	(revision f663a29a8d1c8290d711089b217f1d140de116de)
-+++ gradle/wrapper/gradle-wrapper.properties	(date 1605447145796)
-@@ -1,6 +1,6 @@
--#Fri Jul 17 18:20:13 IST 2020
-+#Sun Nov 15 19:02:25 IST 2020
- distributionBase=GRADLE_USER_HOME
- distributionPath=wrapper/dists
- zipStoreBase=GRADLE_USER_HOME
- zipStorePath=wrapper/dists
--distributionUrl=https\://services.gradle.org/distributions/gradle-6.1.1-all.zip
-+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\napply plugin: 'com.google.firebase.firebase-perf'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion '30.0.2'\r\n    defaultConfig {\r\n        applicationId \"com.orion.orion\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        multiDexEnabled true\r\n\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'\r\n    implementation 'com.google.firebase:firebase-auth:19.4.0'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    def multidex_version = \"2.0.1\"\r\n    implementation \"androidx.multidex:multidex:$multidex_version\"\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n\r\n    implementation 'com.github.judemanutd:autostarter:1.0.3'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n\r\n    implementation 'com.google.firebase:firebase-database:19.5.0'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.0'\r\n    implementation 'com.google.firebase:firebase-messaging:20.3.0'\r\n    implementation 'com.google.firebase:firebase-firestore:21.7.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-crashlytics:17.1.1'\r\n    implementation 'com.google.firebase:firebase-analytics:17.4.4'\r\n    implementation 'com.google.firebase:firebase-perf:19.0.8'\r\n    testImplementation 'junit:junit:4.13.1'\r\n    androidTestImplementation 'androidx.test:runner:1.3.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.google.android.gms:play-services-location:17.1.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n    //animations\r\n    implementation 'com.daimajia.easing:library:2.4@aar'\r\n    implementation 'com.daimajia.androidanimations:library:2.4@aar'\r\n\r\n\r\n//exoplayer\r\n    implementation 'com.google.android.exoplayer:exoplayer:2.11.7'\r\n    implementation 'com.danikula:videocache:2.7.1'\r\n\r\n    //VideoCompressor + kotlin\r\n    implementation 'com.github.AbedElazizShe:LightCompressor:0.7.5'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'\r\n\r\n    implementation 'androidx.preference:preference:1.1.1'\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/build.gradle	(revision f663a29a8d1c8290d711089b217f1d140de116de)
-+++ app/build.gradle	(date 1605447427332)
-@@ -79,4 +79,7 @@
-     implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
- 
-     implementation 'androidx.preference:preference:1.1.1'
-+
-+    //    update
-+    implementation 'com.google.android.play:core:1.6.1'
- }
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\napply plugin: 'com.google.firebase.firebase-perf'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion '30.0.2'\r\n    defaultConfig {\r\n        applicationId \"com.orion.orion\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        multiDexEnabled true\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        debug {\r\n            shrinkResources true\r\n            minifyEnabled true\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.1'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    def multidex_version = \"2.0.1\"\r\n    implementation \"androidx.multidex:multidex:$multidex_version\"\r\n\r\n\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n\r\n    implementation 'com.google.firebase:firebase-database:19.5.1'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.0'\r\n    implementation 'com.google.firebase:firebase-messaging:21.0.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'\r\n    implementation 'com.google.firebase:firebase-analytics:18.0.0'\r\n    implementation 'com.google.firebase:firebase-perf:19.0.10'\r\n    testImplementation 'junit:junit:4.13.1'\r\n    androidTestImplementation 'androidx.test:runner:1.3.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.google.android.gms:play-services-location:17.1.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n    //animations\r\n    implementation 'com.daimajia.easing:library:2.4@aar'\r\n    implementation 'com.daimajia.androidanimations:library:2.4@aar'\r\n\r\n\r\n    //exoplayer\r\n    implementation 'com.google.android.exoplayer:exoplayer:2.11.7'\r\n    implementation 'com.danikula:videocache:2.7.1'\r\n\r\n    //VideoCompressor + kotlin\r\n    implementation 'com.github.AbedElazizShe:LightCompressor:0.7.5'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'\r\n\r\n    implementation 'androidx.preference:preference:1.1.1'\r\n\r\n    //    update\r\n    implementation 'com.google.android.play:core:1.8.3'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
+++ app/build.gradle	(date 1606027099016)
@@ -17,6 +17,11 @@
     }
     buildTypes {
         debug {
+            shrinkResources false
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
+        }
+        release {
             shrinkResources true
             minifyEnabled true
             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_18-11-2020_15_00__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_18-11-2020_15_00__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_20-11-2020_20_36__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_20-11-2020_20_36__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_18-11-2020_22_22__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_18-11-2020_22_22__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_16-11-2020_17_38__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_16-11-2020_17_38__Default_Changelist_.xml
