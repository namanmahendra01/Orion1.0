Index: app/src/main/java/com/orion/orion/contest/Contest_Evaluation/fragment_contest_participants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.contest.Contest_Evaluation;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.orion.orion.Adapters.AdapterParticipantList;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.models.ParticipantList;\r\nimport com.orion.orion.util.FirebaseMethods;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.HashMap;\r\n\r\n\r\npublic class fragment_contest_participants extends Fragment {\r\n\r\n    private static final String TAG = \"Participant FRAGMENT\";\r\n    private RecyclerView participantRv;\r\n    private ArrayList<ParticipantList> participantLists;\r\n    private ArrayList<ParticipantList> paginatedparticipantList;\r\n    private TextView request, partNum;\r\n    private int mResults;\r\n    private String Conteskey;\r\n    boolean notify = false;\r\n    private FirebaseMethods mFirebaseMethods;\r\n\r\n    private SwipeRefreshLayout participantRefresh;\r\n    boolean flag1 = false;\r\n    private static int RETRY_DURATION = 1000;\r\n    private static final Handler handler = new Handler(Looper.getMainLooper());\r\n\r\n    //    SP\r\n    private Gson gson;\r\n    private SharedPreferences sp;\r\n\r\n    private AdapterParticipantList adapterParticipantList;\r\n\r\n    public fragment_contest_participants() {\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull final LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n\r\n\r\n        View view = inflater.inflate(R.layout.fragment_participant, container, false);\r\n\r\n        mFirebaseMethods = new FirebaseMethods(getActivity());\r\n        participantRefresh = view.findViewById(R.id.participant_refresh);\r\n        partNum = view.findViewById(R.id.partNum);\r\n\r\n        Bundle b = getActivity().getIntent().getExtras();\r\n        Conteskey = b.getString(\"contestId\");\r\n//          Initialize SharedPreference variables\r\n        sp = getContext().getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n\r\n        request = view.findViewById(R.id.request);\r\n        FloatingActionButton floatbtn = view.findViewById(R.id.float_btn);\r\n\r\n        floatbtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bottomsheet();\r\n            }\r\n        });\r\n\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(getString(R.string.dbname_request))\r\n                .child(getString(R.string.dbname_participantList))\r\n                .child(Conteskey)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        String i = String.valueOf(dataSnapshot.getChildrenCount());\r\n                        request.setText(\"Requests(\" + i + \")\");\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n        request.setOnClickListener(v -> {\r\n            Intent i = new Intent(getActivity(), Participant_Request.class);\r\n            i.putExtra(\"ContestKey\", Conteskey);\r\n            startActivity(i);\r\n        });\r\n\r\n\r\n        participantRv = view.findViewById(R.id.recycler_view4);\r\n        participantRv.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());\r\n        participantRv.setLayoutManager(linearLayoutManager);\r\n\r\n        participantLists = new ArrayList<>();\r\n\r\n        FirebaseAuth fAuth = FirebaseAuth.getInstance();\r\n\r\n        participantRv.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\r\n                super.onScrollStateChanged(recyclerView, newState);\r\n                if (!recyclerView.canScrollVertically(1) && newState == RecyclerView.SCROLL_STATE_IDLE)\r\n                    displayMoreParticipnat();\r\n            }\r\n        });\r\n\r\n\r\n        participantRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n                flag1 = false;\r\n                getParticipantListFromSP();\r\n                checkRefresh();\r\n            }\r\n\r\n            private void checkRefresh() {\r\n                if (participantRefresh.isRefreshing() && flag1) {\r\n                    participantRefresh.setRefreshing(false);\r\n                    handler.removeCallbacks(this::checkRefresh);\r\n                    flag1 = false;\r\n                } else handler.postDelayed(this::checkRefresh, RETRY_DURATION);\r\n            }\r\n        });\r\n        getParticipantListFromSP();\r\n        return view;\r\n    }\r\n\r\n    //  fetching ParticipantList  from SharedPreferences\r\n    private void getParticipantListFromSP() {\r\n        String json = sp.getString(Conteskey, null);\r\n\r\n        Type type = new TypeToken<ArrayList<ParticipantList>>() {\r\n        }.getType();\r\n        participantLists = gson.fromJson(json, type);\r\n        if (participantLists == null || participantLists.size() == 0) {    //        if no arrayList is present\r\n            participantLists = new ArrayList<>();\r\n            fetchParticipants();             //            make new Arraylist\r\n        } else {\r\n            checkUpdate();       //         Check if new paricipant is there\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void checkUpdate() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        reference.child(getString(R.string.dbname_participantList))\r\n                .child(Conteskey)\r\n                .orderByKey()\r\n                .limitToLast(1)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                if (participantLists.get(0).getJi().equals(snapshot1.getKey())) {\r\n                                    displayParticipant();\r\n                                } else updateList();\r\n                            }\r\n                        } else updateList();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void updateList() {\r\n        Collections.reverse(participantLists);\r\n        DatabaseReference refer = FirebaseDatabase.getInstance().getReference();\r\n        refer.child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(getString(R.string.dbname_participantList))\r\n                .child(Conteskey)\r\n                .orderByKey()\r\n                .startAt(participantLists.get(participantLists.size() - 1).getJi())\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            int x = 0;\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                x++;\r\n                                ParticipantList participantList = snapshot1.getValue(ParticipantList.class);\r\n                                participantLists.add(participantList);\r\n                                if (x == snapshot.getChildrenCount()) {\r\n                                    Collections.reverse(participantLists);\r\n                                    //    Add newly Created ArrayList to Shared Preferences\r\n                                    SharedPreferences.Editor editor = sp.edit();\r\n                                    String json = gson.toJson(participantLists);\r\n                                    editor.putString(Conteskey, json);\r\n                                    editor.apply();\r\n                                    displayParticipant();\r\n                                }\r\n                            }\r\n                        } else fetchParticipants();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void fetchParticipants() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        reference.child(getString(R.string.dbname_participantList))\r\n                .child(Conteskey)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        if (dataSnapshot.exists()) {\r\n                            int x = 0;\r\n                            for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                                x++;\r\n                                ParticipantList participantList = snapshot.getValue(ParticipantList.class);\r\n                                participantLists.add(participantList);\r\n                                if (x == dataSnapshot.getChildrenCount()) {\r\n                                    Collections.reverse(participantLists);\r\n                                    //    Add newly Created ArrayList to Shared Preferences\r\n                                    SharedPreferences.Editor editor = sp.edit();\r\n                                    String json = gson.toJson(participantLists);\r\n                                    editor.putString(Conteskey, json);\r\n                                    editor.apply();\r\n                                    displayParticipant();\r\n                                }\r\n                            }\r\n\r\n                        } else {\r\n                            participantLists.clear();\r\n                            SharedPreferences.Editor editor = sp.edit();\r\n                            String json = gson.toJson(participantLists);\r\n                            editor.putString(Conteskey, json);\r\n                            editor.apply();\r\n                            displayParticipant();\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void bottomsheet() {\r\n        BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(getActivity(), R.style.BottomSheetDialogTheme);\r\n        View bottomSheetView = getActivity().getLayoutInflater().inflate(R.layout.layout_bottom_sheet_sendupdate, bottomSheetDialog.findViewById(R.id.layout_bottom_sheet_container));\r\n        EditText msg = bottomSheetView.findViewById(R.id.msg);\r\n        TextView send = bottomSheetView.findViewById(R.id.send);\r\n        TextView cancel = bottomSheetView.findViewById(R.id.cancel);\r\n        send.setOnClickListener(v -> {\r\n            String msg1 = msg.getText().toString();\r\n            if (msg1.equals(\"\"))\r\n                Toast.makeText(getActivity(), \"Write Something\", Toast.LENGTH_SHORT).show();\r\n            else {\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n                builder.setTitle(\"Message\");\r\n                builder.setMessage(\"Are you sure, you want to send this Message?\");\r\n//                set buttons\r\n                builder.setPositiveButton(\"Send\", (dialog, which) -> {\r\n                    notify = true;\r\n                    String noti = \"Contest Host send you Message.Click here to see.///\" + msg1;\r\n                    for (int x = 0; x < participantLists.size(); x++) {\r\n                        if (notify)\r\n                            mFirebaseMethods.sendNotification(participantLists.get(x).getUi(), \"\", \"Contest Host send you a Message.Its important.\", \"Contest\");\r\n                        addToHisNotification(participantLists.get(x).getUi(), noti);\r\n                        if (x == participantLists.size() - 1) {\r\n                            bottomSheetDialog.dismiss();\r\n                            Toast.makeText(getContext(), \"Message sent!\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                    notify = false;\r\n\r\n                });\r\n                builder.setNegativeButton(\"No\", (dialog, which) -> dialog.dismiss());\r\n                builder.create().show();\r\n\r\n            }\r\n        });\r\n\r\n        cancel.setOnClickListener(v -> bottomSheetDialog.dismiss());\r\n        bottomSheetDialog.setContentView(bottomSheetView);\r\n        bottomSheetDialog.show();\r\n    }\r\n\r\n\r\n    private void addToHisNotification(String hisUid, String notification) {\r\n        String timestamp = \"\" + System.currentTimeMillis();\r\n\r\n//        data to put in notification\r\n        HashMap<Object,String> hashMap = new HashMap<>();\r\n        hashMap.put(\"pId\",\"false\");\r\n\r\n        hashMap.put(getString(R.string.field_timestamp),timestamp);\r\n\r\n        hashMap.put(\"pUid\",hisUid);\r\n\r\n        hashMap.put(getString(R.string.field_notification_message),notification);\r\n        hashMap.put(getString(R.string.field_if_seen),\"false\");\r\n\r\n        hashMap.put(\"sUid\",FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users));\r\n        ref.child(hisUid).child(getString(R.string.field_Notifications)).child(timestamp).setValue(hashMap)\r\n                .addOnSuccessListener(aVoid -> {\r\n                }).addOnFailureListener(e -> {\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private void displayParticipant() {\r\n        flag1 = true;\r\n        partNum.setText(\"Participants: \" + participantLists.size());\r\n        paginatedparticipantList = new ArrayList<>();\r\n        if (participantLists != null) {\r\n            try {\r\n                int iteration = participantLists.size();\r\n                if (iteration > 20) iteration = 20;\r\n                mResults = 20;\r\n                for (int i = 0; i < iteration; i++)\r\n                    paginatedparticipantList.add(participantLists.get(i));\r\n                adapterParticipantList = new AdapterParticipantList(getContext(), paginatedparticipantList);\r\n                adapterParticipantList.setHasStableIds(true);\r\n                participantRv.setAdapter(adapterParticipantList);\r\n            } catch (NullPointerException e) {\r\n                Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n            } catch (IndexOutOfBoundsException e) {\r\n                Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n            }\r\n        }\r\n    }\r\n\r\n    public void displayMoreParticipnat() {\r\n        try {\r\n            if (participantLists.size() > mResults && participantLists.size() > 0) {\r\n                int iterations;\r\n                if (participantLists.size() > (mResults + 20)) {\r\n                    iterations = 20;\r\n                } else {\r\n                    iterations = participantLists.size() - mResults;\r\n                }\r\n                for (int i = mResults; i < mResults + iterations; i++) {\r\n                    paginatedparticipantList.add(participantLists.get(i));\r\n                }\r\n                participantRv.post(() -> adapterParticipantList.notifyItemRangeInserted(mResults, iterations));\r\n                mResults = mResults + iterations;\r\n            }\r\n\r\n        } catch (NullPointerException e) {\r\n            Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n        } catch (IndexOutOfBoundsException e) {\r\n            Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/contest/Contest_Evaluation/fragment_contest_participants.java	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/src/main/java/com/orion/orion/contest/Contest_Evaluation/fragment_contest_participants.java	(date 1608185786358)
@@ -180,67 +180,56 @@
     }
 
     private void checkUpdate() {
-        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
-        reference.child(getString(R.string.dbname_participantList))
-                .child(Conteskey)
-                .orderByKey()
-                .limitToLast(1)
-                .addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                        if (snapshot.exists()) {
-                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {
-                                if (participantLists.get(0).getJi().equals(snapshot1.getKey())) {
-                                    displayParticipant();
-                                } else updateList();
-                            }
-                        } else updateList();
-                    }
-
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
-                    }
-                });
-    }
-
-    private void updateList() {
-        Collections.reverse(participantLists);
-        DatabaseReference refer = FirebaseDatabase.getInstance().getReference();
-        refer.child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                .child(getString(R.string.dbname_participantList))
-                .child(Conteskey)
-                .orderByKey()
-                .startAt(participantLists.get(participantLists.size() - 1).getJi())
-                .addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                        if (snapshot.exists()) {
-                            int x = 0;
-                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {
-                                x++;
-                                ParticipantList participantList = snapshot1.getValue(ParticipantList.class);
-                                participantLists.add(participantList);
-                                if (x == snapshot.getChildrenCount()) {
-                                    Collections.reverse(participantLists);
-                                    //    Add newly Created ArrayList to Shared Preferences
-                                    SharedPreferences.Editor editor = sp.edit();
-                                    String json = gson.toJson(participantLists);
-                                    editor.putString(Conteskey, json);
-                                    editor.apply();
-                                    displayParticipant();
-                                }
-                            }
-                        } else fetchParticipants();
-                    }
+        DatabaseReference reference = FirebaseDatabase.getInstance()
+                .getReference((getString(R.string.dbname_participantList))).child(Conteskey);
+
+        reference.addListenerForSingleValueEvent(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                if (snapshot.exists()){
+                    if (participantLists.size()!=snapshot.getChildrenCount()){
+                        fetchParticipants();
+                    }else{
+                        reference.orderByKey()
+                                .limitToLast(1)
+                                .addListenerForSingleValueEvent(new ValueEventListener() {
+                                    @Override
+                                    public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                        if (snapshot.exists()) {
+                                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {
+                                                if (participantLists.get(0).getJi().equals(snapshot1.getKey())) {
+                                                    displayParticipant();
+                                                } else                         fetchParticipants();
+
+                                            }
+                                        } else                        fetchParticipants();
+
+                                    }
 
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
+                                    @Override
+                                    public void onCancelled(@NonNull DatabaseError error) {
+                                    }
+                                });
+                    }
+                }else{
+                    fetchParticipants();
+                }
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
 
-                    }
-                });
+            }
+        });
+
+
     }
+
+
 
     private void fetchParticipants() {
+        participantLists.clear();
+
         DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
         reference.child(getString(R.string.dbname_participantList))
                 .child(Conteskey)
@@ -265,7 +254,6 @@
                             }
 
                         } else {
-                            participantLists.clear();
                             SharedPreferences.Editor editor = sp.edit();
                             String json = gson.toJson(participantLists);
                             editor.putString(Conteskey, json);
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Add project specific ProGuard rules here.\r\n# You can control the set of applied configuration files using the\r\n# proguardFiles setting in build.gradle.\r\n#\r\n# For more details, see\r\n#   http://developer.android.com/guide/developing/tools/proguard.html\r\n\r\n# If your project uses WebView with JS, uncomment the following\r\n# and specify the fully qualified class name to the JavaScript interface\r\n# class:\r\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\r\n#   public *;\r\n#}\r\n\r\n# Uncomment this to preserve the line number information for\r\n# debugging stack traces.\r\n#-keepattributes SourceFile,LineNumberTable\r\n\r\n# If you keep the line number information, uncomment this to\r\n# hide the original source file name.\r\n#-renamesourcefileattribute SourceFile\r\n-keep public class * implements com.bumptech.glide.module.GlideModule\r\n-keep class * extends com.bumptech.glide.module.AppGlideModule {\r\n <init>(...);\r\n}\r\n-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {\r\n  **[] $VALUES;\r\n  public *;\r\n}\r\n-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {\r\n  *** rewind();\r\n}\r\n-keepclassmembers,allowobfuscation class * {\r\n    @com.google.gson.annotations.SerializedName <fields>;\r\n  }\r\n-keep,allowobfuscation interface com.google.gson.annotations.SerializedName\r\n\r\n-dontwarn com.squareup.okhttp.**\r\n\r\n-keep class com.orion.orion** { *; }\r\n-keep class package.model.* { *; }\r\n-keepattributes Annotation,Signature\r\n\r\n-keepclassmembers,allowshrinking,allowobfuscation class com.android.volley.NetworkDispatcher {\r\n    void processRequest();\r\n}\r\n-keepclassmembers,allowshrinking,allowobfuscation class com.android.volley.CacheDispatcher {\r\n    void processRequest();\r\n}\r\n-assumenosideeffects class android.util.Log {\r\n    public static *** d(...);\r\n    public static *** v(...);\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/proguard-rules.pro	(date 1608185786389)
@@ -48,6 +48,6 @@
     void processRequest();
 }
 -assumenosideeffects class android.util.Log {
-    public static *** d(...);
+#    public static *** d(...);
     public static *** v(...);
 }
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:dist=\"http://schemas.android.com/apk/distribution\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.orion.orion\">\r\n\r\n    <application\r\n        android:name=\".util.MyApplication\"\r\n        android:icon=\"@drawable/orion_logo_png_black\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@drawable/orion_logo_png_black\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        tools:targetApi=\"m\">\r\n        <!-- Activities -->\r\n        <!-- Splash Screen -->\r\n        <activity\r\n            android:name=\".SplashActivity\"\r\n            android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <!-- Login/Signup Section + Intro part -->\r\n        <activity\r\n            android:name=\".login.login\"\r\n            android:noHistory=\"true\">\r\n        </activity>\r\n        <activity\r\n            android:name=\".login.register\"\r\n            android:noHistory=\"true\" />\r\n        <!-- Home Section -->\r\n        <activity android:name=\".home.Message_Request\" />\r\n        <activity\r\n            android:name=\".home.MainActivity\"\r\n            android:hardwareAccelerated=\"true\" />\r\n        <activity android:name=\".home.Chat_Activity\" />\r\n        <activity\r\n            android:name=\".home.ViewPromoted\"\r\n            android:theme=\"@style/Theme.Transparent\" />\r\n        <!-- Explore Section -->\r\n        <activity\r\n            android:name=\".explore.Explore\"\r\n            android:windowSoftInputMode=\"adjustNothing\" />\r\n        <!-- Contest Section -->\r\n        <activity android:name=\".contest.create.form\" />\r\n        <activity android:name=\".contest.create.CheckContest\" />\r\n        <activity android:name=\".contest.ViewContestDetails\" />\r\n        <activity android:name=\".contest.joined.JoiningForm\" />\r\n        <activity android:name=\".contest.joined.joined_contest_overview_activity\" />\r\n        <activity android:name=\".contest.ranking\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.Participant_Request\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.contest_evaluation_activity\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.activity_view_media\" />\r\n        <activity android:name=\".contest.result.ResultDeclaredActivity\" />\r\n        <activity android:name=\".contest.jury_voting_media\" />\r\n        <activity android:name=\".contest.public_voting_media\" />\r\n        <activity\r\n            android:name=\".contest.contestMainActivity\"\r\n            android:windowSoftInputMode=\"adjustNothing\" />\r\n        <!-- Leaderboard Section -->\r\n        <activity android:name=\".leaderboard.LeaderboardActivity\" />\r\n        <!-- Profile Section -->\r\n        <activity\r\n            android:name=\".profile.profile\"\r\n            android:noHistory=\"true\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:launchMode=\"singleTop\" />\r\n        <activity\r\n            android:name=\".profile.ViewProfileActivity\"\r\n            android:launchMode=\"singleTop\" />\r\n        <activity android:name=\".profile.Account.AccountSettingActivity\" />\r\n        <activity android:name=\".profile.Account.EditProfile\" />\r\n        <activity android:name=\".profile.Account.Password_Reset\" />\r\n        <activity android:name=\".profile.Account.Contest\" />\r\n        <activity android:name=\".profile.Account.About\" />\r\n        <activity android:name=\".profile.Account.FanFolllowing.FanFollowList\" />\r\n        <activity\r\n            android:name=\".profile.PostVideoActivity\"\r\n            android:theme=\"@style/MyMaterialThemeProfile\" />\r\n        <activity\r\n            android:name=\".profile.PostPhotoActivity\"\r\n            android:theme=\"@style/MyMaterialThemeProfile\" />\r\n        <!-- Extras -->\r\n        <activity android:name=\".CommentActivity\" />\r\n        <activity\r\n            android:name=\".ViewPostActivity\"\r\n            android:launchMode=\"singleTop\" />\r\n\r\n        <!-- Services -->\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.some_id\"\r\n            android:value=\"some_id\" /> <!-- Meta data -->\r\n        <service\r\n            android:name=\".Notifications.FirebaseMessaging\"\r\n            android:enabled=\"true\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n    </application>\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n\r\n    <dist:module dist:instant=\"true\" />\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/src/main/AndroidManifest.xml	(date 1608188242078)
@@ -1,4 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
+<?xml version="1.1" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:dist="http://schemas.android.com/apk/distribution"
     xmlns:tools="http://schemas.android.com/tools"
Index: app/src/main/java/com/orion/orion/Adapters/AdapterMessageRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.home.Chat_Activity;\r\nimport com.orion.orion.models.users;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\nimport static com.orion.orion.util.SNTPClient.TAG;\r\n\r\npublic class AdapterMessageRequest extends RecyclerView.Adapter<AdapterMessageRequest.MyHolder> {\r\n    Context context;\r\n    List<users> usersList;\r\n    List<String> usersList2;\r\n    private HashMap<String,String> LastMessagemap;\r\n\r\n\r\n    public AdapterMessageRequest(Context context, List<String> usersList2) {\r\n        this.context = context;\r\n        this.usersList2 = usersList2;\r\n        LastMessagemap = new HashMap<>();\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public MyHolder onCreateViewHolder(@NonNull ViewGroup parent, int i) {\r\n        View view = LayoutInflater.from(context).inflate(R.layout.row_chatlist,parent,false);\r\n        return new MyHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull MyHolder holder, int i) {\r\n\r\n        String hisUid=usersList2.get(i);\r\n        String LastMessage=LastMessagemap.get(hisUid);\r\n\r\n        getList(hisUid,holder.nameTv,holder.profileTv);\r\n\r\n\r\n        if (LastMessage==null||LastMessage.equals(\"default\")){\r\n            holder.lastMessageTv.setVisibility(View.GONE);\r\n        }else{\r\n            holder.lastMessageTv.setVisibility(View.VISIBLE);\r\n            holder.lastMessageTv.setText(LastMessage);\r\n\r\n        }\r\n\r\n\r\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(context, Chat_Activity.class);\r\n                intent.putExtra(\"his_uid\",hisUid);\r\n                intent.putExtra(\"request\",\"yes\");\r\n                context.startActivity(intent);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getList(String hisUid, TextView nameTv, ImageView profileTv) {\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(context.getString(R.string.dbname_users))\r\n                .child(hisUid)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        if(dataSnapshot.exists()) {\r\n                            users user = dataSnapshot.getValue(users.class);\r\n                            nameTv.setText(user.getU());\r\n                            Glide.with(context.getApplicationContext().getApplicationContext())\r\n                                    .load(user.getPp())\r\n                                    .placeholder(R.drawable.load)\r\n                                    .error(R.drawable.default_image2)\r\n                                    .placeholder(R.drawable.load)\r\n                                    .thumbnail(0.5f)\r\n                                    .into(profileTv);\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n\r\n    public void setLastMessage(String userId,String lastMessage){\r\n        LastMessagemap.put(userId,lastMessage);\r\n    }\r\n    public long getItemId(int position) {\r\n        if (usersList==null||usersList.size()==0){\r\n            return position;\r\n        }else{\r\n            return usersList.get(position).hashCode();\r\n\r\n        }\r\n    }\r\n    @Override\r\n    public int getItemCount() {\r\n        return usersList2.size();\r\n    }\r\n\r\n\r\n    class MyHolder extends RecyclerView.ViewHolder {\r\n\r\n\r\n        ImageView profileTv,onlineStatusTv;\r\n        TextView nameTv,lastMessageTv;\r\n\r\n\r\n        public MyHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n\r\n            profileTv=itemView.findViewById(R.id.profileCv);\r\n            onlineStatusTv=itemView.findViewById(R.id.onlineStatusCv);\r\n            nameTv=itemView.findViewById(R.id.NameTv);\r\n            lastMessageTv=itemView.findViewById(R.id.LastmessageTv);\r\n\r\n\r\n\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/Adapters/AdapterMessageRequest.java	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/src/main/java/com/orion/orion/Adapters/AdapterMessageRequest.java	(date 1608185786267)
@@ -84,17 +84,15 @@
                 .addValueEventListener(new ValueEventListener() {
                     @Override
                     public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
-                        if(dataSnapshot.exists()) {
-                            users user = dataSnapshot.getValue(users.class);
-                            nameTv.setText(user.getU());
-                            Glide.with(context.getApplicationContext().getApplicationContext())
-                                    .load(user.getPp())
-                                    .placeholder(R.drawable.load)
-                                    .error(R.drawable.default_image2)
-                                    .placeholder(R.drawable.load)
-                                    .thumbnail(0.5f)
-                                    .into(profileTv);
-                        }
+                        users user = dataSnapshot.getValue(users.class);
+                        nameTv.setText(user.getU());
+                        Glide.with(context.getApplicationContext().getApplicationContext())
+                                .load(user.getPp())
+                                .placeholder(R.drawable.load)
+                                .error(R.drawable.default_image2)
+                                .placeholder(R.drawable.load)
+                                .thumbnail(0.5f)
+                                .into(profileTv);
                     }
 
                     @Override
Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-11-2020_10_12_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_23-11-2020_10_12_[Default_Changelist]/shelved.patch	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_23-11-2020_10_12_[Default_Changelist]/shelved.patch	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
@@ -1,1778 +0,0 @@
-Index: app/src/main/res/values/strings.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><resources>\r\n    <color name=\"gray_scale\">#8affffff</color>\r\n    <color name=\"progress_max_active\">@color/white</color>\r\n    <color name=\"progress_primary\">@color/white</color>\r\n    <color name=\"progress_secondary\">@color/gray_scale</color>\r\n    <declare-styleable name=\"StoriesProgressView2\">\r\n        <attr name=\"progressCount\" format=\"integer|reference\" />\r\n    </declare-styleable>\r\n\r\n    <dimen name=\"progress_bar_height\">2dp</dimen>\r\n    <string name=\"app_name\">Orion</string>\r\n\r\n    <!--    Databases-->\r\n\r\n    <string name=\"edit_profile\">Edit Pofile</string>\r\n    <string name=\"sign_out\">Sign Out</string>\r\n    <string name=\"profie_fragment\">Profile</string>\r\n    <string name=\"view_post_fragment\">View Post</string>\r\n    <string name=\"calling_activity\">calling_activity</string>\r\n    <string name=\"profile_activity\">profile_activity</string>\r\n\r\n    <string name=\"confirm_password_dialog\">ConfirmPasswordDialog</string>\r\n\r\n\r\n    <string name=\"selected_image\">selected_image</string>\r\n    <string name=\"selected_bitmap\">selected_bitmap</string>\r\n\r\n    <string name=\"return_to_fragment\">return_to_fragment</string>\r\n    <string name=\"activity_number\">activity_number</string>\r\n\r\n    <string name=\"comments\">Comments</string>\r\n    <string name=\"view_comment_fragment\">View Comments</string>\r\n\r\n    <string name=\"search_activity\">Search Activity</string>\r\n    <string name=\"intent_user\">intent_user</string>\r\n    <string name=\"view_profile_fragment\">ViewProfile</string>\r\n\r\n    <string name=\"bundle_user_accountsetting\">bundle_user_accountsetting</string>\r\n    <string name=\"bundle_photo\">bundle_photo</string>\r\n    <string name=\"home\">Home Activity</string>\r\n    <string name=\"his_UID\">his_UID</string>\r\n\r\n    <string name=\"entryfee_prompt\">Select here</string>\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n\r\n\r\n    <!-- Databses names-->\r\n    <string name=\"dbname_users\">users</string>\r\n    <string name=\"dbname_contests\">Contests</string>\r\n    <string name=\"dbname_follower\">followers</string>\r\n    <string name=\"dbname_following\">following</string>\r\n    <string name=\"dbname_user_photos\">user_photos</string>\r\n    <string name=\"dbname_contestlist\">ContestList</string>\r\n    <string name=\"dbname_participantList\">ParticipantList</string>\r\n    <string name=\"dbname_leaderboard\">Leaderboard</string>\r\n    <string name=\"dbname_Chats\">Chats</string>\r\n    <string name=\"dbname_request\">Requests</string>\r\n    <string name=\"dbname_promote\">Promote</string>\r\n    <string name=\"dbname_reports\">Reports</string>\r\n    <string name=\"dbname_ChatList\">ChatList</string>\r\n    <string name=\"db_topUsersParams\">db_topUsersParams</string>\r\n    <string name=\"dbname_username\">username</string>\r\n\r\n\r\n    <!-- Field Names -->\r\n    <string name=\"field_followers\">f</string>\r\n    <string name=\"field_promotes\">pmt</string>\r\n    <string name=\"field_contest_title\">ct</string>\r\n    <string name=\"field_contest_organized_by\">cob</string>\r\n    <string name=\"field_contest_description\">cd</string>\r\n    <string name=\"field_all_time\">at</string>\r\n    <string name=\"field_yearly\">y</string>\r\n    <string name=\"field_last_month\">lm</string>\r\n    <string name=\"field_this_month\">tm</string>\r\n    <string name=\"field_last_week\">lw</string>\r\n    <string name=\"field_this_week\">tw</string>\r\n    <string name=\"field_contest\">c</string>\r\n    <string name=\"field_last_updated\">lu</string>\r\n    <string name=\"field_last_known_location\">lkl</string>\r\n    <string name=\"field_month\">m</string>\r\n    <string name=\"field_country\">cntry</string>\r\n    <string name=\"field_city\">cty</string>\r\n    <string name=\"field_area\">area</string>\r\n    <string name=\"field_domain\">d</string>\r\n    <string name=\"field_post\">p</string>\r\n    <string name=\"post_updates\">pu</string>\r\n    <string name=\"thumbnail\">t</string>\r\n    <string name=\"type\">ty</string>\r\n    <string name=\"field_last_updated_topUsers\">luu</string>\r\n    <string name=\"field_overall\">Overall</string>\r\n    <string name=\"field_completed\">cmp</string>\r\n    <string name=\"contest_update\">cu</string>\r\n    <string name=\"changedFollowers\">cf</string>\r\n    <string name=\"changedJoinedContest\">cjc</string>\r\n    <string name=\"changedCreatedContest\">ccc</string>\r\n    <string name=\"field_instagram\">in</string>\r\n    <string name=\"field_facebook\">fb</string>\r\n    <string name=\"field_twitter\">tw</string>\r\n    <string name=\"field_whatsapp\">wa</string>\r\n    <string name=\"db_posts_deleted\">dp</string>\r\n    <string name=\"explore_update\">eu</string>\r\n    <string name=\"field_link1\">l1</string>\r\n    <string name=\"field_link2\">l2</string>\r\n    <string name=\"field_link3\">l3</string>\r\n    <string name=\"created_contest\">cc</string>\r\n    <string name=\"joined_contest\">jc</string>\r\n    <string name=\"voting_list\">vl</string>\r\n    <string name=\"juryMarks\">jm</string>\r\n    <string name=\"field_comment\">cmnt</string>\r\n    <string name=\"profile_photo\">pp</string>\r\n    <string name=\"field_likes\">l</string>\r\n    <string name=\"field_image_path\">ip</string>\r\n    <string name=\"field_username\">u</string>\r\n    <string name=\"field_email\">e</string>\r\n    <string name=\"field_display_name\">dn</string>\r\n    <string name=\"field_user_id\">ui</string>\r\n    <string name=\"field_website\">web</string>\r\n    <string name=\"field_description\">des</string>\r\n    <string name=\"field_phone_number\">pn</string>\r\n    <string name=\"field_Notifications\">n</string>\r\n    <string name=\"field_caption\">cap</string>\r\n    <string name=\"field_date_createdr\">dc</string>\r\n    <string name=\"field_photo_id\">pi</string>\r\n    <string name=\"field_tags\">tg</string>\r\n    <string name=\"field_Participant_List\">pl</string>\r\n    <string name=\"gp_displayer_tittle\">GP:GENUINE PERCENTAGE</string>\r\n    <string name=\"delete_message_prompt\">Are you sure, you want to delete this message?</string>\r\n    <string name=\"delete_post_prompt\">Are you sure, you want to delete this Post?</string>\r\n    <string name=\"remove_promotion_prompt\">\"Are you sure, you want to remove this Promotion?\"</string>\r\n    <string name=\"promotion_prompt\">\"Are you sure, you want to promote this Post?\"</string>\r\n\r\n    <string name=\"field_contest_completed\">c_cmp</string>\r\n    <string name=\"field_contest_reports\">c_rprt</string>\r\n    <string name=\"field_contest_report_list\">rl</string>\r\n    <string name=\"report_prompt\">Are you sure, you want to Report this Contest?</string>\r\n    <string name=\"report_post_prompt\">Are you sure, you want to Report this Post?</string>\r\n\r\n    <string name=\"gp_diplayer_description\">This is the percentage showing how much genuine this host is.</string>\r\n    <string name=\"field_total_voters_list\">tvl</string>\r\n    <string name=\"delete_notification_prompt\">Are you sure, you want to delete this Notification?</string>\r\n    <string name=\"remove_participant_prompt\">Are you sure, you want to remove this Participant?</string>\r\n    <string name=\"field_status\">st</string>\r\n    <string name=\"field_joined_updates\">ju</string>\r\n    <string name=\"reject_participant_prompt\">Are you sure, you want to Reject this Participant?</string>\r\n    <string name=\"allow_participanr_prompt\">Are you sure, you want to Allow this Participant?</string>\r\n    <string name=\"field_open_for\">of</string>\r\n    <string name=\"field_view\">v</string>\r\n    <string name=\"field_total_score\">ts</string>\r\n    <string name=\"field_rule\">rul</string>\r\n    <string name=\"field_contest_created_updates\">ccu</string>\r\n    <string name=\"field_contest_joined_updates\">cju</string>\r\n    <string name=\"field_result\">r</string>\r\n    <string name=\"field_media_link\">ml</string>\r\n    <string name=\"field_jury_pic_1\">jp1</string>\r\n    <string name=\"field_jury_pic_2\">jp2</string>\r\n    <string name=\"field_jury_pic_3\">jp3</string>\r\n    <string name=\"field_poster\">po</string>\r\n    <string name=\"field_id_link\">il</string>\r\n    <string name=\"field_contest_judged\">cj</string>\r\n    <string name=\"field_contest_wins\">cw</string>\r\n    <string name=\"field_contest_participated\">cp</string>\r\n    <string name=\"field_sender_ID\">sid</string>\r\n    <string name=\"field_receiver_ID\">rid</string>\r\n    <string name=\"field_message\">msg</string>\r\n    <string name=\"field_timestamp\">tim</string>\r\n    <string name=\"field_if_seen\">ifs</string>\r\n    <string name=\"field_message_ID\">mid</string>\r\n    <string name=\"field_entry_fee\">ef</string>\r\n    <string name=\"field_contest_ID\">ci</string>\r\n    <string name=\"field_vote_type\">vt</string>\r\n    <string name=\"field_registration_begin\">rb</string>\r\n    <string name=\"field_registration_end\">re</string>\r\n    <string name=\"field_voting_begin\">vb</string>\r\n    <string name=\"field_voting_end\">ve</string>\r\n    <string name=\"field_max_participant_limit\">mlt</string>\r\n    <string name=\"field_winners_declare\">wd</string>\r\n    <string name=\"field_file_type\">ft</string>\r\n    <string name=\"field_total_prize\">tp</string>\r\n    <string name=\"field_place1_prize\">p1</string>\r\n    <string name=\"field_place2_prize\">p2</string>\r\n    <string name=\"field_place3_prize\">p3</string>\r\n    <string name=\"field_jury_name_1\">jn1</string>\r\n    <string name=\"field_jury_name_2\">jn2</string>\r\n    <string name=\"field_jury_name_3\">jn3</string>\r\n    <string name=\"field_host\">hst</string>\r\n    <string name=\"field_college\">clg</string>\r\n    <string name=\"field_joining_ID\">ji</string>\r\n    <string name=\"field_jury_comment1\">c1</string>\r\n    <string name=\"field_jury_comment2\">c2</string>\r\n    <string name=\"field_jury_comment3\">c3</string>\r\n    <string name=\"field_jury_1\">j1</string>\r\n    <string name=\"field_jury_2\">j2</string>\r\n    <string name=\"field_jury_3\">j3</string>\r\n    <string name=\"field_notification_message\">not</string>\r\n\r\n    <string name=\"field_promotion_time_start\">tiS</string>\r\n    <string name=\"field_promotion_time_end\">tiE</string>\r\n    <string name=\"field_promoter_ID\">pID</string>\r\n    <string name=\"field_story_ID\">stID</string>\r\n    <string name=\"field_rating\">rat</string>\r\n    <string name=\"field_unfollowed_Me\">um</string>\r\n    <string name=\"Privacy_Policy\">https://drive.google.com/file/d/1Kat9jq_H9vXxNWXmKfP4N3XerfpfHkw5/view?usp=sharing</string>\r\n    <string name=\"Terms_and_Condition\">https://drive.google.com/file/d/1t8XtHgyhvhWlWPlqoG8MREP56kFuEhPL/view?usp=sharing</string>\r\n\r\n\r\n    <string-array name=\"entryfee\">\r\n        <item>Select here</item>\r\n        <item>Free</item>\r\n        <item>Paid</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"entryfee2\">\r\n        <item>Overall</item>\r\n        <item>Free</item>\r\n        <item>Paid</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"domain\">\r\n        <item>All</item>\r\n        <item>Speaker</item>\r\n        <item>Chef</item>\r\n        <item>Cinematographer</item>\r\n        <item>Dancer</item>\r\n        <item>Instrument Player</item>\r\n        <item>Editor</item>\r\n        <item>Fashion Designer</item>\r\n        <item>Actor</item>\r\n        <item>Film maker</item>\r\n        <item>Gamer</item>\r\n        <item>Makeup Artist</item>\r\n        <item>Model</item>\r\n        <item>Singer</item>\r\n        <item>Musician</item>\r\n        <item>Sketch Artist</item>\r\n        <item>Poet</item>\r\n        <item>Photographer</item>\r\n        <item>Rapper</item>\r\n        <item>Sports</item>\r\n        <item>Writer</item>\r\n        <item>Digital Art</item>\r\n\r\n\r\n    </string-array>\r\n    <string-array name=\"domain2\">\r\n        <item>Overall</item>\r\n        <item>Speaker</item>\r\n        <item>Chef</item>\r\n        <item>Cinematographer</item>\r\n        <item>Dancer</item>\r\n        <item>Instrument Player</item>\r\n        <item>Editor</item>\r\n        <item>Fashion Designer</item>\r\n        <item>Actor</item>\r\n        <item>Film maker</item>\r\n        <item>Gamer</item>\r\n        <item>Makeup Artist</item>\r\n        <item>Model</item>\r\n        <item>Singer</item>\r\n        <item>Musician</item>\r\n        <item>Sketch Artist</item>\r\n        <item>Poet</item>\r\n        <item>Photographer</item>\r\n        <item>Rapper</item>\r\n        <item>Sports</item>\r\n        <item>Writer</item>\r\n        <item>Digital Art</item>\r\n\r\n    </string-array>\r\n\r\n    <string-array name=\"juryNumber\">\r\n        <item>Select here</item>\r\n        <item>1</item>\r\n        <item>2</item>\r\n        <item>3</item>\r\n\r\n    </string-array>\r\n\r\n    <string-array name=\"prize\">\r\n        <item>Select here</item>\r\n        <item>No</item>\r\n        <item>Yes</item>\r\n\r\n    </string-array>\r\n\r\n\r\n</resources>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/values/strings.xml	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-+++ app/src/main/res/values/strings.xml	(date 1606028004973)
-@@ -201,6 +201,7 @@
-     <string name="field_unfollowed_Me">um</string>
-     <string name="Privacy_Policy">https://drive.google.com/file/d/1Kat9jq_H9vXxNWXmKfP4N3XerfpfHkw5/view?usp=sharing</string>
-     <string name="Terms_and_Condition">https://drive.google.com/file/d/1t8XtHgyhvhWlWPlqoG8MREP56kFuEhPL/view?usp=sharing</string>
-+    <string name="orion_team_user_id">VGk6jAJMZhbxAYO5zqU6OGqaTXO2</string>
- 
- 
-     <string-array name="entryfee">
-Index: app/proguard-rules.pro
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+># Add project specific ProGuard rules here.\r\n# You can control the set of applied configuration files using the\r\n# proguardFiles setting in build.gradle.\r\n#\r\n# For more details, see\r\n#   http://developer.android.com/guide/developing/tools/proguard.html\r\n\r\n# If your project uses WebView with JS, uncomment the following\r\n# and specify the fully qualified class name to the JavaScript interface\r\n# class:\r\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\r\n#   public *;\r\n#}\r\n\r\n# Uncomment this to preserve the line number information for\r\n# debugging stack traces.\r\n#-keepattributes SourceFile,LineNumberTable\r\n\r\n# If you keep the line number information, uncomment this to\r\n# hide the original source file name.\r\n#-renamesourcefileattribute SourceFile\r\n-keep public class * implements com.bumptech.glide.module.GlideModule\r\n-keep class * extends com.bumptech.glide.module.AppGlideModule {\r\n <init>(...);\r\n}\r\n-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {\r\n  **[] $VALUES;\r\n  public *;\r\n}\r\n-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {\r\n  *** rewind();\r\n}\r\n-keepclassmembers,allowobfuscation class * {\r\n    @com.google.gson.annotations.SerializedName <fields>;\r\n  }\r\n-keep,allowobfuscation interface com.google.gson.annotations.SerializedName\r\n\r\n-dontwarn com.squareup.okhttp.**\r\n\r\n-keep class com.orion.orion** { *; }\r\n-keep class package.model.* { *; }\r\n-keepattributes Annotation,Signature
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/proguard-rules.pro	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-+++ app/proguard-rules.pro	(date 1606027099004)
-@@ -39,4 +39,15 @@
- 
- -keep class com.orion.orion** { *; }
- -keep class package.model.* { *; }
---keepattributes Annotation,Signature
-\ No newline at end of file
-+-keepattributes Annotation,Signature
-+
-+-keepclassmembers,allowshrinking,allowobfuscation class com.android.volley.NetworkDispatcher {
-+    void processRequest();
-+}
-+-keepclassmembers,allowshrinking,allowobfuscation class com.android.volley.CacheDispatcher {
-+    void processRequest();
-+}
-+-assumenosideeffects class android.util.Log {
-+    public static *** d(...);
-+    public static *** v(...);
-+}
-\ No newline at end of file
-Index: app/src/main/java/com/orion/orion/profile/ViewProfileActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion.profile;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.webkit.URLUtil;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.daimajia.androidanimations.library.Techniques;\r\nimport com.daimajia.androidanimations.library.YoYo;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.orion.orion.Adapters.AdapterGridImage;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.home.Chat_Activity;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.Like;\r\nimport com.orion.orion.models.Photo;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.util.FirebaseMethods;\r\nimport com.orion.orion.util.SNTPClient;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.TimeZone;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class ViewProfileActivity extends AppCompatActivity {\r\n\r\n    //standards\r\n    private static final String TAG = \"ProfileViewFragment\";\r\n    private static final int ACTIVITY_NUM = 4;\r\n    ArrayList<Photo> imgURLsList;\r\n    ProgressDialog dialog;\r\n    private Context mContext;\r\n    boolean isFollowing = false;\r\n    int rank = 1;\r\n    //firebase\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseMethods mFirebaseMethods;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private DatabaseReference myRef;\r\n\r\n\r\n    //View Profile Widgets\r\n    private ImageView backButton;\r\n    private TextView mUsername;\r\n    private TextView mDomain;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n    private CircleImageView mProfilePhoto;\r\n    private ImageView mGmailLink;\r\n    private ImageView mInstagramLink;\r\n    private ImageView mFacebookLink;\r\n    private ImageView mTwitterLink;\r\n    private ImageView mWhatsappLink;\r\n    private String gmail;\r\n    private String instagramProfile;\r\n    private String facebookProfile;\r\n    private String twitterProfile;\r\n\r\n    private Button mFollow;\r\n    private Button mMessage;\r\n    private String whatsappNo;\r\n    private TextView mPosts;\r\n    private TextView mFans;\r\n    private TextView mWins;\r\n    private TextView mCreations;\r\n    private TextView mParticipation;\r\n\r\n    private TextView judges;\r\n    private TextView gp;\r\n\r\n    private TextView mDisplayName;\r\n    private TextView mDescription;\r\n    private TextView mLink1;\r\n    private TextView mLink2;\r\n    private TextView mLink3;\r\n    private TextView mRank;\r\n\r\n    private AdapterGridImage adapterGridImage;\r\n    private RecyclerView gridRv;\r\n    private String mUser;\r\n\r\n\r\n    private boolean notify = false;\r\n\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\r\n    @Nullable\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.fragment_viewprofile);\r\n        dialog = ProgressDialog.show(this, \"\", \"Loading Profile...\", true);\r\n        mContext = this;\r\n        mFirebaseMethods = new FirebaseMethods(mContext);\r\n        backButton = findViewById(R.id.back);\r\n\r\n        mUsername = findViewById(R.id.username);\r\n        mDomain = findViewById(R.id.domain);\r\n        mProfilePhoto = findViewById(R.id.profile_photo);\r\n\r\n        mGmailLink = findViewById(R.id.gmail_link);\r\n        mInstagramLink = findViewById(R.id.instagram_link);\r\n        mFacebookLink = findViewById(R.id.facebook_link);\r\n        mTwitterLink = findViewById(R.id.twitter_link);\r\n        mWhatsappLink = findViewById(R.id.whatsapp_link);\r\n\r\n\r\n        mFollow = findViewById(R.id.followButton);\r\n        mMessage = findViewById(R.id.messageButton);\r\n\r\n        mPosts = findViewById(R.id.posts);\r\n        mFans = findViewById(R.id.fans);\r\n        mWins = findViewById(R.id.win);\r\n        mCreations = findViewById(R.id.creations);\r\n        mParticipation = findViewById(R.id.participations);\r\n        mRank = findViewById(R.id.rank);\r\n\r\n        judges = findViewById(R.id.judge);\r\n        gp = findViewById(R.id.gp);\r\n\r\n        mDisplayName = findViewById(R.id.display_name);\r\n        mDescription = findViewById(R.id.description);\r\n        mLink1 = findViewById(R.id.link1);\r\n        mLink2 = findViewById(R.id.link2);\r\n        mLink3 = findViewById(R.id.link3);\r\n\r\n        gridRv = findViewById(R.id.gridRv);\r\n\r\n        gridRv.setHasFixedSize(true);\r\n        GridLayoutManager linearLayoutManager = new GridLayoutManager(this, 3);\r\n        gridRv.setLayoutManager(linearLayoutManager);\r\n        imgURLsList = new ArrayList<>();\r\n        adapterGridImage = new AdapterGridImage(this, imgURLsList);\r\n        linearLayoutManager.setItemPrefetchEnabled(true);\r\n        linearLayoutManager.setInitialPrefetchItemCount(20);\r\n        gridRv.setItemViewCacheSize(9);\r\n        gridRv.setDrawingCacheEnabled(true);\r\n        gridRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n\r\n        adapterGridImage.setHasStableIds(true);\r\n        gridRv.setAdapter(adapterGridImage);\r\n\r\n        try {\r\n            Intent i = getIntent();\r\n            mUser = i.getStringExtra(getString(R.string.intent_user));\r\n            init();\r\n        } catch (NullPointerException e) {\r\n            Log.d(TAG, \"null pointer Exception\" + e.getMessage());\r\n            Toast.makeText(mContext, \"Something went wrong\", Toast.LENGTH_SHORT).show();\r\n            getSupportFragmentManager().popBackStack();\r\n        }\r\n        setupFirebaseAuth();\r\n        isFolllowing();\r\n\r\n        backButton.setOnClickListener(v -> {\r\n            getSupportFragmentManager().popBackStack();\r\n            finish();\r\n        });\r\n\r\n        mFollow.setOnClickListener(v -> {\r\n            YoYo.with(Techniques.FadeIn).duration(500).playOn(mMessage);\r\n            if (isFollowing) {\r\n                isFollowing = false;\r\n//               remove from following list\r\n                SharedPreferences sp = getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n                Gson gson = new Gson();\r\n                String json = sp.getString(\"fl\", null);\r\n                Type type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n                ArrayList<String> list = new ArrayList<String>();\r\n                list = gson.fromJson(json, type);\r\n                if (list == null) {\r\n\r\n                } else {\r\n                    list.remove(mUser);\r\n\r\n                }\r\n//                 save following list\r\n                SharedPreferences.Editor editor = sp.edit();\r\n                json = gson.toJson(list);\r\n                editor.putString(\"fl\", json);\r\n                editor.apply();\r\n\r\n//              update following list\r\n                json = sp.getString(\"removefollowing\", null);\r\n                type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n                ArrayList<String> ulist = new ArrayList<String>();\r\n                ulist = gson.fromJson(json, type);\r\n                if (ulist == null) {\r\n                    ulist = new ArrayList<String>();\r\n                    ulist.add(mUser);\r\n                } else {\r\n                    if (!ulist.contains(mUser)) {\r\n                        ulist.add(mUser);\r\n\r\n                    }\r\n                }\r\n//                save update list\r\n                editor = sp.edit();\r\n                json = gson.toJson(ulist);\r\n                editor.putString(\"removefollowing\", json);\r\n                editor.apply();\r\n\r\n\r\n//              update following list\r\n                json = sp.getString(\"addfollowing\", null);\r\n                type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n                ArrayList<String> ulist2 = new ArrayList<String>();\r\n                ulist2 = gson.fromJson(json, type);\r\n                if (ulist2 == null) {\r\n\r\n                } else {\r\n                    if (ulist2.contains(mUser)) {\r\n                        ulist2.remove(mUser);\r\n//                save update list\r\n                        editor = sp.edit();\r\n                        json = gson.toJson(ulist2);\r\n                        editor.putString(\"addfollowing\", json);\r\n                        editor.apply();\r\n                    }\r\n                }\r\n\r\n\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_following)).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child(mUser).removeValue();\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_follower)).child(mUser).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).removeValue();\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_users)).child(mUser).child(getString(R.string.changedFollowers)).setValue(\"true\");\r\n                mFollow.setText(\"Follow\");\r\n                myRef.child(mContext.getString(R.string.dbname_users))\r\n                        .child(mUser)\r\n                        .child(mContext.getString(R.string.field_Notifications))\r\n                        .orderByKey()\r\n                        .limitToLast(3)\r\n                        .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if (snapshot.exists()) {\r\n                                    for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n                                        if (dataSnapshot.exists() && dataSnapshot.child(mContext.getString(R.string.field_notification_message)).getValue().equals(\"becomes your FAN!\")\r\n                                                && dataSnapshot.child(\"sUid\").getValue().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                                            myRef.child(mContext.getString(R.string.dbname_users))\r\n                                                    .child(mUser)\r\n                                                    .child(mContext.getString(R.string.field_Notifications))\r\n                                                    .child(dataSnapshot.getKey()).removeValue()\r\n                                                    .addOnSuccessListener(aVoid -> Toast.makeText(mContext, \"Notification Deleted\", Toast.LENGTH_SHORT).show())\r\n                                                    .addOnFailureListener(e -> Toast.makeText(mContext, \"Notification not Deleted\", Toast.LENGTH_SHORT).show());\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n            } else {\r\n//               addfollowing list\r\n                isFollowing = true;\r\n                SharedPreferences sp = getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n                Gson gson = new Gson();\r\n                String json = sp.getString(\"fl\", null);\r\n                Type type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n                ArrayList<String> list = new ArrayList<String>();\r\n                list = gson.fromJson(json, type);\r\n                if (list == null) {\r\n                    list = new ArrayList<String>();\r\n                    list.add(mUser);\r\n                } else {\r\n                    if (!list.contains(mUser)) {\r\n                        list.add(mUser);\r\n                    }\r\n                }\r\n//                 save following list\r\n                SharedPreferences.Editor editor = sp.edit();\r\n                json = gson.toJson(list);\r\n                editor.putString(\"fl\", json);\r\n                editor.apply();\r\n//              update following list\r\n                json = sp.getString(\"addfollowing\", null);\r\n                type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n\r\n                ArrayList<String> ulist = new ArrayList<String>();\r\n                ulist = gson.fromJson(json, type);\r\n                if (ulist == null) {\r\n                    ulist = new ArrayList<String>();\r\n                    ulist.add(mUser);\r\n                } else {\r\n                    if (!ulist.contains(mUser)) {\r\n                        ulist.add(mUser);\r\n\r\n                    }\r\n\r\n\r\n                }\r\n//                save update list\r\n                editor = sp.edit();\r\n                json = gson.toJson(ulist);\r\n                editor.putString(\"addfollowing\", json);\r\n                editor.apply();\r\n\r\n\r\n//              update following list\r\n                json = sp.getString(\"removefollowing\", null);\r\n                type = new TypeToken<ArrayList<String>>() {\r\n                }.getType();\r\n                ArrayList<String> ulist2 = new ArrayList<String>();\r\n                ulist2 = gson.fromJson(json, type);\r\n                if (ulist2 == null) {\r\n\r\n                } else {\r\n                    if (ulist2.contains(mUser)) {\r\n                        ulist2.remove(mUser);\r\n//                save update list\r\n                        editor = sp.edit();\r\n                        json = gson.toJson(ulist2);\r\n                        editor.putString(\"removefollowing\", json);\r\n                        editor.apply();\r\n                    }\r\n                }\r\n\r\n\r\n                notify = true;\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_following)).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child(mUser).setValue(true);\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_follower)).child(mUser).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).setValue(true);\r\n                FirebaseDatabase.getInstance().getReference().child(getString(R.string.dbname_users)).child(mUser).child(getString(R.string.changedFollowers)).setValue(\"true\");\r\n                mFollow.setText(\"Unfollow\");\r\n                final DatabaseReference data = myRef.child(getString(R.string.dbname_users)).child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                data.addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        users user = dataSnapshot.getValue(users.class);\r\n                        if (notify) {\r\n                            mFirebaseMethods.sendNotification(mUser, user.getU(), \"becomes your FAN!\", \"Fan\");\r\n                        }\r\n                        notify = false;\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    }\r\n                });\r\n                addToHisNotification(mUser, \"becomes your FAN!\");\r\n            }\r\n            DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n            Query query1 = reference1.child(getString(R.string.dbname_users)).child(mUser);\r\n            query1.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    users setting = dataSnapshot.getValue(users.class);\r\n                    assert setting != null;\r\n                    setProfileWidgets(setting);\r\n                    setUpInfoBox();\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                }\r\n            });\r\n        });\r\n        mMessage.setOnClickListener(v -> {\r\n            YoYo.with(Techniques.FadeIn).duration(500).playOn(mMessage);\r\n            Intent intent = new Intent(ViewProfileActivity.this, Chat_Activity.class);\r\n            intent.putExtra(getString(R.string.his_UID), mUser);\r\n            intent.putExtra(\"request\", \"no\");\r\n            startActivity(intent);\r\n        });\r\n\r\n        mGmailLink.setOnClickListener(v -> {\r\n            if (gmail != null && !gmail.equals(\"\")) {\r\n                Intent i = new Intent(Intent.ACTION_SEND);\r\n                i.setPackage(\"com.google.android.gm\");\r\n                i.setType(\"message/rfc822\");\r\n                i.putExtra(Intent.EXTRA_EMAIL, new String[]{gmail});\r\n                i.putExtra(Intent.EXTRA_SUBJECT, \"Orion\");\r\n                i.putExtra(Intent.EXTRA_TEXT, \"We from Orion would like to help and connect u with others out there\");\r\n                try {\r\n                    startActivity(Intent.createChooser(i, \"Send mail...\"));\r\n                } catch (android.content.ActivityNotFoundException ex) {\r\n                    Toast.makeText(mContext, \"There are no email clients installed.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n        mInstagramLink.setOnClickListener(v -> {\r\n            Uri uri = Uri.parse(\"http://instagram.com/_u/\" + instagramProfile);\r\n            Intent likeIng = new Intent(Intent.ACTION_VIEW, uri);\r\n            likeIng.setPackage(\"com.instagram.android\");\r\n            try {\r\n                startActivity(likeIng);\r\n            } catch (ActivityNotFoundException e) {\r\n                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"http://instagram.com/xxx\")));\r\n            }\r\n        });\r\n        mFacebookLink.setOnClickListener(v -> {\r\n            try {\r\n                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"fb://profile/426253597411506\"));\r\n                startActivity(intent);\r\n            } catch (Exception e) {\r\n                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"http://www.facebook.com/appetizerandroid\")));\r\n            }\r\n        });\r\n        mTwitterLink.setOnClickListener(v -> {\r\n            Intent intent = null;\r\n            try {\r\n                this.getPackageManager().getPackageInfo(\"com.twitter.android\", 0);\r\n                intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"twitter://user?screen_name=\" + twitterProfile));\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n            } catch (Exception e) {\r\n                intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://twitter.com/USERID_OR_PROFILENAME\"));\r\n            }\r\n            this.startActivity(intent);\r\n        });\r\n        mWhatsappLink.setOnClickListener(v -> {\r\n            if (whatsappNo != null && !whatsappNo.equals(\"\")) {\r\n                String url = \"https://api.whatsapp.com/send?phone=\" + whatsappNo;\r\n                Intent i = new Intent(Intent.ACTION_VIEW);\r\n                i.setData(Uri.parse(url));\r\n                startActivity(i);\r\n            }\r\n        });\r\n        mLink1.setOnClickListener(v -> {\r\n            try {\r\n                Uri uri = Uri.parse(String.valueOf(mLink1.getText()));\r\n                if (!URLUtil.isValidUrl(String.valueOf(mLink1.getText()))) {\r\n                    Toast.makeText(mContext, \" This is not a valid link\", Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                    intent.setData(uri);\r\n                    mContext.startActivity(intent);\r\n                }\r\n            } catch (ActivityNotFoundException e) {\r\n                Toast.makeText(mContext, \" You don't have any browser to open web page\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n        mLink2.setOnClickListener(v -> {\r\n            try {\r\n                Uri uri = Uri.parse(String.valueOf(mLink2.getText()));\r\n                if (!URLUtil.isValidUrl(String.valueOf(mLink2.getText()))) {\r\n                    Toast.makeText(mContext, \" This is not a valid link\", Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                    intent.setData(uri);\r\n                    mContext.startActivity(intent);\r\n                }\r\n            } catch (ActivityNotFoundException e) {\r\n                Toast.makeText(mContext, \" You don't have any browser to open web page\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n        mLink3.setOnClickListener(v -> {\r\n            try {\r\n                Uri uri = Uri.parse(String.valueOf(mLink3.getText()));\r\n                if (!URLUtil.isValidUrl(String.valueOf(mLink3.getText()))) {\r\n                    Toast.makeText(mContext, \" This is not a valid link\", Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                    intent.setData(uri);\r\n                    mContext.startActivity(intent);\r\n                }\r\n            } catch (ActivityNotFoundException e) {\r\n                Toast.makeText(mContext, \" You don't have any browser to open web page\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setUpInfoBox() {\r\n        Log.d(TAG, \"setUpInfoBox: started\");\r\n        getFans();\r\n        getPosts();\r\n        getWins();\r\n        getCreations();\r\n        getParticipation();\r\n        getGP();\r\n        getJudges();\r\n        mRank.setText(String.valueOf(rank));\r\n        getRank();\r\n        dialog.dismiss();\r\n    }\r\n\r\n    private void getJudges() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests))\r\n                .child(mUser)\r\n                .child(getString(R.string.field_contest_judged));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n//                mCreations.setText((int) size);\r\n                    judges.setText(String.valueOf(size));\r\n                }else{\r\n                    judges.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mCreations.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getGP() {\r\n        Query query = myRef.child(mContext.getString(R.string.dbname_contests))\r\n                .child(mUser)\r\n                .child(getString(R.string.field_contest_completed));\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long y = (long) snapshot.getValue();\r\n                    myRef.child(mContext.getString(R.string.dbname_contests))\r\n                            .child(mUser)\r\n                            .child(getString(R.string.field_contest_reports))\r\n                            .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                    if (snapshot.exists()) {\r\n                                        long x = (long) snapshot.getValue();\r\n                                        gp.setText((100 - (((x * 100) / y))) + \"%\");\r\n                                    } else gp.setText(\"100%\");\r\n                                }\r\n\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError error) {\r\n                                    gp.setText(\"100%\");\r\n                                }\r\n                            });\r\n\r\n                } else gp.setText(\"100%\");\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getFans() {\r\n        Query query = myRef.child(getString(R.string.dbname_follower)).child(mUser);\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    int size = (int) snapshot.getChildrenCount();\r\n                    Log.d(TAG, \"setUpInfoBox: fansCount\" + size);\r\n                    if (size == 0) mFans.setText(\"0\");\r\n                    else mFans.setText(String.valueOf(size));\r\n                }else{\r\n                    mFans.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mFans.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getPosts() {\r\n        Query query = myRef.child(getString(R.string.dbname_user_photos)).child(mUser);\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    int size = (int) snapshot.getChildrenCount();\r\n                    Log.d(TAG, \"setUpInfoBox: postsCount\" + size);\r\n                    if (size == 0) mPosts.setText(\"0\");\r\n                    else mPosts.setText(String.valueOf(size));\r\n                }else{\r\n                    mPosts.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mPosts.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getWins() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests)).child(mUser).child(getString(R.string.field_contest_wins));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n                    Log.d(TAG, \"setUpInfoBox: creations\" + size);\r\n//                mCreations.setText((int) size);\r\n                    mWins.setText(String.valueOf(size));\r\n                }else{\r\n                    mWins.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mCreations.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getCreations() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests)).child(mUser).child(getString(R.string.field_contest_completed));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n                    Log.d(TAG, \"setUpInfoBox: creations\" + size);\r\n//                mCreations.setText((int) size);\r\n                    mCreations.setText(String.valueOf(size));\r\n                }else{\r\n                    mCreations.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mCreations.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getParticipation() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests)).child(mUser).child(getString(R.string.field_contest_participated));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n                    Log.d(TAG, \"setUpInfoBox: participationsCount\" + size);\r\n//                mParticipation.setText((int) size);\r\n                    mParticipation.setText(String.valueOf(size));\r\n                }else{\r\n                    mParticipation.setText(\"0\");\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mParticipation.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n    private void getRank() {\r\n        Query query = myRef.child(getString(R.string.dbname_leaderboard)).child(mUser);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                int userRating = (int) (long) snapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_post)).getValue()\r\n                        + (int) (long) snapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_followers)).getValue()\r\n                        + (int) (long) snapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_contest)).getValue();\r\n                Query query1 = myRef.child(getString(R.string.dbname_leaderboard));\r\n                query1.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        for (DataSnapshot singleSnapshot : snapshot.getChildren()) {\r\n                            int rating = (int) (long) singleSnapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_post)).getValue()\r\n                                    + (int) (long) singleSnapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_followers)).getValue()\r\n                                    + (int) (long) singleSnapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_contest)).getValue();\r\n                            if (rating > userRating && !mUser.equals(singleSnapshot.getKey()))\r\n                                updateRank();\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                        mRank.setText(\"?\");\r\n                    }\r\n                });\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mRank.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateRank() {\r\n        rank += 1;\r\n        mRank.setText(String.valueOf(rank));\r\n    }\r\n\r\n    private void init() {\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        Query query1 = reference1.child(getString(R.string.dbname_users)).child(mUser);\r\n        query1.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                users setting = dataSnapshot.getValue(users.class);\r\n                assert setting != null;\r\n                setProfileWidgets(setting);\r\n                setUpInfoBox();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n            }\r\n        });\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos)).child(mUser);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                ArrayList<Photo> photos = new ArrayList<>();\r\n                for (DataSnapshot singleSnapshot : dataSnapshot.getChildren()) {\r\n                    Log.d(TAG, \"onBindViewHolder: \" + dataSnapshot.getChildrenCount());\r\n                    Photo photo = new Photo();\r\n                    Map<String, Object> objectMap = (Map<String, Object>) singleSnapshot.getValue();\r\n                    Log.d(TAG, \"onDataChange: objectMap\" + objectMap);\r\n                    try {\r\n                        photo.setCap(objectMap.get(getString(R.string.field_caption)).toString());\r\n                        photo.setTg(objectMap.get(getString(R.string.field_tags)).toString());\r\n                        photo.setPi(objectMap.get(getString(R.string.field_photo_id)).toString());\r\n                        photo.setUi(objectMap.get(getString(R.string.field_user_id)).toString());\r\n                        photo.setDc(objectMap.get(getString(R.string.field_date_createdr)).toString());\r\n                        photo.setIp(objectMap.get(getString(R.string.field_image_path)).toString());\r\n                        if (objectMap.get(getString(R.string.thumbnail)) != null)\r\n                            photo.setT(objectMap.get(getString(R.string.thumbnail)).toString());\r\n                        photo.setTy(objectMap.get(getString(R.string.type)).toString());\r\n                        ArrayList<Comment> comments = new ArrayList<>();\r\n                        for (DataSnapshot dSnapshot : singleSnapshot.child(getString(R.string.field_comment)).getChildren()) {\r\n                            Comment comment = new Comment();\r\n                            comment.setUi(dSnapshot.getValue(Comment.class).getUi());\r\n                            comment.setC(dSnapshot.getValue(Comment.class).getC());\r\n                            comment.setDc(dSnapshot.getValue(Comment.class).getDc());\r\n                            comments.add(comment);\r\n                        }\r\n                        photo.setComments(comments);\r\n                        List<Like> likeList = new ArrayList<Like>();\r\n                        for (DataSnapshot dSnapshot : singleSnapshot.child(getString(R.string.field_likes)).getChildren()) {\r\n                            Like like = new Like();\r\n                            like.setUi(dSnapshot.getValue(Like.class).getUi());\r\n                            likeList.add(like);\r\n                        }\r\n                        photos.add(photo);\r\n                    } catch (NullPointerException e) {\r\n                        Log.e(TAG, \"null pointer exception\" + e.getMessage());\r\n                    }\r\n                }\r\n                imgURLsList.addAll(photos);\r\n                Log.d(TAG, \"onDataChange: size sdf\" + imgURLsList.size());\r\n                Collections.reverse(imgURLsList);\r\n//                adapterGridImage = new AdapterGridImage(mContext, imgURLsList);\r\n//                adapterGridImage.setHasStableIds(true);\r\n                gridRv.setAdapter(adapterGridImage);\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void addToHisNotification(String hisUid, String notification) {\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n                String str_date = rawDate;\r\n                java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                Date date = null;\r\n                try {\r\n                    date = formatter.parse(str_date);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                String timestamp = String.valueOf(date.getTime());\r\n\r\n//        data to put in notification\r\n                HashMap<Object, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"pId\", \"false\");\r\n\r\n                hashMap.put(mContext.getString(R.string.field_timestamp), timestamp);\r\n\r\n                hashMap.put(\"pUid\", hisUid);\r\n\r\n                hashMap.put(mContext.getString(R.string.field_notification_message), notification);\r\n                hashMap.put(mContext.getString(R.string.field_if_seen), \"false\");\r\n\r\n                hashMap.put(\"sUid\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users));\r\n                ref.child(hisUid).child(getString(R.string.field_Notifications)).child(timestamp).setValue(hashMap)\r\n                        .addOnSuccessListener(aVoid -> {\r\n                        })\r\n                        .addOnFailureListener(e -> {\r\n                        });\r\n                Log.e(SNTPClient.TAG, rawDate);\r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception ex) {\r\n                Log.e(SNTPClient.TAG, ex.getMessage());\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void isFolllowing() {\r\n        mFollow.setText(\"Follow\");\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_following)).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child(mUser);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    mFollow.setText(\"Unfollow\");\r\n                    isFollowing = mFollow.getText().equals(\"Unfollow\");\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void setProfileWidgets(users userSetting) {\r\n        Log.d(TAG, \"onDataChange: \" + userSetting.toString());\r\n        Glide.with(ViewProfileActivity.this)\r\n                .load(userSetting.getPp())\r\n                .placeholder(R.drawable.load)\r\n                .error(R.drawable.default_image2)\r\n                .placeholder(R.drawable.load)\r\n                .thumbnail(0.2f)\r\n                .into(mProfilePhoto);\r\n        mUsername.setText(userSetting.getU());\r\n        mDomain.setText(userSetting.getD());\r\n\r\n        if (userSetting.getDn() == null || userSetting.getDn().equals(\"\"))\r\n            mDisplayName.setVisibility(View.GONE);\r\n        else {\r\n            mDisplayName.setText(userSetting.getDn());\r\n        }\r\n        if (userSetting.getDes() == null || userSetting.getDes().equals(\"\"))\r\n            mDescription.setVisibility(View.GONE);\r\n        else {\r\n            mDescription.setVisibility(View.VISIBLE);\r\n            mDescription.setText(userSetting.getDes());\r\n        }\r\n\r\n        if (userSetting.getl1() == null || userSetting.getl1().equals(\"\"))\r\n            mLink1.setVisibility(View.GONE);\r\n        else mLink1.setText(userSetting.getl1());\r\n        if (userSetting.getl2() == null || userSetting.getl2().equals(\"\"))\r\n            mLink2.setVisibility(View.GONE);\r\n        else mLink2.setText(userSetting.getl2());\r\n        if (userSetting.getl3() == null || userSetting.getl3().equals(\"\"))\r\n            mLink3.setVisibility(View.GONE);\r\n        else mLink3.setText(userSetting.getl3());\r\n\r\n        if (userSetting.getE() == null || userSetting.getE().equals(\"\")) {\r\n//            mWebsite.setVisibility(View.GONE);\r\n            mGmailLink.setClickable(false);\r\n            mGmailLink.setAlpha(0.5f);\r\n        } else {\r\n//            mWebsite.setVisibility(View.VISIBLE);\r\n//            mWebsite.setText(userSetting.getE());\r\n            gmail = userSetting.getE();\r\n        }\r\n\r\n        if (userSetting.getIn() == null || userSetting.getIn().equals(\"\")) {\r\n            mInstagramLink.setClickable(false);\r\n            mInstagramLink.setAlpha(0.5f);\r\n        } else {\r\n            instagramProfile = userSetting.getIn();\r\n        }\r\n\r\n        if (userSetting.getFb() == null || userSetting.getFb().equals(\"\")) {\r\n            mFacebookLink.setClickable(false);\r\n            mFacebookLink.setAlpha(0.5f);\r\n        } else {\r\n            facebookProfile = userSetting.getFb();\r\n\r\n        }\r\n        if (userSetting.getTw() == null || userSetting.getTw().equals(\"\")) {\r\n            mTwitterLink.setClickable(false);\r\n            mTwitterLink.setAlpha(0.5f);\r\n        } else {\r\n            twitterProfile = userSetting.getTw();\r\n        }\r\n\r\n        if (userSetting.getWa() == null || userSetting.getWa().equals(\"\")) {\r\n            mWhatsappLink.setClickable(false);\r\n            mWhatsappLink.setAlpha(0.5f);\r\n        } else {\r\n            whatsappNo = userSetting.getWa();\r\n        }\r\n//        dialog.dismiss();\r\n    }\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mAuthListener = firebaseAuth -> {\r\n            FirebaseUser user = firebaseAuth.getCurrentUser();\r\n            if (user != null) {\r\n                Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n            } else {\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/profile/ViewProfileActivity.java	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-+++ app/src/main/java/com/orion/orion/profile/ViewProfileActivity.java	(date 1606029062134)
-@@ -185,6 +185,12 @@
-             Toast.makeText(mContext, "Something went wrong", Toast.LENGTH_SHORT).show();
-             getSupportFragmentManager().popBackStack();
-         }
-+        Log.d(TAG, "onCreate: yess2  "+mUser+"  "+getString(R.string.orion_team_user_id));
-+
-+        if (mUser.equals(getString(R.string.orion_team_user_id))){
-+            Log.d(TAG, "onCreate: yess");
-+            mFollow.setEnabled(false);
-+        }
-         setupFirebaseAuth();
-         isFolllowing();
- 
-Index: app/src/main/java/com/orion/orion/util/BottomNaavigationViewHelper.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion.util;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.contest.contestMainActivity;\r\nimport com.orion.orion.explore.Explore;\r\nimport com.orion.orion.home.MainActivity;\r\nimport com.orion.orion.leaderboard.LeaderboardActivity;\r\nimport com.orion.orion.profile.profile;\r\n\r\npublic class BottomNaavigationViewHelper {\r\n\r\n    private static final String TAG = \"BottomNavigationViewHel\";\r\n\r\n\r\n    public static void setupBottomNavigationView(BottomNavigationViewEx bottomNavigationViewEx) {\r\n        Log.d(TAG, \"set BottomNavigationView Setting up BottomNavigationView\");\r\n        bottomNavigationViewEx.enableAnimation(true);\r\n        bottomNavigationViewEx.enableItemShiftingMode(true);\r\n        bottomNavigationViewEx.enableShiftingMode(true);\r\n        bottomNavigationViewEx.setTextVisibility(true);\r\n        bottomNavigationViewEx.setTextSize(10);\r\n    }\r\n\r\n    public static void enableNavigation(final Context context, final Activity callingActivity ,BottomNavigationViewEx view) {\r\n        view.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n            public boolean onNavigationItemSelected(MenuItem item) {\r\n\r\n                switch (item.getItemId()) {\r\n\r\n                    case R.id.ic_house:\r\n                        item.setEnabled(false);\r\n                        Intent intent1 = new Intent(context, MainActivity.class);\r\n                        context.startActivity(intent1);\r\n                        break;\r\n\r\n                    case R.id.ic_notification:\r\n                        item.setEnabled(false);\r\n\r\n                        Intent intent2 = new Intent(context, Explore.class);\r\n                        context.startActivity(intent2);\r\n\r\n                        break;\r\n\r\n                    case R.id.ic_contest:\r\n                        item.setEnabled(false);\r\n\r\n                        Intent intent3 = new Intent(context, contestMainActivity.class);\r\n                        context.startActivity(intent3);\r\n                        break;\r\n\r\n                    case R.id.ic_leaderboard:\r\n                        item.setEnabled(false);\r\n\r\n                        Intent intent4 = new Intent(context, LeaderboardActivity.class);\r\n                        context.startActivity(intent4);\r\n\r\n                        break;\r\n\r\n                    case R.id.ic_profile:\r\n                        Intent intent5 = new Intent(context, profile.class);\r\n                        context.startActivity(intent5);\r\n                        break;\r\n                }\r\n                return false;\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/util/BottomNaavigationViewHelper.java	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-+++ app/src/main/java/com/orion/orion/util/BottomNaavigationViewHelper.java	(date 1606037858039)
-@@ -6,6 +6,8 @@
- import android.util.Log;
- import android.view.MenuItem;
- 
-+import androidx.annotation.NonNull;
-+
- import com.google.android.material.bottomnavigation.BottomNavigationView;
- import com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;
- import com.orion.orion.R;
-@@ -18,6 +20,7 @@
- public class BottomNaavigationViewHelper {
- 
-     private static final String TAG = "BottomNavigationViewHel";
-+    static int  curItem,prevItem;
- 
- 
-     public static void setupBottomNavigationView(BottomNavigationViewEx bottomNavigationViewEx) {
-@@ -27,47 +30,63 @@
-         bottomNavigationViewEx.enableShiftingMode(true);
-         bottomNavigationViewEx.setTextVisibility(true);
-         bottomNavigationViewEx.setTextSize(10);
-+
-     }
- 
-     public static void enableNavigation(final Context context, final Activity callingActivity ,BottomNavigationViewEx view) {
-         view.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {
-+
-             public boolean onNavigationItemSelected(MenuItem item) {
-+                curItem= item.getItemId();
- 
--                switch (item.getItemId()) {
-+                Log.d(TAG, "onNavigationItemSelected: "+curItem+" "+prevItem);
-+
-+                if (curItem!=prevItem) {
-+                    switch (item.getItemId()) {
- 
--                    case R.id.ic_house:
--                        item.setEnabled(false);
--                        Intent intent1 = new Intent(context, MainActivity.class);
--                        context.startActivity(intent1);
--                        break;
-+                        case R.id.ic_house:
-+                            prevItem = curItem;
-+                            item.setEnabled(false);
-+                            Intent intent1 = new Intent(context, MainActivity.class);
-+                            context.startActivity(intent1);
-+                            break;
- 
--                    case R.id.ic_notification:
--                        item.setEnabled(false);
-+                        case R.id.ic_notification:
-+                            prevItem = curItem;
-+
-+                            item.setEnabled(false);
- 
--                        Intent intent2 = new Intent(context, Explore.class);
--                        context.startActivity(intent2);
-+                            Intent intent2 = new Intent(context, Explore.class);
-+                            context.startActivity(intent2);
- 
--                        break;
-+                            break;
- 
--                    case R.id.ic_contest:
--                        item.setEnabled(false);
-+                        case R.id.ic_contest:
-+                            prevItem = curItem;
-+
-+                            item.setEnabled(false);
- 
--                        Intent intent3 = new Intent(context, contestMainActivity.class);
--                        context.startActivity(intent3);
--                        break;
-+                            Intent intent3 = new Intent(context, contestMainActivity.class);
-+                            context.startActivity(intent3);
-+                            break;
- 
--                    case R.id.ic_leaderboard:
--                        item.setEnabled(false);
-+                        case R.id.ic_leaderboard:
-+                            prevItem = curItem;
-+
-+                            item.setEnabled(false);
- 
--                        Intent intent4 = new Intent(context, LeaderboardActivity.class);
--                        context.startActivity(intent4);
-+                            Intent intent4 = new Intent(context, LeaderboardActivity.class);
-+                            context.startActivity(intent4);
- 
--                        break;
-+                            break;
- 
--                    case R.id.ic_profile:
--                        Intent intent5 = new Intent(context, profile.class);
--                        context.startActivity(intent5);
--                        break;
-+                        case R.id.ic_profile:
-+                            prevItem = curItem;
-+
-+                            Intent intent5 = new Intent(context, profile.class);
-+                            context.startActivity(intent5);
-+                            break;
-+                    }
-                 }
-                 return false;
-             }
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:dist=\"http://schemas.android.com/apk/distribution\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.orion.orion\">\r\n\r\n    <application\r\n        android:name=\".util.MyApplication\"\r\n        android:icon=\"@drawable/orion_logo_png\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@drawable/orion_logo_png\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        tools:targetApi=\"m\">\r\n        <activity android:name=\".profile.Account.FanFolllowing.FanFollowList\" /> <!-- Activities -->\r\n        <!-- Login/Signup Section + Intro part -->\r\n        <activity\r\n            android:name=\".login.login\"\r\n            android:noHistory=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".login.register\"\r\n            android:noHistory=\"true\"/>\r\n        <!-- Home Section -->\r\n        <activity android:name=\".home.Message_Request\" />\r\n        <activity\r\n            android:name=\".home.MainActivity\"\r\n            android:hardwareAccelerated=\"true\" />\r\n        <activity android:name=\".home.Chat_Activity\" />\r\n        <activity\r\n            android:name=\".home.ViewPromoted\"\r\n            android:theme=\"@style/Theme.Transparent\" /> <!-- Explore Section -->\r\n        <activity\r\n            android:name=\".explore.Explore\"\r\n            android:windowSoftInputMode=\"adjustNothing\" /> <!-- Contest Section -->\r\n        <activity android:name=\".contest.create.form\" />\r\n        <activity android:name=\".contest.create.CheckContest\" />\r\n        <activity android:name=\".contest.ViewContestDetails\" />\r\n        <activity android:name=\".contest.joined.JoiningForm\" />\r\n        <activity android:name=\".contest.joined.joined_contest_overview_activity\" />\r\n        <activity android:name=\".contest.ranking\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.Participant_Request\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.contest_evaluation_activity\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.activity_view_media\" />\r\n        <activity android:name=\".contest.result.ResultDeclaredActivity\" />\r\n        <activity android:name=\".contest.jury_voting_media\" />\r\n        <activity android:name=\".contest.public_voting_media\" />\r\n        <activity\r\n            android:name=\".contest.contestMainActivity\"\r\n            android:windowSoftInputMode=\"adjustNothing\" /> <!-- Leaderboard Section -->\r\n        <activity android:name=\".leaderboard.LeaderboardActivity\" /> <!-- Profile Section -->\r\n        <activity\r\n            android:name=\".profile.profile\"\r\n            android:noHistory=\"true\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:launchMode=\"singleTop\" />\r\n        <activity\r\n            android:name=\".profile.ViewProfileActivity\"\r\n            android:launchMode=\"singleTop\" />\r\n        <activity android:name=\".profile.Account.AccountSettingActivity\" />\r\n        <activity android:name=\".profile.Account.EditProfile\" />\r\n        <activity android:name=\".profile.Account.Password_Reset\" />\r\n        <activity android:name=\".profile.Account.Contest\" />\r\n        <activity android:name=\".profile.Account.About\" />\r\n\r\n        <activity\r\n            android:name=\".profile.PostVideoActivity\"\r\n            android:theme=\"@style/MyMaterialThemeProfile\" />\r\n        <activity\r\n            android:name=\".profile.PostPhotoActivity\"\r\n            android:theme=\"@style/MyMaterialThemeProfile\" /> <!-- Extras -->\r\n        <activity android:name=\".CommentActivity\" />\r\n        <activity\r\n            android:name=\".ViewPostActivity\"\r\n            android:launchMode=\"singleTop\" /> <!-- Services -->\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.some_id\"\r\n            android:value=\"some_id\" /> <!-- Meta data -->\r\n        <service\r\n            android:name=\".Notifications.FirebaseMessaging\"\r\n            android:enabled=\"true\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n    </application>\r\n\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n\r\n    <dist:module dist:instant=\"true\" />\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/AndroidManifest.xml	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-+++ app/src/main/AndroidManifest.xml	(date 1606027510613)
-@@ -6,9 +6,9 @@
- 
-     <application
-         android:name=".util.MyApplication"
--        android:icon="@drawable/orion_logo_png"
-+        android:icon="@drawable/orion_logo_png_black"
-         android:label="@string/app_name"
--        android:roundIcon="@drawable/orion_logo_png"
-+        android:roundIcon="@drawable/orion_logo_png_black"
-         android:supportsRtl="true"
-         android:theme="@style/AppTheme"
-         android:usesCleartextTraffic="true"
-Index: app/src/main/java/com/orion/orion/profile/Account/FanFolllowing/FollowingFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion.profile.Account.FanFolllowing;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.Adapters.AdapterFollowFanAdapter;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.models.ItemFollow;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\npublic class FollowingFragment extends Fragment {\r\n    private static final String TAG = \"FOLLOWING_FRAGMANT\";\r\n    AdapterFollowFanAdapter adapterFollowFanAdapter;\r\n    private DatabaseReference myRef;\r\n    private SwipeRefreshLayout swipeRefreshLayout;\r\n    private TextView noList;\r\n    private ArrayList<ItemFollow> mLists;\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_users_list, container, false);\r\n\r\n        myRef = FirebaseDatabase.getInstance().getReference();\r\n        swipeRefreshLayout = view.findViewById(R.id.swipeRefresh);\r\n        noList = view.findViewById(R.id.noList);\r\n        RecyclerView mRecyclerView = view.findViewById(R.id.recycler_view);\r\n        mRecyclerView.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());\r\n        mRecyclerView.setLayoutManager(linearLayoutManager);\r\n        mLists = new ArrayList<>();\r\n        adapterFollowFanAdapter = new AdapterFollowFanAdapter(getContext(), mLists);\r\n        adapterFollowFanAdapter.setHasStableIds(true);\r\n        mRecyclerView.setAdapter(adapterFollowFanAdapter);\r\n        swipeRefreshLayout.setRefreshing(true);\r\n        swipeRefreshLayout.setColorSchemeResources(\r\n                R.color.scheme1,\r\n                R.color.scheme2,\r\n                R.color.scheme3,\r\n                R.color.scheme4,\r\n                R.color.scheme5,\r\n                R.color.scheme6,\r\n                R.color.scheme7,\r\n                R.color.scheme8,\r\n                R.color.scheme9,\r\n                R.color.scheme10,\r\n                R.color.scheme11,\r\n                R.color.scheme12\r\n        );\r\n        fetchList();\r\n\r\n        swipeRefreshLayout.setOnRefreshListener(() -> {\r\n            mLists.clear();\r\n            noList.setVisibility(View.GONE);\r\n            fetchList();\r\n        });\r\n        return view;\r\n    }\r\n\r\n    private void fetchList() {\r\n        Query query = myRef.child(getString(R.string.dbname_following)).child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    for (DataSnapshot singleSnapshot : snapshot.getChildren()) {\r\n                        ItemFollow itemFollow = new ItemFollow();\r\n                        itemFollow.setUserId(singleSnapshot.getKey());\r\n                        itemFollow.setFollowing(true);\r\n                        itemFollow.setUserId(singleSnapshot.getKey());\r\n                        addToList(itemFollow);\r\n                    }\r\n                } else {\r\n                    swipeRefreshLayout.setRefreshing(false);\r\n                    noList.setVisibility(View.VISIBLE);\r\n                    noList.setText(\"LOOKS LIKE YOU ARE NOT A FAN OF ANYONE ¯\\\\_(ツ)_/¯\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                FirebaseCrashlytics.getInstance().log(\"Failed to fetch data from following database\" + error.getMessage());\r\n                swipeRefreshLayout.setRefreshing(false);\r\n                noList.setText(\"LOOKS LIKE WE RAN INTO ISSUE ¯\\\\_(ツ)_/¯\");\r\n                noList.setVisibility(View.VISIBLE);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void addToList(ItemFollow itemFollow) {\r\n        Log.d(TAG, \"addToList: started\");\r\n        Query query111 = myRef.child(getString(R.string.dbname_users)).child(itemFollow.getUserId());\r\n        query111.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    itemFollow.setUsername((String) snapshot.child(getString(R.string.field_username)).getValue());\r\n                    itemFollow.setDisplay_name((String) snapshot.child(getString(R.string.field_display_name)).getValue());\r\n                    itemFollow.setProfileUrl((String) snapshot.child(getString(R.string.profile_photo)).getValue());\r\n                    swipeRefreshLayout.setRefreshing(false);\r\n                    noList.setVisibility(View.GONE);\r\n                    mLists.add(itemFollow);\r\n                    adapterFollowFanAdapter.notifyDataSetChanged();\r\n                } else\r\n                    FirebaseCrashlytics.getInstance().log(\"Failed to find data from following database\");\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                FirebaseCrashlytics.getInstance().log(\"Failed to fetch user data from following database \" + error.getMessage());\r\n            }\r\n        });\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/profile/Account/FanFolllowing/FollowingFragment.java	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-+++ app/src/main/java/com/orion/orion/profile/Account/FanFolllowing/FollowingFragment.java	(date 1606028299457)
-@@ -78,17 +78,21 @@
-     }
- 
-     private void fetchList() {
--        Query query = myRef.child(getString(R.string.dbname_following)).child(FirebaseAuth.getInstance().getCurrentUser().getUid());
-+        Query query = myRef.child(getString(R.string.dbname_following))
-+                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());
-         query.addListenerForSingleValueEvent(new ValueEventListener() {
-             @Override
-             public void onDataChange(@NonNull DataSnapshot snapshot) {
-                 if (snapshot.exists()) {
-                     for (DataSnapshot singleSnapshot : snapshot.getChildren()) {
--                        ItemFollow itemFollow = new ItemFollow();
--                        itemFollow.setUserId(singleSnapshot.getKey());
--                        itemFollow.setFollowing(true);
--                        itemFollow.setUserId(singleSnapshot.getKey());
--                        addToList(itemFollow);
-+                        String UserId=singleSnapshot.getKey();
-+                        assert UserId != null;
-+                        if (!UserId.equals(getString(R.string.orion_team_user_id))) {
-+                            ItemFollow itemFollow = new ItemFollow();
-+                            itemFollow.setUserId(UserId);
-+                            itemFollow.setFollowing(true);
-+                            addToList(itemFollow);
-+                        }
-                     }
-                 } else {
-                     swipeRefreshLayout.setRefreshing(false);
-Index: app/src/main/java/com/orion/orion/login/register.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion.login;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.daimajia.androidanimations.library.Techniques;\r\nimport com.daimajia.androidanimations.library.YoYo;\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.gson.Gson;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.dialogs.BottomSheetDomain;\r\nimport com.orion.orion.models.Leaderboard;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.util.FirebaseMethods;\r\nimport com.orion.orion.util.SNTPClient;\r\nimport com.orion.orion.util.StringManipilation;\r\n\r\nimport java.util.TimeZone;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\npublic class register extends AppCompatActivity implements BottomSheetDomain.BottomSheetListener {\r\n\r\n    private static final String TAG = \"register\";\r\n    private static final int ANIMATION_DURATION = 1000;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private Context mContext;\r\n    //widgets\r\n    private RelativeLayout rootView;\r\n    private ProgressBar mProgressBar;\r\n    private EditText mUsername;\r\n    private EditText mEmail;\r\n    private EditText mPassword;\r\n    private EditText mConfirmPassword;\r\n    private TextView domainSelection;\r\n    private String userID;\r\n    private TextView terms;\r\n    private TextView policy;\r\n    private Button btnregister;\r\n    private TextView linkLogin;\r\n    private FusedLocationProviderClient fusedLocationClient;\r\n    //variables\r\n    private String username;\r\n    private String email;\r\n    private String password;\r\n    private String confirmPassword;\r\n    private String domain;\r\n    private FirebaseMethods firebaseMethods;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n    private DatabaseReference myRef;\r\n    private final String append = \"\";\r\n\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        setContentView(R.layout.activity_signup);\r\n        Log.d(TAG, \"onCreate: started.\");\r\n\r\n//          Initialize SharedPreference variables\r\n        sp =getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n        String justRegistered=sp.getString(\"yes\",null);\r\n\r\n        mContext = register.this;\r\n        firebaseMethods = new FirebaseMethods(mContext);\r\n        setupFirebaseAuth();\r\n        initWidgets();\r\n        init();\r\n    }\r\n\r\n    private void initWidgets() {\r\n        Log.d(TAG, \"initWidgets: initiliazing widgets\");\r\n        rootView = findViewById(R.id.rootView);\r\n        mProgressBar = findViewById(R.id.Registerrequestloadingprogressbar);\r\n        mUsername = findViewById(R.id.username);\r\n        mEmail = findViewById(R.id.input_email);\r\n        mPassword = findViewById(R.id.input_password);\r\n        mConfirmPassword = findViewById(R.id.confirm_password);\r\n        domainSelection = findViewById(R.id.domain_selection);\r\n        btnregister = findViewById(R.id.btn_register);\r\n        linkLogin = findViewById(R.id.link_login);\r\n        policy = findViewById(R.id.policy);\r\n        terms = findViewById(R.id.terms);\r\n\r\n        mContext = register.this;\r\n        mProgressBar.setVisibility(View.GONE);\r\n        domain = \"\";\r\n\r\n\r\n        policy.setOnClickListener(view -> startRedirect(getString(R.string.Privacy_Policy)));\r\n        terms.setOnClickListener(view -> startRedirect(getString(R.string.Terms_and_Condition)));\r\n\r\n    }\r\n\r\n    private void startRedirect(String url) {\r\n        Intent i2 = new Intent(Intent.ACTION_VIEW);\r\n        i2.setData(Uri.parse(url));\r\n        startActivity(i2);\r\n    }\r\n\r\n    private boolean checkInputs(String email, String username, String password, String confirmPassword, String domain) {\r\n        Log.d(TAG, \"checkInputs:checking inputs for null values\");\r\n\r\n        if (username.equals(\"\")) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mUsername);\r\n            Toast.makeText(mContext, \"Empty username field\", Toast.LENGTH_SHORT).show();\r\n            mUsername.setError(\"Please enter a username\");\r\n            mUsername.requestFocus();\r\n            return false;\r\n        }\r\n\r\n        if (username.length()>15) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mUsername);\r\n            Toast.makeText(mContext,\"Username should be less than 15 characters\", Toast.LENGTH_SHORT).show();\r\n            mUsername.setError(\"Username should be less than 15 characters\");\r\n            mUsername.requestFocus();\r\n            return false;\r\n        }\r\n        if (email.equals(\"\")) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mEmail);\r\n            Toast.makeText(mContext, \"Empty email field\", Toast.LENGTH_SHORT).show();\r\n            mEmail.setError(\"Please enter a email-id\");\r\n            mEmail.requestFocus();\r\n            return false;\r\n        }\r\n        if (password.equals(\"\")) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n            mPassword.setText(\"\");\r\n            mConfirmPassword.setText(\"\");\r\n            mPassword.setError(\"Please enter a password\");\r\n            mPassword.requestFocus();\r\n            Toast.makeText(mContext, \"Empty password field\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n        if (confirmPassword.equals(\"\")) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n            mConfirmPassword.setText(\"\");\r\n            mConfirmPassword.setError(\"Please enter a password\");\r\n            mConfirmPassword.requestFocus();\r\n            Toast.makeText(mContext, \"Empty confirm password field\", Toast.LENGTH_SHORT).show();\r\n            return false;\r\n        }\r\n        if (domain.equals(\"\")) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(domainSelection);\r\n            domainSelection.setText(\"Select Your Domain\");\r\n            Toast.makeText(mContext, \"No domain selected\", Toast.LENGTH_SHORT).show();\r\n            domainSelection.setError(\"Please enter a password\");\r\n            domainSelection.requestFocus();\r\n            return false;\r\n        } else\r\n            return true;\r\n    }\r\n\r\n    private boolean checkValidity(String password) {\r\n        if (password.length() < 6) {\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n            mPassword.setText(\"\");\r\n            mConfirmPassword.setText(\"\");\r\n            mPassword.setError(\"Password too short\");\r\n            mPassword.requestFocus();\r\n            mConfirmPassword.setError(\"Password too short\");\r\n            mConfirmPassword.requestFocus();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onButtonClicked(String text) {\r\n        Log.d(TAG, \"onButtonClicked: domain selected \" + text);\r\n        domain = text;\r\n        Log.d(TAG, \"onButtonClicked: \" + text);\r\n        domainSelection.setText(text);\r\n        YoYo.with(Techniques.FadeInUp).duration(ANIMATION_DURATION).playOn(domainSelection);\r\n    }\r\n\r\n\r\n    private void init() {\r\n\r\n        rootView.setOnClickListener(v -> {\r\n            InputMethodManager imm = (InputMethodManager) mContext.getSystemService(Activity.INPUT_METHOD_SERVICE);\r\n            assert imm != null;\r\n            imm.hideSoftInputFromWindow(rootView.getWindowToken(), 0);\r\n        });\r\n\r\n        //domain selection bottom sheet\r\n        domainSelection.setOnClickListener(v -> {\r\n            BottomSheetDomain bottomSheetDomain = new BottomSheetDomain();\r\n            bottomSheetDomain.show(getSupportFragmentManager(), \"Domain Selection\");\r\n        });\r\n\r\n\r\n\r\n        //registration button\r\n        btnregister.setOnClickListener(v -> {\r\n            email = mEmail.getText().toString();\r\n            username = mUsername.getText().toString();\r\n            password = mPassword.getText().toString();\r\n            confirmPassword = mConfirmPassword.getText().toString();\r\n\r\n            if (checkInputs(email, username, password, confirmPassword, domain)) {\r\n                if (checkValidity(password) || checkValidity(confirmPassword))\r\n                    if (password.equals(confirmPassword)) {\r\n                        mProgressBar.setVisibility(View.VISIBLE);\r\n                        checkifuserexist(username);\r\n                    } else {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n                        mPassword.setText(\"\");\r\n                        mConfirmPassword.setText(\"\");\r\n                        mPassword.setError(\"Password don not match\");\r\n                        mPassword.requestFocus();\r\n                        mConfirmPassword.setError(\"Password don not match\");\r\n                        mConfirmPassword.requestFocus();\r\n                    }\r\n            } else {\r\n                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n                mPassword.setText(\"\");\r\n                mConfirmPassword.setText(\"\");\r\n            }\r\n        });\r\n\r\n        //link login\r\n        linkLogin.setOnClickListener(v -> {\r\n            Log.d(TAG, \"on Click:navigating to register screen\");\r\n            Intent intent = new Intent(register.this, login.class);\r\n            startActivity(intent);\r\n        });\r\n    }\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuthListener = firebaseAuth -> {\r\n            FirebaseUser user = firebaseAuth.getCurrentUser();\r\n            if (user != null) {\r\n                Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n                myRef.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n            }\r\n        };\r\n    }\r\n\r\n    private void checkifuserexist(final String username) {\r\n        if (username.contains(\" \")){\r\n            Toast.makeText(mContext, \"No space should be there.\", Toast.LENGTH_SHORT).show();\r\n            register.this.mUsername.setError(\"No space should be there.\");\r\n            register.this.mProgressBar.setVisibility(View.GONE);\r\n        }else{\r\n            DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n            Query query = reference.child(getString(R.string.dbname_username)).child(username);\r\n            query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    if (!dataSnapshot.exists()) {\r\n                        RegisterNewEmail(email, password, mProgressBar, mEmail, mUsername, mPassword, mConfirmPassword, domainSelection);\r\n\r\n                    } else {\r\n                        Toast.makeText(mContext, \"please try different username\", Toast.LENGTH_SHORT).show();\r\n                        register.this.mUsername.setError(\"username already exist\");\r\n                        register.this.mProgressBar.setVisibility(View.GONE);\r\n\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    public void RegisterNewEmail(final String email, String password, ProgressBar mProgressBar, EditText mEmail, EditText mUsername, EditText mPassword, EditText mConfirmPassword, TextView domainSelection) {\r\n        assert password!=null;\r\n        assert  email!=null;\r\n        mAuth.createUserWithEmailAndPassword(email, password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n            private static final int ANIMATION_DURATION = 1000;\r\n\r\n            @Override\r\n            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                if (task.isSuccessful()) {\r\n                    // Sign in success, update UI with the signed-in user's information\r\n                    userID = mAuth.getCurrentUser().getUid();\r\n                    addNewUser(email, username, domain);\r\n                } else {\r\n                    // If sign in fails, display a message to the user.\r\n                    Log.w(TAG, \"createUserWithEmail:failure\", task.getException());\r\n                    new AlertDialog.Builder(mContext)\r\n                            .setTitle(\"New account cannot be created\")\r\n                            .setMessage(\"Try using a different email id\")\r\n                            .setPositiveButton(android.R.string.ok, (dialog, which) -> dialog.dismiss())\r\n                            .show();\r\n                    mProgressBar.setVisibility(View.INVISIBLE);\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mConfirmPassword);\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mEmail);\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mUsername);\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(domainSelection);\r\n                    domainSelection.setText(\"Select Your Domain\");\r\n                    mEmail.setText(\"\");\r\n                    mPassword.setText(\"\");\r\n                    mUsername.setText(\"\");\r\n                    mPassword.setText(\"\");\r\n                    mConfirmPassword.setText(\"\");\r\n                }\r\n                // ...\r\n            }\r\n        });\r\n    }\r\n\r\n    public void sendverification() {\r\n        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n        if (user != null) {\r\n            user.sendEmailVerification().addOnCompleteListener(task -> {\r\n                if (!task.isSuccessful()) {\r\n                    new AlertDialog.Builder(mContext)\r\n                            .setTitle(\"Sorry\")\r\n                            .setMessage(\"Could not send Verification Mail\")\r\n                            .setPositiveButton(android.R.string.ok, (dialog, which) -> dialog.dismiss())\r\n                            .show();\r\n                }else{\r\n                    SharedPreferences.Editor editor = sp.edit();\r\n                    editor.putString(\"yes\", \"yes\");\r\n                    editor.apply();\r\n                    Intent intent = new Intent(register.this, login.class);\r\n                    startActivity(intent);\r\n                    Toast.makeText(mContext, \" Verification mail sent. Please verify!\", Toast.LENGTH_LONG).show();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    public void addNewUser(String email, String username, String domain) {\r\n        users user = new users(userID, email,domain, StringManipilation.condenseUsername(username), \"\", \"\", \"\",\"false\",\"false\",\"false\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\");\r\n      String username2=StringManipilation.condenseUsername(username);\r\n        Log.d(TAG, \"addNewUser: user\"+user);\r\n        myRef.child(mContext.getString(R.string.dbname_users))\r\n                .child(userID)\r\n                .setValue(user)\r\n                .addOnSuccessListener(aVoid -> {\r\n\r\n                    myRef.child(getString(R.string.dbname_username))\r\n                            .child(username2)\r\n                            .setValue(userID)\r\n                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n                                    Leaderboard leaderboard = new Leaderboard();\r\n                                    leaderboard.setU(StringManipilation.condenseUsername(username));\r\n                                    leaderboard.setD(domain);\r\n                                    leaderboard.setPp(\"\");\r\n                                    myRef.child(mContext.getString(R.string.dbname_leaderboard))\r\n                                            .child(userID)\r\n                                            .setValue(leaderboard)\r\n                                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                @Override\r\n                                                public void onSuccess(Void aVoid) {\r\n                                                    SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Kolkata\"), new SNTPClient.Listener() {\r\n                                                        @Override\r\n                                                        public void onTimeReceived(String currentTimeStamp) {\r\n                                                            leaderboard.setLu(currentTimeStamp);\r\n                                                            //domain parameter left\r\n                                                            myRef.child(mContext.getString(R.string.dbname_leaderboard))\r\n                                                                    .child(userID)\r\n                                                                    .setValue(leaderboard)\r\n                                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                                        @Override\r\n                                                                        public void onSuccess(Void aVoid) {\r\n                                                                            sendverification();\r\n                                                                        }\r\n                                                                    }).addOnFailureListener(new OnFailureListener() {\r\n                                                                @Override\r\n                                                                public void onFailure(@NonNull Exception e) {\r\n                                                                    Toast.makeText(mContext, \"Error:Please try again\", Toast.LENGTH_SHORT).show();\r\n\r\n                                                                }\r\n                                                            });\r\n\r\n                                                        }\r\n\r\n                                                        @Override\r\n                                                        public void onError(Exception ex) {\r\n                                                            myRef.child(mContext.getString(R.string.dbname_leaderboard))\r\n                                                                    .child(userID)\r\n                                                                    .setValue(leaderboard)\r\n                                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                                        @Override\r\n                                                                        public void onSuccess(Void aVoid) {\r\n                                                                            sendverification();\r\n                                                                        }\r\n                                                                    }).addOnFailureListener(new OnFailureListener() {\r\n                                                                @Override\r\n                                                                public void onFailure(@NonNull Exception e) {\r\n                                                                    Toast.makeText(mContext, \"Error:Please try again\", Toast.LENGTH_SHORT).show();\r\n\r\n                                                                }\r\n                                                            });\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            }).addOnFailureListener(new OnFailureListener() {\r\n                                        @Override\r\n                                        public void onFailure(@NonNull Exception e) {\r\n                                            Toast.makeText(mContext, \"Error:Please try again\", Toast.LENGTH_SHORT).show();\r\n\r\n                                        }\r\n                                    });\r\n\r\n                                }\r\n                            });\r\n\r\n\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Toast.makeText(mContext, \"Error:Please try again\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/login/register.java	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-+++ app/src/main/java/com/orion/orion/login/register.java	(date 1606030025706)
-@@ -424,7 +424,27 @@
-                                                                     .addOnSuccessListener(new OnSuccessListener<Void>() {
-                                                                         @Override
-                                                                         public void onSuccess(Void aVoid) {
--                                                                            sendverification();
-+                                                                            myRef.child(mContext.getString(R.string.dbname_following))
-+                                                                                    .child(userID)
-+                                                                                    .child(getString(R.string.orion_team_user_id))
-+                                                                                    .setValue(true)
-+                                                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {
-+                                                                                        @Override
-+                                                                                        public void onSuccess(Void aVoid) {
-+                                                                                            myRef.child(mContext.getString(R.string.dbname_follower))
-+                                                                                                    .child(getString(R.string.orion_team_user_id))
-+                                                                                                    .child(userID)
-+                                                                                                    .setValue(true)
-+                                                                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {
-+                                                                                                        @Override
-+                                                                                                        public void onSuccess(Void aVoid) {
-+                                                                                                            sendverification();
-+
-+                                                                                                        }
-+                                                                                                    });
-+
-+                                                                                        }
-+                                                                                    });
-                                                                         }
-                                                                     }).addOnFailureListener(new OnFailureListener() {
-                                                                 @Override
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07__Default_Changelist_.xml
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07__Default_Changelist_.xml	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07__Default_Changelist_.xml	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_15-11-2020_21_07_[Default_Changelist]" date="1605454781608" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07_[Default_Changelist]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 15-11-2020 21:07 [Default Changelist]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07_[Default_Changelist]/shelved.patch
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07_[Default_Changelist]/shelved.patch	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_15-11-2020_21_07_[Default_Changelist]/shelved.patch	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-@@ -1,1460 +0,0 @@
--Index: app/src/main/res/layout/activity_main.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\nxmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\nxmlns:tools=\"http://schemas.android.com/tools\"\r\nandroid:layout_width=\"match_parent\"\r\nandroid:layout_height=\"match_parent\"\r\ntools:context=\".home.MainActivity\">\r\n    <FrameLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:id=\"@+id/container\">\r\n\r\n    </FrameLayout>\r\n\r\n<RelativeLayout\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:id=\"@+id/relLayoutParent\">\r\n    <!--top toolbar    -->\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id/relLayout1\">\r\n        <include layout=\"@layout/layout_top_tabs_main\"/>\r\n\r\n    </RelativeLayout>\r\n    <!--        middle section-->\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:id=\"@+id/relLayout2\"\r\n        android:layout_below=\"@+id/relLayout1\"\r\n        android:layout_above=\"@+id/bottom\">\r\n\r\n<include layout=\"@layout/layout_center_viewpager\" />\r\n    </RelativeLayout>\r\n<!--    Bottom bar-->\r\n    <include layout=\"@layout/layout_bottom_navigation_view\" />\r\n</RelativeLayout>\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/activity_main.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
--+++ app/src/main/res/layout/activity_main.xml	(date 1605447926423)
--@@ -1,41 +1,44 @@
-- <?xml version="1.0" encoding="utf-8"?>
-- <androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
---xmlns:app="http://schemas.android.com/apk/res-auto"
---xmlns:tools="http://schemas.android.com/tools"
---android:layout_width="match_parent"
---android:layout_height="match_parent"
---tools:context=".home.MainActivity">
--+    xmlns:app="http://schemas.android.com/apk/res-auto"
--+    xmlns:tools="http://schemas.android.com/tools"
--+    android:layout_width="match_parent"
--+    android:layout_height="match_parent"
--+    tools:context=".home.MainActivity"
--+    android:id="@+id/activity_main_layout">
--+
--     <FrameLayout
--+        android:id="@+id/container"
--         android:layout_width="match_parent"
---        android:layout_height="match_parent"
---        android:id="@+id/container">
--+        android:layout_height="match_parent">
-- 
--     </FrameLayout>
-- 
---<RelativeLayout
---    android:layout_width="match_parent"
---    android:layout_height="match_parent"
---    android:id="@+id/relLayoutParent">
---    <!--top toolbar    -->
---    <RelativeLayout
---        android:layout_width="match_parent"
---        android:layout_height="wrap_content"
---        android:id="@+id/relLayout1">
---        <include layout="@layout/layout_top_tabs_main"/>
--+    <RelativeLayout
--+        android:id="@+id/relLayoutParent"
--+        android:layout_width="match_parent"
--+        android:layout_height="match_parent">
--+        <!--top toolbar    -->
--+        <RelativeLayout
--+            android:id="@+id/relLayout1"
--+            android:layout_width="match_parent"
--+            android:layout_height="wrap_content">
--+
--+            <include layout="@layout/layout_top_tabs_main" />
-- 
---    </RelativeLayout>
---    <!--        middle section-->
---    <RelativeLayout
---        android:layout_width="match_parent"
---        android:layout_height="match_parent"
---        android:id="@+id/relLayout2"
---        android:layout_below="@+id/relLayout1"
---        android:layout_above="@+id/bottom">
--+        </RelativeLayout>
--+        <!--        middle section-->
--+        <RelativeLayout
--+            android:id="@+id/relLayout2"
--+            android:layout_width="match_parent"
--+            android:layout_height="match_parent"
--+            android:layout_above="@+id/bottom"
--+            android:layout_below="@+id/relLayout1">
-- 
---<include layout="@layout/layout_center_viewpager" />
---    </RelativeLayout>
---<!--    Bottom bar-->
---    <include layout="@layout/layout_bottom_navigation_view" />
---</RelativeLayout>
--+            <include layout="@layout/layout_center_viewpager" />
--+        </RelativeLayout>
--+        <!--    Bottom bar-->
--+        <include layout="@layout/layout_bottom_navigation_view" />
--+    </RelativeLayout>
-- 
-- </androidx.coordinatorlayout.widget.CoordinatorLayout>
--\ No newline at end of file
--Index: app/src/main/java/com/orion/orion/ViewPostActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.orion.orion;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.media.AudioManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.PopupMenu;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.VolleyLog;\r\nimport com.bumptech.glide.Glide;\r\nimport com.danikula.videocache.HttpProxyCacheServer;\r\nimport com.google.android.exoplayer2.DefaultLoadControl;\r\nimport com.google.android.exoplayer2.ExoPlaybackException;\r\nimport com.google.android.exoplayer2.ExoPlayerFactory;\r\nimport com.google.android.exoplayer2.LoadControl;\r\nimport com.google.android.exoplayer2.PlaybackParameters;\r\nimport com.google.android.exoplayer2.Player;\r\nimport com.google.android.exoplayer2.SimpleExoPlayer;\r\nimport com.google.android.exoplayer2.Timeline;\r\nimport com.google.android.exoplayer2.source.ExtractorMediaSource;\r\nimport com.google.android.exoplayer2.source.MediaSource;\r\nimport com.google.android.exoplayer2.source.TrackGroupArray;\r\nimport com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;\r\nimport com.google.android.exoplayer2.trackselection.DefaultTrackSelector;\r\nimport com.google.android.exoplayer2.trackselection.TrackSelectionArray;\r\nimport com.google.android.exoplayer2.trackselection.TrackSelector;\r\nimport com.google.android.exoplayer2.ui.PlayerView;\r\nimport com.google.android.exoplayer2.upstream.BandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DataSource;\r\nimport com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;\r\nimport com.google.android.exoplayer2.util.Util;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.Photo;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.profile;\r\nimport com.orion.orion.util.SNTPClient;\r\nimport com.orion.orion.util.SquareImageView;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.TimeZone;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport static android.view.View.GONE;\r\nimport static com.orion.orion.util.MyApplication.getProxy;\r\n\r\npublic class ViewPostActivity extends AppCompatActivity {\r\n    private static final String TAG = \"ViewPostFragment\";\r\n\r\n\r\n    //firebase\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private DatabaseReference myRef;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n    String currentUsername = \"\";\r\n\r\n    private Photo mphoto;\r\n    PlayerView playerView;\r\n    ProgressBar progressBar;\r\n    boolean play = true;\r\n    long currentPosition = 0;\r\n    SimpleExoPlayer simpleExoPlayer;\r\n\r\n    private String mLikesString = \"\";\r\n    private String numberoflike = \"0\";\r\n    ArrayList<Comment> comments = new ArrayList<>();\r\n\r\n\r\n    private SquareImageView mPostImage, thumbnail, progress2;\r\n    private BottomNavigationViewEx bottomNavigationView;\r\n    private TextView mBackLabel, duration, mCaption, mUsername, mTimestamp, mLikes, mCommentnumber, mcredit, domain, promoteNum;\r\n    private ImageView mBackArrow, mEllipses, mStarYellow, mStarWhite, mProfileImage, mComment, promote, promoted, play2, mute, unmute;\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n    LinearLayout progress;\r\n    private users mCurrentUser;\r\n    private boolean likeByCurrentsUser2;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_view_post);\r\n\r\n        mPostImage = (SquareImageView) findViewById(R.id.post_image);\r\n        bottomNavigationView = (BottomNavigationViewEx) findViewById(R.id.BottomNavViewBar);\r\n        mBackArrow = (ImageView) findViewById(R.id.backarrow);\r\n        mEllipses = (ImageView) findViewById(R.id.ivEllipses);\r\n        mStarWhite = (ImageView) findViewById(R.id.image_star);\r\n        mStarYellow = (ImageView) findViewById(R.id.image_star_yellow);\r\n        mProfileImage = (ImageView) findViewById(R.id.profile_photo1);\r\n        mBackLabel = (TextView) findViewById(R.id.tvbacklabel1);\r\n        mCaption = (TextView) findViewById(R.id.image_caption);\r\n        mUsername = (TextView) findViewById(R.id.username1);\r\n        mTimestamp = (TextView) findViewById(R.id.images_time);\r\n        mLikes = (TextView) findViewById(R.id.likes_number);\r\n        mComment = (ImageView) findViewById(R.id.image_shoutout);\r\n        mCommentnumber = (TextView) findViewById(R.id.comments_number);\r\n        mcredit = (TextView) findViewById(R.id.credit);\r\n        promote = (ImageView) findViewById(R.id.promote);\r\n        promoted = (ImageView) findViewById(R.id.promoted);\r\n        domain = (TextView) findViewById(R.id.domain12);\r\n        promoteNum = (TextView) findViewById(R.id.promote_number);\r\n\r\n        progress = findViewById(R.id.pro);\r\n        progress2 = findViewById(R.id.progress);\r\n\r\n\r\n        play2 = (ImageView) findViewById(R.id.play);\r\n        mute = (ImageView) findViewById(R.id.mute);\r\n        unmute = (ImageView) findViewById(R.id.unmute);\r\n        playerView = findViewById(R.id.player_view);\r\n        progressBar = findViewById(R.id.progress_bar);\r\n        duration = (TextView) findViewById(R.id.duration);\r\n        thumbnail = (SquareImageView) findViewById(R.id.thumbnail);\r\n\r\n\r\n//          Initialize SharedPreference variables\r\n        sp = getApplicationContext().getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n\r\n\r\n        Intent i = getIntent();\r\n        mphoto = i.getParcelableExtra(\"photo\");\r\n        comments = i.getParcelableArrayListExtra(\"comments\");\r\n\r\n        duration.setVisibility(View.GONE);\r\n\r\n\r\n        mEllipses.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                PopupMenu popupMenu = new PopupMenu(ViewPostActivity.this, mEllipses);\r\n                if (mphoto.getUser_id().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                    popupMenu.getMenuInflater().inflate(R.menu.post_menu, popupMenu.getMenu());\r\n                    Log.d(TAG, \"onClick: \" + \"yespop\");\r\n                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                        @Override\r\n                        public boolean onMenuItemClick(MenuItem item) {\r\n                            Toast.makeText(ViewPostActivity.this, \"clicked\", Toast.LENGTH_SHORT).show();\r\n\r\n                            AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);\r\n                            builder.setTitle(\"Delete\");\r\n                            builder.setMessage(\"Are you sure, you want to delete this Post?\");\r\n\r\n//                set buttons\r\n                            builder.setPositiveButton(\"Delete\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    Log.d(TAG, \"DeleteMessage: deleteing message\");\r\n                                    DeletePost();\r\n\r\n                                }\r\n                            });\r\n                            builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    dialog.dismiss();\r\n                                }\r\n                            });\r\n                            builder.create().show();\r\n\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    popupMenu.show();\r\n\r\n\r\n                } else {\r\n                    popupMenu.getMenuInflater().inflate(R.menu.post_menu_all, popupMenu.getMenu());\r\n                    Log.d(TAG, \"onClick: \" + \"yespop\");\r\n                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                        @Override\r\n                        public boolean onMenuItemClick(MenuItem item) {\r\n                            Toast.makeText(ViewPostActivity.this, \"clicked\", Toast.LENGTH_SHORT).show();\r\n\r\n                            AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);\r\n                            builder.setTitle(\"Report\");\r\n                            builder.setMessage(\"Are you sure, you want to Report this Post?\");\r\n\r\n//                set buttons\r\n                            builder.setPositiveButton(\"Report\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    Log.d(TAG, \"DeleteMessage: deleteing message\");\r\n                                    ReportPost();\r\n\r\n                                }\r\n                            });\r\n                            builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    dialog.dismiss();\r\n                                }\r\n                            });\r\n                            builder.create().show();\r\n\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    popupMenu.show();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        if (mphoto.getType().equals(\"photo\")) {\r\n\r\n            mPostImage.setVisibility(View.VISIBLE);\r\n            play2.setVisibility(View.GONE);\r\n            Glide.with(ViewPostActivity.this)\r\n                    .load(mphoto.getImage_path())\r\n                    .placeholder(R.drawable.load)\r\n                    .error(R.drawable.default_image2)\r\n                    .placeholder(R.drawable.load)\r\n                    .into(mPostImage);\r\n            playerView.setVisibility(GONE);\r\n\r\n        } else {\r\n            unmute.setVisibility(View.VISIBLE);\r\n            play2.setVisibility(View.VISIBLE);\r\n            mPostImage.setVisibility(View.GONE);\r\n            playerView.setVisibility(View.VISIBLE);\r\n\r\n        }\r\n\r\n//                   ***********get Video***********\r\n\r\n\r\n        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n//                    get thumbnail\r\n        reference2\r\n                .child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"thumbnail\")\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            Glide.with(ViewPostActivity.this)\r\n                                    .load(mphoto.getThumbnail())\r\n                                    .placeholder(R.drawable.load)\r\n                                    .error(R.drawable.default_image2)\r\n                                    .placeholder(R.drawable.load)\r\n                                    .thumbnail(0.25f)\r\n                                    .into(thumbnail);                           }\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n//                     play/pause video\r\n\r\n        final Handler[] mHandler = new Handler[1];\r\n        final Runnable[] updateProgressAction = new Runnable[1];\r\n        mUsername.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent i = new Intent(ViewPostActivity.this, profile.class);\r\n                i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                i.putExtra(getString(R.string.intent_user), mphoto.getUser_id());\r\n                startActivity(i);\r\n            }\r\n        });\r\n        mProfileImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent i = new Intent(ViewPostActivity.this, profile.class);\r\n                i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                i.putExtra(getString(R.string.intent_user), mphoto.getUser_id());\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        playerView.getVideoSurfaceView().setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                progressBar.setVisibility(View.VISIBLE);\r\n//                if paused\r\n                if (play) {\r\n\r\n                    play = false;\r\n                    play2.setVisibility(View.INVISIBLE);\r\n\r\n                    LoadControl loadControl = new DefaultLoadControl();\r\n                    BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n                    TrackSelector trackSelector = new DefaultTrackSelector(new AdaptiveTrackSelection.Factory(bandwidthMeter));\r\n                    if (simpleExoPlayer != null) {\r\n\r\n                        simpleExoPlayer.release();\r\n                    }\r\n\r\n                    simpleExoPlayer = ExoPlayerFactory.newSimpleInstance(ViewPostActivity.this, trackSelector, loadControl);\r\n\r\n                    DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(\r\n                            ViewPostActivity.this, Util.getUserAgent(ViewPostActivity.this, \"RecyclerView VideoPlayer\"));\r\n                    String mediaUrl = mphoto.getImage_path();\r\n                    HttpProxyCacheServer proxy = getProxy(ViewPostActivity.this);\r\n                    String proxyUrl = proxy.getProxyUrl(mediaUrl);\r\n\r\n\r\n                    playerView.setPlayer(simpleExoPlayer);\r\n\r\n\r\n                    playerView.setKeepScreenOn(true);\r\n                    playerView.setKeepScreenOn(true);\r\n\r\n\r\n                    MediaSource videoSource = new ExtractorMediaSource.Factory(dataSourceFactory)\r\n                            .createMediaSource(Uri.parse(proxyUrl));\r\n//                    set Volume\r\n                    if (mute.getVisibility() == View.VISIBLE) {\r\n                        simpleExoPlayer.setVolume(0f);\r\n                    } else if (unmute.getVisibility() == View.VISIBLE) {\r\n                        simpleExoPlayer.setVolume(AudioManager.STREAM_MUSIC);\r\n                    }\r\n\r\n                    simpleExoPlayer.prepare(videoSource);\r\n                    simpleExoPlayer.seekTo(currentPosition);\r\n                    simpleExoPlayer.setPlayWhenReady(true);\r\n                    simpleExoPlayer.getPlaybackState();\r\n\r\n\r\n                    simpleExoPlayer.addListener(new Player.EventListener() {\r\n                        @Override\r\n                        public void onTimelineChanged(Timeline timeline, Object manifest, int reason) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onLoadingChanged(boolean isLoading) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n\r\n                            if (playbackState == Player.STATE_BUFFERING) {\r\n\r\n                                progressBar.setVisibility(View.VISIBLE);\r\n\r\n                            } else if (playbackState == Player.STATE_READY) {\r\n\r\n                                duration.setVisibility(View.VISIBLE);\r\n                                thumbnail.setVisibility(GONE);\r\n                                progressBar.setVisibility(View.GONE);\r\n\r\n//                                display duration\r\n                                updateProgressAction[0] = new Runnable() {\r\n                                    @Override\r\n                                    public void run() {\r\n                                        updateProgress();\r\n                                    }\r\n\r\n                                    private void updateProgress() {\r\n\r\n                                        long delayMs = TimeUnit.SECONDS.toMillis(1);\r\n                                        mHandler[0].postDelayed(updateProgressAction[0], delayMs);\r\n                                        duration.setText(String.valueOf((int) (simpleExoPlayer.getDuration() - simpleExoPlayer.getCurrentPosition()) / 1000));\r\n\r\n                                    }\r\n\r\n                                };\r\n                                mHandler[0] = new Handler();\r\n                                mHandler[0].post(updateProgressAction[0]);\r\n\r\n\r\n                            } else if (playbackState == Player.STATE_ENDED) {\r\n\r\n                                play2.setVisibility(View.VISIBLE);\r\n                                play = true;\r\n                                thumbnail.setVisibility(View.VISIBLE);\r\n                                simpleExoPlayer.seekTo(0);\r\n                                simpleExoPlayer.setPlayWhenReady(false);\r\n                                simpleExoPlayer.release();\r\n\r\n                            } else if (playbackState == Player.STATE_IDLE) {\r\n                                play2.setVisibility(View.VISIBLE);\r\n\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onRepeatModeChanged(int repeatMode) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onShuffleModeEnabledChanged(boolean shuffleModeEnabled) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlayerError(ExoPlaybackException error) {\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPositionDiscontinuity(int reason) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlaybackParametersChanged(PlaybackParameters playbackParameters) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onSeekProcessed() {\r\n\r\n                        }\r\n                    });\r\n                } else {\r\n//                    if playing\r\n                    play = true;\r\n                    play2.setVisibility(View.VISIBLE);\r\n                    currentPosition = simpleExoPlayer.getCurrentPosition();\r\n                    simpleExoPlayer.setPlayWhenReady(false);\r\n                    simpleExoPlayer.getPlaybackState();\r\n                    simpleExoPlayer.release();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n//        toggle volume\r\n        mute.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                mute.setVisibility(View.GONE);\r\n                unmute.setVisibility(View.VISIBLE);\r\n                if (simpleExoPlayer != null) {\r\n                    simpleExoPlayer.setVolume(AudioManager.STREAM_MUSIC);\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n        unmute.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                mute.setVisibility(View.VISIBLE);\r\n                unmute.setVisibility(View.GONE);\r\n                if (simpleExoPlayer != null) {\r\n                    simpleExoPlayer.setVolume(0f);\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        getCurrentUser();\r\n\r\n\r\n        setupFirebaseAuth();\r\n        ifCurrentUserLiked();\r\n        ifCurrentUserPromoted();\r\n        numberofPromote();\r\n\r\n        getPhototDetail();\r\n        setupWidgets();\r\n\r\n\r\n        mStarWhite.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"whitestar clicked\");\r\n\r\n                mStarWhite.setVisibility(View.GONE);\r\n                mStarYellow.setVisibility(View.VISIBLE);\r\n                addlike();\r\n                NumberOfLikes();\r\n\r\n\r\n            }\r\n        });\r\n        mStarYellow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"yellowstar clicked\");\r\n\r\n                mStarWhite.setVisibility(View.VISIBLE);\r\n                mStarYellow.setVisibility(View.GONE);\r\n                removeLike();\r\n                NumberOfLikes();\r\n\r\n\r\n            }\r\n        });\r\n        promote.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                promotePost();\r\n            }\r\n        });\r\n\r\n\r\n        promoted.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                unPromotePost();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void ReportPost() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        reference.child(getString(R.string.dbname_reports))\r\n                .child(\"posts\")\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"user_id\")\r\n                .setValue(mphoto.getUser_id());\r\n    }\r\n\r\n    private void unPromotePost() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(\"Remove Promotion\");\r\n        builder.setMessage(\"Are you sure, you want to remove this Promotion?\");\r\n\r\n//                set buttons\r\n        builder.setPositiveButton(\"Remove\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                Log.d(VolleyLog.TAG, \"Rejecting: rejected \");\r\n\r\n                promote.setVisibility(View.VISIBLE);\r\n                promoted.setVisibility(View.GONE);\r\n\r\n                DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                db.child(getString(R.string.dbname_promote))\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                        .child(mphoto.getPhoto_id())\r\n                        .removeValue();\r\n\r\n                DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n                reference.child(getString(R.string.dbname_user_photos))\r\n                        .child(mphoto.getUser_id())\r\n                        .child(mphoto.getPhoto_id())\r\n                        .child(\"Promote\")\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                        .removeValue();\r\n\r\n\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n        builder.create().show();\r\n\r\n    }\r\n\r\n    private void numberofPromote() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"Promote\");\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                String num = String.valueOf(dataSnapshot.getChildrenCount());\r\n                promoteNum.setText(num);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private void promotePost() {\r\n        BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(this, R.style.BottomSheetDialogTheme);\r\n\r\n        View bottomSheetView = this.getLayoutInflater()\r\n                .inflate(R.layout.layout_bottom_sheet_promote, (LinearLayout) bottomSheetDialog.findViewById(R.id.layout_bottom_sheet_container));\r\n        TextView username = bottomSheetView.findViewById(R.id.usernameBs);\r\n        TextView cancel = bottomSheetView.findViewById(R.id.cancel);\r\n        TextView promote1 = bottomSheetView.findViewById(R.id.promote);\r\n        ImageView post = bottomSheetView.findViewById(R.id.postBs);\r\n        Glide.with(ViewPostActivity.this)\r\n                .load(mphoto.getImage_path())\r\n                .placeholder(R.drawable.load)\r\n                .error(R.drawable.default_image2)\r\n                .placeholder(R.drawable.load)\r\n                .thumbnail(0.5f)\r\n                .into(post);\r\n        username.setText(currentUsername);\r\n\r\n\r\n        cancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bottomSheetDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        promote1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                promote.setVisibility(View.GONE);\r\n                promoted.setVisibility(View.VISIBLE);\r\n\r\n\r\n                SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n                    @Override\r\n                    public void onTimeReceived(String rawDate) {\r\n                        // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n\r\n                        String str_date = rawDate;\r\n                        java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                        Date date = null;\r\n                        try {\r\n                            date = (Date) formatter.parse(str_date);\r\n                        } catch (ParseException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                        Long timeStart = date.getTime();\r\n                        Long timeEnd = date.getTime() + 84600000;\r\n\r\n\r\n                        DatabaseReference db1 = FirebaseDatabase.getInstance().getReference();\r\n\r\n                        HashMap<String, Object> hashMap = new HashMap<>();\r\n                        hashMap.put(\"photoid\", mphoto.getPhoto_id());\r\n                        hashMap.put(\"userid\", mphoto.getUser_id());\r\n                        hashMap.put(\"photoLink\", mphoto.getImage_path());\r\n                        hashMap.put(\"storyid\", mphoto.getPhoto_id());\r\n                        hashMap.put(\"timeEnd\", String.valueOf(timeEnd));\r\n                        hashMap.put(\"timeStart\", String.valueOf(timeStart));\r\n                        hashMap.put(\"promoterId\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n                        db1.child(getString(R.string.dbname_promote))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(mphoto.getPhoto_id())\r\n                                .setValue(hashMap);\r\n\r\n                        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n                        reference.child(getString(R.string.dbname_user_photos))\r\n                                .child(mphoto.getUser_id())\r\n                                .child(mphoto.getPhoto_id())\r\n                                .child(\"Promote\")\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .setValue(\"true\");\r\n\r\n                        addToHisNotification(\"\" + mphoto.getUser_id(), mphoto.getPhoto_id(), \"Promoted your post.\");\r\n\r\n\r\n                        bottomSheetDialog.dismiss();\r\n\r\n                        Log.e(SNTPClient.TAG, rawDate);\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Exception ex) {\r\n                        Log.e(SNTPClient.TAG, ex.getMessage());\r\n                    }\r\n                });\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n        bottomSheetDialog.setContentView(bottomSheetView);\r\n        bottomSheetDialog.show();\r\n\r\n\r\n    }\r\n\r\n    private void DeletePost() {\r\n\r\n        progress.setVisibility(View.VISIBLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE,\r\n                WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n        final int[] x = {0};\r\n        DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();\r\n        reference3.child(getString(R.string.dbname_follower))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                x[0]++;\r\n                                DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();\r\n                                reference3.child(getString(R.string.dbname_users))\r\n                                        .child(snapshot1.getKey())\r\n                                        .child(getString(R.string.post_updates))\r\n                                        .child(mphoto.getPhoto_id())\r\n                                        .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                                if (x[0] == snapshot.getChildrenCount()) {\r\n                                    deleteFurther();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            deleteFurther();\r\n\r\n                        }\r\n                    }\r\n\r\n                    private void deleteFurther() {\r\n\r\n                        if( !mphoto.getType().equals(\"photo\")){\r\n                            StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getThumbnail());\r\n                            photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n\r\n                                }\r\n                            });\r\n                        }\r\n                        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n                        reference2.child(getString(R.string.dbname_user_photos))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(mphoto.getPhoto_id())\r\n                                .removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getImage_path());\r\n                                photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        // File deleted successfully\r\n\r\n                                        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n                                        reference2.child(getString(R.string.explore_update))\r\n                                                .child(mphoto.getPhoto_id())\r\n                                                .setValue(true)\r\n                                                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(Void aVoid) {\r\n                                                        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Kolkata\"), new SNTPClient.Listener() {\r\n                                                            @Override\r\n                                                            public void onTimeReceived(String currentTimeStamp) {\r\n                                                                reference2.child(getString(R.string.explore_update)).child(getString(R.string.field_last_updated)).setValue(currentTimeStamp);\r\n                                                            }\r\n\r\n                                                            @Override\r\n                                                            public void onError(Exception ex) {\r\n\r\n                                                            }\r\n                                                        });\r\n                                                        String json = sp.getString(\"pl\", null);\r\n                                                        String json2 = sp.getString(\"myMedia\", null);\r\n\r\n                                                        Type type = new TypeToken<ArrayList<Photo>>() {\r\n                                                        }.getType();\r\n                                                        ArrayList<Photo> photoList = new ArrayList<>();\r\n                                                        ArrayList<Photo> mymediaList = new ArrayList<>();\r\n\r\n                                                        photoList = gson.fromJson(json, type);\r\n                                                        mymediaList = gson.fromJson(json2, type);\r\n                                                        ArrayList<Photo> photoList2 =new ArrayList<>();\r\n                                                        ArrayList<Photo> mymediaList2= new ArrayList<>();\r\n                                                        if( photoList != null) {\r\n                                                            photoList2 = new ArrayList<>(photoList);\r\n                                                        }\r\n                                                        if (mymediaList != null){\r\n                                                            mymediaList2 = new ArrayList<>(mymediaList);\r\n                                                        }\r\n\r\n\r\n                                                        if (photoList2.size() == 0) {                 //    if no arrayList is present\r\n\r\n\r\n                                                        } else {\r\n\r\n                                                            for (Photo a : photoList) {\r\n                                                                if (a.getPhoto_id().equals(mphoto.getPhoto_id()))\r\n                                                                    photoList2.remove(a);\r\n\r\n                                                            }\r\n                                                        }\r\n\r\n\r\n                                                        if (mymediaList2.size() == 0) {                 //    if no arrayList is present\r\n\r\n\r\n                                                        } else {\r\n\r\n                                                            for (Photo a : mymediaList) {\r\n                                                                if (a.getPhoto_id().equals(mphoto.getPhoto_id()))\r\n                                                                    mymediaList2.remove(a);\r\n\r\n                                                            }\r\n                                                        }\r\n\r\n\r\n                                                        //  delete from post list and save updated list\r\n                                                        SharedPreferences.Editor editor = sp.edit();\r\n                                                        json = gson.toJson(photoList2);\r\n                                                        json2 = gson.toJson(mymediaList2);\r\n\r\n                                                        editor.putString(\"pl\", json);\r\n                                                        editor.putString(\"myMedia\", json2);\r\n\r\n                                                        editor.apply();\r\n\r\n\r\n                                                        progress.setVisibility(GONE);\r\n                                                        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                                        finish();\r\n                                                    }\r\n                                                });\r\n\r\n\r\n                                    }\r\n\r\n                                }).\r\n\r\n                                        addOnFailureListener(new OnFailureListener() {\r\n                                            @Override\r\n                                            public void onFailure (@NonNull Exception exception){\r\n                                                // Uh-oh, an error occurred!\r\n                                                Log.d(VolleyLog.TAG, \"onFailure: did not delete file\");\r\n                                            }\r\n                                        });\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled (@NonNull DatabaseError error){\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n\r\n\r\n    private void getCurrentUser () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(getString(R.string.dbname_users))\r\n                .orderByChild(getString(R.string.field_user_id))\r\n                .equalTo(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                for (DataSnapshot singleSnapshot : dataSnapshot.getChildren()) {\r\n                    mCurrentUser = singleSnapshot.getValue(users.class);\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void NumberOfLikes () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\");\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                numberoflike = String.valueOf(dataSnapshot.getChildrenCount());\r\n                mLikes.setText(numberoflike);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void ifCurrentUserLiked () {\r\n        Log.d(TAG, \" checking current user liked or not\");\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    Log.d(TAG, \" checking current user liked or not: Already liked\");\r\n                    mStarWhite.setVisibility(View.GONE);\r\n                    mStarYellow.setVisibility(View.VISIBLE);\r\n                    NumberOfLikes();\r\n                    likeByCurrentsUser2 = true;\r\n\r\n                } else {\r\n                    Log.d(TAG, \" checking current user liked or not: not liked\");\r\n                    mStarWhite.setVisibility(View.VISIBLE);\r\n                    mStarYellow.setVisibility(View.GONE);\r\n                    NumberOfLikes();\r\n                    likeByCurrentsUser2 = false;\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void addToHisNotification (String hisUid, String pId, String notification){\r\n\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n\r\n                String str_date = rawDate;\r\n                java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                Date date = null;\r\n                try {\r\n                    date = (Date) formatter.parse(str_date);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                Log.d(TAG, \"onCreateView: timestampyesss\" + date.getTime());\r\n                String timestamp = String.valueOf(date.getTime());\r\n\r\n                //        data to put in notification\r\n                HashMap<Object, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"pId\", pId);\r\n\r\n                hashMap.put(\"timeStamp\", timestamp);\r\n\r\n                hashMap.put(\"pUid\", hisUid);\r\n\r\n                hashMap.put(\"notificaton\", notification);\r\n                hashMap.put(\"seen\", \"false\");\r\n\r\n\r\n                hashMap.put(\"sUid\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"users\");\r\n                ref.child(hisUid).child(\"Notifications\").child(timestamp).setValue(hashMap)\r\n                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n\r\n                            }\r\n                        }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n                Log.e(SNTPClient.TAG, rawDate);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception ex) {\r\n                Log.e(SNTPClient.TAG, ex.getMessage());\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void addlike () {\r\n        Log.d(TAG, \" like add\");\r\n\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        reference1.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(getString(R.string.field_user_id))\r\n                .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        NumberOfLikes();\r\n        addToHisNotification(\"\" + mphoto.getUser_id(), mphoto.getPhoto_id(), \"Liked your post\");\r\n\r\n\r\n    }\r\n\r\n    private void removeLike () {\r\n        Log.d(TAG, \" like removed\");\r\n\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        reference1.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"likes\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .removeValue();\r\n        NumberOfLikes();\r\n\r\n\r\n    }\r\n\r\n    private void ifCurrentUserPromoted () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUser_id())\r\n                .child(mphoto.getPhoto_id())\r\n                .child(\"Promote\")\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    Log.d(TAG, \" checking current user liked or not: Already liked\");\r\n                    promote.setVisibility(View.GONE);\r\n                    promoted.setVisibility(View.VISIBLE);\r\n\r\n                } else {\r\n                    Log.d(TAG, \" checking current user liked or not: not liked\");\r\n                    promote.setVisibility(View.VISIBLE);\r\n                    promoted.setVisibility(View.GONE);\r\n\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getPhototDetail () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(getString(R.string.dbname_users))\r\n                .child(mphoto.getUser_id());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                users user = dataSnapshot.getValue(users.class);\r\n                mUsername.setText(user.getUsername());\r\n                currentUsername = user.getUsername();\r\n                Glide.with(ViewPostActivity.this)\r\n                        .load(user.getProfile_photo())\r\n                        .placeholder(R.drawable.load)\r\n                        .error(R.drawable.default_image2)\r\n                        .placeholder(R.drawable.load)\r\n                        .into(mProfileImage);\r\n                mcredit.setText(\"© \" + user.getUsername());\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    private void setupWidgets () {\r\n        mTimestamp.setText(mphoto.getDate_created().substring(0, 10));\r\n\r\n        mBackArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n\r\n        mComment.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//\r\n                Intent i = new Intent(ViewPostActivity.this, CommentActivity.class);\r\n                i.putExtra(\"photoId\", mphoto.getPhoto_id());\r\n                i.putExtra(\"userId\", mphoto.getUser_id());\r\n                startActivity(i);\r\n\r\n            }\r\n        });\r\n        mCommentnumber.setText(String.valueOf(comments.size()));\r\n        mCaption.setText(mphoto.getCaption());\r\n        mLikes.setText(mLikesString);\r\n\r\n\r\n    }\r\n\r\n\r\n    private void setupFirebaseAuth () {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n\r\n        mAuthListener = new FirebaseAuth.AuthStateListener() {\r\n            @Override\r\n            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\r\n                FirebaseUser user = firebaseAuth.getCurrentUser();\r\n\r\n                if (user != null) {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n                } else {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                }\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart () {\r\n        super.onStart();\r\n\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStop () {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onPause () {\r\n        super.onPause();\r\n        if (simpleExoPlayer != null) {\r\n            simpleExoPlayer.release();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy () {\r\n        super.onDestroy();\r\n        if (simpleExoPlayer != null) {\r\n            simpleExoPlayer.release();\r\n        }\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/orion/orion/ViewPostActivity.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
--+++ app/src/main/java/com/orion/orion/ViewPostActivity.java	(date 1605450390258)
--@@ -178,7 +178,6 @@
--                         @Override
--                         public boolean onMenuItemClick(MenuItem item) {
--                             Toast.makeText(ViewPostActivity.this, "clicked", Toast.LENGTH_SHORT).show();
---
--                             AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);
--                             builder.setTitle("Delete");
--                             builder.setMessage("Are you sure, you want to delete this Post?");
--@@ -249,7 +248,6 @@
-- 
-- 
--         if (mphoto.getType().equals("photo")) {
---
--             mPostImage.setVisibility(View.VISIBLE);
--             play2.setVisibility(View.GONE);
--             Glide.with(ViewPostActivity.this)
--@@ -742,10 +740,8 @@
--     }
-- 
--     private void DeletePost() {
---
--         progress.setVisibility(View.VISIBLE);
---        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE,
---                WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
--+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE, WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
--         final int[] x = {0};
--         DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();
--         reference3.child(getString(R.string.dbname_follower))
--@@ -762,18 +758,11 @@
--                                         .child(getString(R.string.post_updates))
--                                         .child(mphoto.getPhoto_id())
--                                         .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());
---                                if (x[0] == snapshot.getChildrenCount()) {
---                                    deleteFurther();
---                                }
--+                                if (x[0] == snapshot.getChildrenCount()) deleteFurther();
--                             }
---                        } else {
---                            deleteFurther();
---
---                        }
--+                        } else deleteFurther();
--                     }
---
--                     private void deleteFurther() {
---
--                         if( !mphoto.getType().equals("photo")){
--                             StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getThumbnail());
--                             photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {
--Index: app/src/main/java/com/orion/orion/Adapters/AdapterComment.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.orion.orion.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.models.Comment;\r\n\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.profile;\r\n\r\nimport java.util.List;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\nimport static com.android.volley.VolleyLog.TAG;\r\n\r\npublic class AdapterComment extends RecyclerView.Adapter<AdapterComment.ViewHolder> {\r\n    private String mAppend = \"\";\r\n\r\n    private Context mContext;\r\n    private List<Comment> comments;\r\n\r\n    public AdapterComment(Context mContext, List<Comment> comments) {\r\n        this.mContext = mContext;\r\n        this.comments = comments;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        View view= LayoutInflater.from(mContext).inflate(R.layout.layout_commets,parent,false);\r\n        return new AdapterComment.ViewHolder(view);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final ViewHolder holder, final int i) {\r\n\r\n        Comment comment= comments.get(i);\r\n\r\n        holder.comment.setText(comment.getComment());\r\n        holder.timestamp.setText(comment.getDate_created().substring(0,10));\r\n\r\n        getUserdetail(comment.getUser_id(),holder.username,holder.profileimage);\r\n\r\n        holder.username.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(mContext, profile.class);\r\n                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));\r\n\r\n                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());\r\n                mContext.startActivity(i);\r\n            }\r\n        });\r\n\r\n        holder.profileimage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(mContext, profile.class);\r\n                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));\r\n\r\n                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());\r\n                mContext.startActivity(i);\r\n            }\r\n        });\r\n\r\n       }\r\n\r\n    private void getUserdetail(String user_id, TextView username, CircleImageView profileimage) {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(mContext.getString(R.string.dbname_user_account_settings))\r\n                .child(user_id);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                    username.setText((dataSnapshot.getValue(users.class).getUsername()));\r\n\r\n                Glide.with(mContext)\r\n                        .load((dataSnapshot.getValue(users.class).getProfile_photo()))\r\n                        .placeholder(R.drawable.load)\r\n                        .error(R.drawable.default_image2)\r\n                        .placeholder(R.drawable.load)\r\n                        .into(profileimage);\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n    @Override\r\n    public long getItemId(int position) {\r\n        Comment photo = comments.get(position);\r\n        return photo.getDate_created().hashCode();\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return comments.size();\r\n    }\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        return position;\r\n    }\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        TextView comment,username,timestamp;\r\n        CircleImageView profileimage;\r\n\r\n        public ViewHolder(@NonNull View convertView) {\r\n            super(convertView);\r\n\r\n            comment=(TextView)convertView.findViewById(R.id.addcomment);\r\n            username=(TextView)convertView.findViewById(R.id.comment_username);\r\n         timestamp=(TextView)convertView.findViewById(R.id.comment_time_posted);\r\n           profileimage=(CircleImageView)convertView.findViewById((R.id.commet_profile_image));\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/orion/orion/Adapters/AdapterComment.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
--+++ app/src/main/java/com/orion/orion/Adapters/AdapterComment.java	(date 1605450390236)
--@@ -1,17 +1,23 @@
-- package com.orion.orion.Adapters;
-- 
--+import android.app.AlertDialog;
-- import android.content.Context;
--+import android.content.DialogInterface;
-- import android.content.Intent;
-- import android.util.Log;
-- import android.view.LayoutInflater;
-- import android.view.View;
-- import android.view.ViewGroup;
--+import android.widget.ImageButton;
--+import android.widget.PopupMenu;
-- import android.widget.TextView;
--+import android.widget.Toast;
-- 
-- import androidx.annotation.NonNull;
-- import androidx.recyclerview.widget.RecyclerView;
-- 
-- import com.bumptech.glide.Glide;
--+import com.google.firebase.auth.FirebaseAuth;
-- import com.google.firebase.database.DataSnapshot;
-- import com.google.firebase.database.DatabaseError;
-- import com.google.firebase.database.DatabaseReference;
--@@ -19,6 +25,7 @@
-- import com.google.firebase.database.Query;
-- import com.google.firebase.database.ValueEventListener;
-- import com.orion.orion.R;
--+import com.orion.orion.ViewPostActivity;
-- import com.orion.orion.models.Comment;
-- 
-- import com.orion.orion.models.users;
--@@ -32,10 +39,8 @@
-- 
-- public class AdapterComment extends RecyclerView.Adapter<AdapterComment.ViewHolder> {
--     private String mAppend = "";
---
--     private Context mContext;
--     private List<Comment> comments;
---
--     public AdapterComment(Context mContext, List<Comment> comments) {
--         this.mContext = mContext;
--         this.comments = comments;
--@@ -44,45 +49,51 @@
--     @NonNull
--     @Override
--     public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
---
---        View view= LayoutInflater.from(mContext).inflate(R.layout.layout_commets,parent,false);
--+        View view = LayoutInflater.from(mContext).inflate(R.layout.layout_commets, parent, false);
--         return new AdapterComment.ViewHolder(view);
---
--     }
-- 
--     @Override
--     public void onBindViewHolder(@NonNull final ViewHolder holder, final int i) {
---
---        Comment comment= comments.get(i);
---
--+        Comment comment = comments.get(i);
--         holder.comment.setText(comment.getComment());
---        holder.timestamp.setText(comment.getDate_created().substring(0,10));
---
---        getUserdetail(comment.getUser_id(),holder.username,holder.profileimage);
---
---        holder.username.setOnClickListener(new View.OnClickListener() {
---            @Override
---            public void onClick(View v) {
---                Intent i = new Intent(mContext, profile.class);
---                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
---
---                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
---                mContext.startActivity(i);
---            }
---        });
---
---        holder.profileimage.setOnClickListener(new View.OnClickListener() {
---            @Override
---            public void onClick(View v) {
---                Intent i = new Intent(mContext, profile.class);
---                i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
---
---                i.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
---                mContext.startActivity(i);
---            }
--+        holder.timestamp.setText(comment.getDate_created().substring(0, 10));
--+        getUserdetail(comment.getUser_id(), holder.username, holder.profileimage);
--+        if(!comment.getUser_id().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) holder.edit.setVisibility(View.GONE);
--+        else {
--+            PopupMenu popup = new PopupMenu(mContext, holder.edit);
--+            popup.getMenuInflater().inflate(R.menu.post_comment, popup.getMenu());
--+            holder.edit.setOnClickListener(v -> popup.show());
--+            popup.setOnMenuItemClickListener(item -> {
--+                Toast.makeText(mContext, "You Clicked : " + item.getTitle(), Toast.LENGTH_SHORT).show();
--+                AlertDialog.Builder builder = new AlertDialog.Builder(mContext);
--+                builder.setTitle("Delete");
--+                builder.setMessage("Are you sure, you want to delete this comment?");
--+                builder.setPositiveButton("Delete", new DialogInterface.OnClickListener() {
--+                    @Override
--+                    public void onClick(DialogInterface dialog, int which) {
--+                        Log.d(TAG, "Deleting comment");
--+                        DeletePost();
--+                    }
--+                });
--+                builder.setNegativeButton("No", (dialog, which) -> dialog.dismiss());
--+                builder.create().show();
--+                return true;
--+            });
--+        }
--+        holder.username.setOnClickListener(v -> {
--+            Intent i1 = new Intent(mContext, profile.class);
--+            i1.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
--+            i1.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
--+            mContext.startActivity(i1);
--         });
---
---       }
--+        holder.profileimage.setOnClickListener(v -> {
--+            Intent i12 = new Intent(mContext, profile.class);
--+            i12.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));
--+            i12.putExtra(mContext.getString(R.string.intent_user), comment.getUser_id());
--+            mContext.startActivity(i12);
--+        });
--+    }
-- 
--     private void getUserdetail(String user_id, TextView username, CircleImageView profileimage) {
--         DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
--@@ -92,29 +103,22 @@
--         query.addListenerForSingleValueEvent(new ValueEventListener() {
--             @Override
--             public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
---
---                    username.setText((dataSnapshot.getValue(users.class).getUsername()));
---
--+                username.setText((dataSnapshot.getValue(users.class).getUsername()));
--                 Glide.with(mContext)
--                         .load((dataSnapshot.getValue(users.class).getProfile_photo()))
--                         .placeholder(R.drawable.load)
--                         .error(R.drawable.default_image2)
--                         .placeholder(R.drawable.load)
--                         .into(profileimage);
---
---
---
--             }
---
-- 
--             @Override
--             public void onCancelled(@NonNull DatabaseError databaseError) {
--                 Log.d(TAG, "Query Cancelled");
--             }
--         });
---
--+    }
-- 
---    }
--     @Override
--     public long getItemId(int position) {
--         Comment photo = comments.get(position);
--@@ -125,30 +129,23 @@
--     public int getItemCount() {
--         return comments.size();
--     }
--+
--     @Override
--     public int getItemViewType(int position) {
--         return position;
--     }
--+
--     public class ViewHolder extends RecyclerView.ViewHolder {
---
---        TextView comment,username,timestamp;
--+        TextView comment, username, timestamp;
--         CircleImageView profileimage;
---
--+        ImageButton edit;
--         public ViewHolder(@NonNull View convertView) {
--             super(convertView);
---
---            comment=(TextView)convertView.findViewById(R.id.addcomment);
---            username=(TextView)convertView.findViewById(R.id.comment_username);
---         timestamp=(TextView)convertView.findViewById(R.id.comment_time_posted);
---           profileimage=(CircleImageView)convertView.findViewById((R.id.commet_profile_image));
---
---
---
---
--+            comment = (TextView) convertView.findViewById(R.id.addcomment);
--+            username = (TextView) convertView.findViewById(R.id.comment_username);
--+            timestamp = (TextView) convertView.findViewById(R.id.comment_time_posted);
--+            profileimage = (CircleImageView) convertView.findViewById((R.id.commet_profile_image));
--+            edit = (ImageButton) convertView.findViewById(R.id.edit);
--         }
--     }
---
---
---
---
-- }
--Index: app/src/main/res/layout/layout_commets.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"\r\n    app:cardBackgroundColor=\"@color/white\"\r\n    app:cardUseCompatPadding=\"true\"\r\n    app:cardCornerRadius=\"5dp\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:background=\"@color/white\">\r\n    <RelativeLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n>\r\n    <de.hdodenhof.circleimageview.CircleImageView\r\n        android:layout_width=\"30dp\"\r\n        android:layout_height=\"30dp\"\r\n        android:id=\"@+id/commet_profile_image\"\r\n        android:layout_marginTop=\"5dp\"\r\n        android:layout_marginLeft=\"5dp\"\r\n        app:civ_border_color=\"@color/black\"\r\n        app:civ_border_width=\"0.5dp\"/>\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id/relLayout1\"\r\n        android:layout_toRightOf=\"@+id/commet_profile_image\"\r\n        android:layout_marginTop=\"5dp\"\r\n        >\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginRight=\"60dp\"\r\n        android:layout_marginBottom=\"5dp\">\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"naman\"\r\n            android:id=\"@+id/comment_username\"\r\n            android:layout_marginLeft=\"15dp\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"14sp\"\r\n            android:textStyle=\"bold\"/>\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"this is a comment\"\r\n            android:layout_marginLeft=\"15dp\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"14sp\"\r\n            android:layout_below=\"@+id/comment_username\"\r\n            android:id=\"@+id/addcomment\"/>\r\n\r\n        <TextView\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"3 D\"\r\n            android:layout_marginLeft=\"15dp\"\r\n            android:textColor=\"@color/grey\"\r\n            android:id=\"@+id/comment_time_posted\"\r\n            android:layout_below=\"@+id/addcomment\"\r\n            android:textSize=\"10sp\"\r\n            android:layout_marginTop=\"5dp\"/>\r\n\r\n\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n\r\n    </RelativeLayout>\r\n\r\n    </RelativeLayout>\r\n\r\n</androidx.cardview.widget.CardView>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/layout/layout_commets.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
--+++ app/src/main/res/layout/layout_commets.xml	(date 1605449247631)
--@@ -1,76 +1,85 @@
-- <?xml version="1.0" encoding="utf-8"?>
-- <androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
--+    xmlns:app="http://schemas.android.com/apk/res-auto"
--+    xmlns:tools="http://schemas.android.com/tools"
--     android:layout_width="wrap_content"
--     android:layout_height="wrap_content"
--+    android:background="@color/white"
--     app:cardBackgroundColor="@color/white"
---    app:cardUseCompatPadding="true"
--     app:cardCornerRadius="5dp"
---    xmlns:app="http://schemas.android.com/apk/res-auto"
---    android:background="@color/white">
--+    app:cardUseCompatPadding="true">
--+
--     <RelativeLayout
--         android:layout_width="wrap_content"
---        android:layout_height="wrap_content"
--->
---    <de.hdodenhof.circleimageview.CircleImageView
---        android:layout_width="30dp"
---        android:layout_height="30dp"
---        android:id="@+id/commet_profile_image"
---        android:layout_marginTop="5dp"
---        android:layout_marginLeft="5dp"
---        app:civ_border_color="@color/black"
---        app:civ_border_width="0.5dp"/>
---    <RelativeLayout
---        android:layout_width="match_parent"
---        android:layout_height="wrap_content"
---        android:id="@+id/relLayout1"
---        android:layout_toRightOf="@+id/commet_profile_image"
---        android:layout_marginTop="5dp"
---        >
--+        android:layout_height="wrap_content">
--+
--+        <RelativeLayout
--+            android:id="@+id/relLayout1"
--+            android:layout_width="match_parent"
--+            android:layout_height="wrap_content"
--+            android:layout_marginTop="5dp"
--+            android:layout_toRightOf="@+id/commet_profile_image">
-- 
---    <RelativeLayout
---        android:layout_width="match_parent"
---        android:layout_height="wrap_content"
---        android:layout_marginRight="60dp"
---        android:layout_marginBottom="5dp">
---        <TextView
---            android:layout_width="wrap_content"
---            android:layout_height="wrap_content"
---            android:text="naman"
---            android:id="@+id/comment_username"
---            android:layout_marginLeft="15dp"
---            android:textColor="@color/black"
---            android:textSize="14sp"
---            android:textStyle="bold"/>
--+            <RelativeLayout
--+                android:layout_width="match_parent"
--+                android:layout_height="wrap_content"
--+                android:layout_marginRight="60dp"
--+                android:layout_marginBottom="5dp">
--+
--+                <TextView
--+                    android:id="@+id/comment_username"
--+                    android:layout_width="wrap_content"
--+                    android:layout_height="wrap_content"
--+                    android:layout_marginLeft="15dp"
--+                    android:text="naman"
--+                    android:textColor="@color/black"
--+                    android:textSize="14sp"
--+                    android:textStyle="bold" />
-- 
---        <TextView
---            android:layout_width="wrap_content"
---            android:layout_height="wrap_content"
---            android:text="this is a comment"
---            android:layout_marginLeft="15dp"
---            android:textColor="@color/black"
---            android:textSize="14sp"
---            android:layout_below="@+id/comment_username"
---            android:id="@+id/addcomment"/>
--+                <TextView
--+                    android:id="@+id/addcomment"
--+                    android:layout_width="wrap_content"
--+                    android:layout_height="wrap_content"
--+                    android:layout_below="@+id/comment_username"
--+                    android:layout_marginLeft="15dp"
--+                    android:text="this is a comment"
--+                    android:textColor="@color/black"
--+                    android:textSize="14sp" />
-- 
---        <TextView
---            android:layout_width="wrap_content"
---            android:layout_height="wrap_content"
---            android:text="3 D"
---            android:layout_marginLeft="15dp"
---            android:textColor="@color/grey"
---            android:id="@+id/comment_time_posted"
---            android:layout_below="@+id/addcomment"
---            android:textSize="10sp"
---            android:layout_marginTop="5dp"/>
---
---
--+                <TextView
--+                    android:id="@+id/comment_time_posted"
--+                    android:layout_width="wrap_content"
--+                    android:layout_height="wrap_content"
--+                    android:layout_below="@+id/addcomment"
--+                    android:layout_marginLeft="15dp"
--+                    android:layout_marginTop="5dp"
--+                    android:text="3 D"
--+                    android:textColor="@color/grey"
--+                    android:textSize="10sp" />
-- 
-- 
---    </RelativeLayout>
--+            </RelativeLayout>
-- 
--+            <ImageButton
--+                android:id="@+id/edit"
--+                android:layout_width="wrap_content"
--+                android:layout_height="50dp"
--+                android:layout_alignParentEnd="true"
--+                android:layout_centerVertical="true"
--+                android:src="@drawable/ic_eclipse"
--+                android:background="@color/white" />
-- 
---    </RelativeLayout>
--+        </RelativeLayout>
-- 
--+        <de.hdodenhof.circleimageview.CircleImageView
--+            android:id="@+id/commet_profile_image"
--+            android:layout_width="30dp"
--+            android:layout_height="30dp"
--+            android:layout_marginLeft="5dp"
--+            android:layout_marginTop="5dp"
--+            app:civ_border_color="@color/black"
--+            app:civ_border_width="0.5dp" />
--+
--     </RelativeLayout>
-- 
-- </androidx.cardview.widget.CardView>
--\ No newline at end of file
--Index: .idea/compiler.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- .idea/compiler.xml	(date 1605447137911)
--+++ .idea/compiler.xml	(date 1605447137911)
--@@ -0,0 +1,6 @@
--+<?xml version="1.0" encoding="UTF-8"?>
--+<project version="4">
--+  <component name="CompilerConfiguration">
--+    <bytecodeTargetLevel target="1.8" />
--+  </component>
--+</project>
--\ No newline at end of file
--Index: app/src/main/java/com/orion/orion/CommentActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.orion.orion;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.Adapters.AdapterComment;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.util.FirebaseMethods;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.TimeZone;\r\n\r\npublic class CommentActivity extends AppCompatActivity {\r\n    RecyclerView commentRv;\r\n    private ArrayList<Comment> comments;\r\n    private static final String TAG = \"CommentActivity\";\r\n\r\n    private AdapterComment adapterComment;\r\n\r\n\r\n    private ImageView mBackArrow,mCheckMark;\r\n    private EditText mComment;\r\n    private boolean notify = false;\r\n    private  FirebaseMethods mFirebaseMethods;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_comment);\r\n\r\n        Intent i = getIntent();\r\n        String phhotoId = i.getStringExtra(\"photoId\");\r\n        String userId = i.getStringExtra(\"userId\");\r\n        Log.d(TAG, \"onCreate: kol\" + phhotoId + userId);\r\n\r\n        mBackArrow = findViewById(R.id.backarrow);\r\n        mCheckMark = findViewById(R.id.checkMark);\r\n        mComment = findViewById(R.id.comment);\r\n        mFirebaseMethods = new FirebaseMethods(CommentActivity.this);\r\n\r\n\r\n        commentRv = findViewById(R.id.recyclerComment);\r\n        commentRv.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);\r\n        commentRv.setItemViewCacheSize(9);\r\n        commentRv.setDrawingCacheEnabled(true);\r\n        commentRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n        linearLayoutManager.setItemPrefetchEnabled(true);\r\n        linearLayoutManager.setInitialPrefetchItemCount(20);\r\n        commentRv.setLayoutManager(linearLayoutManager);\r\n\r\n        comments=new ArrayList<>();\r\n        adapterComment = new AdapterComment(this,comments);\r\n        adapterComment.setHasStableIds(true);\r\n        commentRv.setAdapter(adapterComment);\r\n\r\n        getComments(phhotoId,userId);\r\n\r\n\r\n        mCheckMark.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (!mComment.getText().toString().equals(\"\")){\r\n                    Log.d(TAG,\"attempting to submit new comment\");\r\n                    notify = true;\r\n\r\n                    addNewComment(mComment.getText().toString(),userId,phhotoId);\r\n\r\n                    mComment.setText(\"\");\r\n\r\n                    closeKeyboard();\r\n                }else{\r\n                    Toast.makeText(CommentActivity.this, \"C'mon..Give a Shoutout\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        mBackArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"onClick: dfg\");\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n    private String getTimeStamp(){\r\n        SimpleDateFormat sdf  = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ENGLISH);\r\n        sdf.setTimeZone(TimeZone.getTimeZone(\"Asia/Kolkata\"));\r\n        return  sdf.format(new Date());\r\n    }\r\n    private void closeKeyboard(){\r\n        View view=this.getCurrentFocus();\r\n        if (view!=null) {\r\n            InputMethodManager imm = (InputMethodManager) this.getSystemService(Context.INPUT_METHOD_SERVICE);\r\n            imm.hideSoftInputFromWindow(view.getWindowToken(),0);\r\n        }\r\n\r\n    }\r\n\r\n    private void addNewComment(String newComment, String userId, String phhotoId){\r\n        Log.d(TAG,\"adding new comment\");\r\n\r\n        DatabaseReference myRef = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n        String commentID = myRef.push().getKey();\r\n\r\n        Comment comment = new Comment();\r\n        comment.setComment(newComment);\r\n        comment.setDate_created(getTimeStamp());\r\n        comment.setUser_id(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n        myRef.child(getString(R.string.dbname_user_photos))\r\n                .child(userId)\r\n                .child(phhotoId)\r\n                .child(getString(R.string.field_comment))\r\n                .child(commentID)\r\n                .setValue(comment);\r\n\r\n        final DatabaseReference data = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        data.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                users user = dataSnapshot.getValue(users.class);\r\n\r\n                if (notify) {\r\n                    mFirebaseMethods.sendNotification(userId, user.getUsername(), \"commented on your post\",\"Comment\");\r\n                }\r\n                notify = false;\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n        addToHisNotification(\"\"+userId,phhotoId,\"commented on your post\");\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    private void addToHisNotification(String hisUid,String pId,String notification){\r\n\r\n        String timestamp=\"\"+System.currentTimeMillis();\r\n\r\n\r\n//        data to put in notification\r\n        HashMap<Object,String> hashMap = new HashMap<>();\r\n        hashMap.put(\"pId\",pId);\r\n\r\n        hashMap.put(\"timeStamp\",timestamp);\r\n\r\n        hashMap.put(\"pUid\",hisUid);\r\n\r\n        hashMap.put(\"notificaton\",notification);\r\n        hashMap.put(\"seen\",\"false\");\r\n\r\n        hashMap.put(\"sUid\",FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"users\");\r\n        ref.child(hisUid).child(\"Notifications\").child(timestamp).setValue(hashMap)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n    private void getComments(String phhotoId, String userId) {\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_user_photos))\r\n                .child(userId)\r\n                .child(phhotoId)\r\n                .child(getString(R.string.field_comment))\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        comments.clear();\r\n                        for (DataSnapshot snapshot1:snapshot.getChildren()){\r\n\r\n                            Comment comment=snapshot1.getValue(Comment.class);\r\n                            Log.d(TAG, \"onDataChange: kil\"+comment.toString());\r\n                            comments.add(comment);\r\n\r\n                        }\r\n\r\n                        adapterComment.notifyDataSetChanged();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/orion/orion/CommentActivity.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
--+++ app/src/main/java/com/orion/orion/CommentActivity.java	(date 1605448974033)
--@@ -39,31 +39,21 @@
--     RecyclerView commentRv;
--     private ArrayList<Comment> comments;
--     private static final String TAG = "CommentActivity";
---
--     private AdapterComment adapterComment;
---
---
---    private ImageView mBackArrow,mCheckMark;
--     private EditText mComment;
--     private boolean notify = false;
---    private  FirebaseMethods mFirebaseMethods;
--+    private FirebaseMethods mFirebaseMethods;
-- 
--     @Override
--     protected void onCreate(Bundle savedInstanceState) {
--         super.onCreate(savedInstanceState);
--         setContentView(R.layout.activity_comment);
---
--         Intent i = getIntent();
---        String phhotoId = i.getStringExtra("photoId");
--+        String photoId = i.getStringExtra("photoId");
--         String userId = i.getStringExtra("userId");
---        Log.d(TAG, "onCreate: kol" + phhotoId + userId);
---
---        mBackArrow = findViewById(R.id.backarrow);
---        mCheckMark = findViewById(R.id.checkMark);
--+        Log.d(TAG, "onCreate: kol" + photoId + userId);
--         mComment = findViewById(R.id.comment);
--         mFirebaseMethods = new FirebaseMethods(CommentActivity.this);
---
---
--         commentRv = findViewById(R.id.recyclerComment);
--         commentRv.setHasFixedSize(true);
--         LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);
--@@ -73,157 +63,106 @@
--         linearLayoutManager.setItemPrefetchEnabled(true);
--         linearLayoutManager.setInitialPrefetchItemCount(20);
--         commentRv.setLayoutManager(linearLayoutManager);
---
---        comments=new ArrayList<>();
---        adapterComment = new AdapterComment(this,comments);
--+        comments = new ArrayList<>();
--+        adapterComment = new AdapterComment(this, comments);
--         adapterComment.setHasStableIds(true);
--         commentRv.setAdapter(adapterComment);
---
---        getComments(phhotoId,userId);
---
---
---        mCheckMark.setOnClickListener(new View.OnClickListener() {
---            @Override
---            public void onClick(View v) {
---                if (!mComment.getText().toString().equals("")){
---                    Log.d(TAG,"attempting to submit new comment");
---                    notify = true;
---
---                    addNewComment(mComment.getText().toString(),userId,phhotoId);
---
---                    mComment.setText("");
---
---                    closeKeyboard();
---                }else{
---                    Toast.makeText(CommentActivity.this, "C'mon..Give a Shoutout", Toast.LENGTH_SHORT).show();
---                }
---
---            }
--+        getComments(photoId, userId);
--+        ImageView mCheckMark = findViewById(R.id.checkMark);
--+        mCheckMark.setOnClickListener(v -> {
--+            if (!mComment.getText().toString().equals("")) {
--+                Log.d(TAG, "attempting to submit new comment");
--+                notify = true;
--+                addNewComment(mComment.getText().toString(), userId, photoId);
--+                mComment.setText("");
--+                closeKeyboard();
--+            } else
--+                Toast.makeText(CommentActivity.this, "C'mon..Give a Shoutout", Toast.LENGTH_SHORT).show();
--         });
--+        ImageView mBackArrow = findViewById(R.id.backarrow);
--+        mBackArrow.setOnClickListener(v -> finish());
--+    }
-- 
---        mBackArrow.setOnClickListener(new View.OnClickListener() {
---            @Override
---            public void onClick(View v) {
---                Log.d(TAG, "onClick: dfg");
---                finish();
---            }
---        });
---    }
---    private String getTimeStamp(){
---        SimpleDateFormat sdf  = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", Locale.ENGLISH);
--+    private String getTimeStamp() {
--+        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'", Locale.ENGLISH);
--         sdf.setTimeZone(TimeZone.getTimeZone("Asia/Kolkata"));
---        return  sdf.format(new Date());
--+        return sdf.format(new Date());
--     }
---    private void closeKeyboard(){
---        View view=this.getCurrentFocus();
---        if (view!=null) {
--+
--+    private void closeKeyboard() {
--+        View view = this.getCurrentFocus();
--+        if (view != null) {
--             InputMethodManager imm = (InputMethodManager) this.getSystemService(Context.INPUT_METHOD_SERVICE);
---            imm.hideSoftInputFromWindow(view.getWindowToken(),0);
--+            imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
--         }
---
--     }
-- 
---    private void addNewComment(String newComment, String userId, String phhotoId){
---        Log.d(TAG,"adding new comment");
---
--+    private void addNewComment(String newComment, String userId, String photoId) {
--+        Log.d(TAG, "adding new comment");
--         DatabaseReference myRef = FirebaseDatabase.getInstance().getReference();
---
---
--         String commentID = myRef.push().getKey();
---
--         Comment comment = new Comment();
--         comment.setComment(newComment);
--         comment.setDate_created(getTimeStamp());
--         comment.setUser_id(FirebaseAuth.getInstance().getCurrentUser().getUid());
---
---
--         myRef.child(getString(R.string.dbname_user_photos))
--                 .child(userId)
---                .child(phhotoId)
--+                .child(photoId)
--                 .child(getString(R.string.field_comment))
--                 .child(commentID)
--                 .setValue(comment);
---
--         final DatabaseReference data = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users))
--                 .child(FirebaseAuth.getInstance().getCurrentUser().getUid());
--         data.addValueEventListener(new ValueEventListener() {
--             @Override
--             public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
--                 users user = dataSnapshot.getValue(users.class);
---
---                if (notify) {
---                    mFirebaseMethods.sendNotification(userId, user.getUsername(), "commented on your post","Comment");
---                }
--+                if (notify)
--+                    mFirebaseMethods.sendNotification(userId, user.getUsername(), "commented on your post", "Comment");
--                 notify = false;
---
--             }
-- 
--             @Override
--             public void onCancelled(@NonNull DatabaseError databaseError) {
---
--             }
--         });
---
---        addToHisNotification(""+userId,phhotoId,"commented on your post");
---
---
---
---
---
--+        addToHisNotification("" + userId, photoId, "commented on your post");
--     }
---    private void addToHisNotification(String hisUid,String pId,String notification){
---
---        String timestamp=""+System.currentTimeMillis();
---
---
--+
--+    private void addToHisNotification(String hisUid, String pId, String notification) {
--+        String timestamp = "" + System.currentTimeMillis();
-- //        data to put in notification
---        HashMap<Object,String> hashMap = new HashMap<>();
---        hashMap.put("pId",pId);
---
---        hashMap.put("timeStamp",timestamp);
---
---        hashMap.put("pUid",hisUid);
---
---        hashMap.put("notificaton",notification);
---        hashMap.put("seen","false");
---
---        hashMap.put("sUid",FirebaseAuth.getInstance().getCurrentUser().getUid());
---
---
---
--+        HashMap<Object, String> hashMap = new HashMap<>();
--+        hashMap.put("pId", pId);
--+        hashMap.put("timeStamp", timestamp);
--+        hashMap.put("pUid", hisUid);
--+        hashMap.put("notificaton", notification);
--+        hashMap.put("seen", "false");
--+        hashMap.put("sUid", FirebaseAuth.getInstance().getCurrentUser().getUid());
--         DatabaseReference ref = FirebaseDatabase.getInstance().getReference("users");
--         ref.child(hisUid).child("Notifications").child(timestamp).setValue(hashMap)
---                .addOnSuccessListener(new OnSuccessListener<Void>() {
---                    @Override
---                    public void onSuccess(Void aVoid) {
--+                .addOnSuccessListener(aVoid -> {
-- 
---                    }
---                }).addOnFailureListener(new OnFailureListener() {
---            @Override
---            public void onFailure(@NonNull Exception e) {
--+                }).addOnFailureListener(e -> {
-- 
---            }
--         });
---
--     }
---    private void getComments(String phhotoId, String userId) {
--+
--+    private void getComments(String photoId, String userId) {
--         DatabaseReference db = FirebaseDatabase.getInstance().getReference();
--         db.child(getString(R.string.dbname_user_photos))
--                 .child(userId)
---                .child(phhotoId)
--+                .child(photoId)
--                 .child(getString(R.string.field_comment))
--                 .addValueEventListener(new ValueEventListener() {
--                     @Override
--                     public void onDataChange(@NonNull DataSnapshot snapshot) {
--                         comments.clear();
---                        for (DataSnapshot snapshot1:snapshot.getChildren()){
---
---                            Comment comment=snapshot1.getValue(Comment.class);
---                            Log.d(TAG, "onDataChange: kil"+comment.toString());
--+                        for (DataSnapshot snapshot1 : snapshot.getChildren()) {
--+                            Comment comment = snapshot1.getValue(Comment.class);
--+                            Log.d(TAG, "onDataChange: kil" + comment.toString());
--                             comments.add(comment);
---
--                         }
---
--                         adapterComment.notifyDataSetChanged();
--                     }
-- 
--@@ -232,7 +171,5 @@
-- 
--                     }
--                 });
---
---
--     }
---}
--+}
--\ No newline at end of file
--Index: build.gradle
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:4.0.2'\r\n        classpath 'com.google.gms:google-services:4.3.3'\r\n        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.2.0'\r\n        classpath 'com.google.firebase:perf-plugin:1.3.1'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url \"https://jitpack.io\" }\r\n        maven { url \"https://maven.google.com\" }\r\n        \r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- build.gradle	(revision f663a29a8d1c8290d711089b217f1d140de116de)
--+++ build.gradle	(date 1605447145790)
--@@ -7,7 +7,7 @@
--         
--     }
--     dependencies {
---        classpath 'com.android.tools.build:gradle:4.0.2'
--+        classpath 'com.android.tools.build:gradle:4.1.1'
--         classpath 'com.google.gms:google-services:4.3.3'
--         classpath 'com.google.firebase:firebase-crashlytics-gradle:2.2.0'
--         classpath 'com.google.firebase:perf-plugin:1.3.1'
--Index: app/src/main/java/com/orion/orion/home/MainActivity.java
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.orion.orion.home;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\n\r\n\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.iid.FirebaseInstanceId;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.Notifications.Token;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.login.login;\r\nimport com.orion.orion.models.Chat;\r\nimport com.orion.orion.util.BottomNaavigationViewHelper;\r\nimport com.orion.orion.Adapters.SectionPagerAdapter;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class MainActivity extends AppCompatActivity\r\n        {\r\n\r\n\r\n    private static final String TAG = \"MainActivity\";\r\n    private static final int HOME_FRAGMENT = 1;\r\n            public TabLayout tablayout;\r\n    private static final int ACTIVITY_NUM = 0;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private ViewPager mViewPager;\r\n    private FrameLayout mFramelayoutl;\r\n    private RelativeLayout mRelativeLayout;\r\n    LinearLayout prom;\r\n    Context context=MainActivity.this;\r\n    String mUid;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        Log.d(TAG, \"onCreate:starting.\");\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mViewPager = (ViewPager) findViewById(R.id.viewpager_container);\r\n        mFramelayoutl = (FrameLayout) findViewById(R.id.container);\r\n        mRelativeLayout = (RelativeLayout) findViewById(R.id.relLayoutParent);\r\n\r\n\r\n        setupBottomNavigationView();\r\n        checkCurrentuser(mAuth.getCurrentUser());\r\n        setupFirebaseAuth();\r\n\r\n        setupViewPager();\r\n\r\n\r\n//        update Token\r\n        updateToken(FirebaseInstanceId.getInstance().getToken());\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        checkCurrentuser(mAuth.getCurrentUser());\r\n        super.onResume();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //    *********************FIREBASE***************************\r\n    private void checkCurrentuser(FirebaseUser user) {\r\n        Log.d(TAG, \"checkCurrentuser:check if current user logged in\");\r\n        if (user == null) {\r\n            Intent intent = new Intent(MainActivity.this, login.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n\r\n    }\r\n\r\n            public void updateToken(String token) {\r\n\r\n                try {\r\n\r\n\r\n                    DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"Tokens\");\r\n                    Token mToken = new Token(token);\r\n                    ref.child(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid()).setValue(mToken);\r\n                }catch (NullPointerException e){\r\n                    Log.e(TAG, \"updateToken: \"+e.getMessage() );\r\n                }\r\n\r\n            }\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        mAuthListener = new FirebaseAuth.AuthStateListener() {\r\n            @Override\r\n            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\r\n                FirebaseUser user = firebaseAuth.getCurrentUser();\r\n                checkCurrentuser(user);\r\n                if (user != null) {\r\n\r\n                    Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n                } else {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                    Intent intent = new Intent(MainActivity.this, login.class);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n        mViewPager.setCurrentItem(HOME_FRAGMENT);\r\n        checkCurrentuser(mAuth.getCurrentUser());\r\n\r\n\r\n    }\r\n\r\n            @Override\r\n            public void onDestroy() {\r\n                super.onDestroy();\r\n            }\r\n\r\n            @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n\r\n    //   ************************FIREBASE****************************\r\n\r\n\r\n    //    for adding 3 tabs -media,home,message\r\n    private void setupViewPager() {\r\n        SectionPagerAdapter adapter = new SectionPagerAdapter(getSupportFragmentManager());\r\n        adapter.addFragment(new notificationFragment());\r\n        adapter.addFragment(new Homefragment());\r\n        adapter.addFragment(new messagesfragment());\r\n\r\n        mViewPager.setAdapter(adapter);\r\n\r\n        tablayout = (TabLayout) findViewById(R.id.tabs);\r\n        tablayout.setupWithViewPager(mViewPager);\r\n//        for giving icon to them\r\n        tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);\r\n        tablayout.getTabAt(1).setText(\"ORION\");\r\n        tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);\r\n\r\n\r\n\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(\"Notifications\").orderByKey().limitToLast(1)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n\r\n                                if (snapshot1.child(\"seen\").getValue().equals(\"true\")) {\r\n\r\n                                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);\r\n\r\n                                }\r\n                                if (snapshot1.child(\"seen\").getValue().equals(\"false\")) {\r\n                                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_red);\r\n                                    break;\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n        checkMessageSeen(context);\r\n\r\n\r\n        tablayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n\r\n                if (tablayout.getSelectedTabPosition() == 0) {\r\n\r\n\r\n                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);\r\n\r\n\r\n                    DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                    db.child(getString(R.string.dbname_users))\r\n                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                            .child(\"Notifications\")\r\n                            .orderByChild(\"seen\")\r\n                            .equalTo(\"false\")\r\n                            .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                    if (snapshot.exists()) {\r\n                                        for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                            if (tablayout.getSelectedTabPosition() == 0) {\r\n                                                db.child(getString(R.string.dbname_users))\r\n                                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                        .child(\"Notifications\")\r\n                                                        .child(snapshot1.getKey())\r\n                                                        .child(\"seen\")\r\n                                                        .setValue(\"true\");\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                }\r\n                            });\r\n                }\r\n                if (tablayout.getSelectedTabPosition()==2){\r\n                    checkMessageSeen(context);\r\n                }\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n                tablayout.removeOnTabSelectedListener(this);\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n            public void checkMessageSeen(Context context) {\r\n\r\n                DatabaseReference refer = FirebaseDatabase.getInstance().getReference();\r\n                Query query = refer.child(context.getString(R.string.dbname_Chats))\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n                query.addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                        final long[] x = {0};\r\n                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n\r\n\r\n                            refer.child(context.getString(R.string.dbname_ChatList))\r\n                                    .child(dataSnapshot.getValue().toString())\r\n                                    .orderByKey()\r\n                                    .limitToLast(1)\r\n                                    .addValueEventListener(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot1) {\r\n\r\n\r\n                                            for (DataSnapshot ds : snapshot1.getChildren()) {\r\n\r\n                                                if (ds.exists()) {\r\n\r\n                                                    Chat chat = ds.getValue(Chat.class);\r\n                                                    if (!chat.isIfseen()&&chat.getReceiver().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                                                        tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_red);\r\n                                                        x[0]++;\r\n                                                    }\r\n\r\n                                                }\r\n\r\n\r\n                                            }\r\n\r\n                                        }\r\n\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                                        }\r\n                                    });\r\n\r\n                            if (x[0]>0){\r\n\r\n                                break;\r\n                            }else{\r\n                                tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);\r\n\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            public void hideLayout() {\r\n        mRelativeLayout.setVisibility(View.GONE);\r\n        mFramelayoutl.setVisibility(View.VISIBLE);\r\n\r\n    }\r\n\r\n    public void showLayout() {\r\n        mRelativeLayout.setVisibility(View.VISIBLE);\r\n        mFramelayoutl.setVisibility(View.GONE);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n        if (mFramelayoutl.getVisibility() == View.VISIBLE) {\r\n            showLayout();\r\n        }\r\n    }\r\n\r\n    private void setupBottomNavigationView() {\r\n        Log.d(TAG, \" setupBottomNavigationView:setting up BottomNavigationView\");\r\n        BottomNavigationViewEx bottomNavigationViewEx = (BottomNavigationViewEx) findViewById(R.id.BottomNavViewBar);\r\n        BottomNaavigationViewHelper.setupBottomNavigationView(bottomNavigationViewEx);\r\n        BottomNaavigationViewHelper.enableNavigation(MainActivity.this, this, bottomNavigationViewEx);\r\n\r\n        Menu menu = bottomNavigationViewEx.getMenu();\r\n        MenuItem menuItem = menu.getItem(ACTIVITY_NUM);\r\n        menuItem.setChecked(true);\r\n    }\r\n\r\n\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/java/com/orion/orion/home/MainActivity.java	(revision f663a29a8d1c8290d711089b217f1d140de116de)
--+++ app/src/main/java/com/orion/orion/home/MainActivity.java	(date 1605448404813)
--@@ -2,10 +2,13 @@
-- 
-- import androidx.annotation.NonNull;
-- import androidx.appcompat.app.AppCompatActivity;
--+import androidx.preference.PreferenceManager;
-- import androidx.viewpager.widget.ViewPager;
-- 
-- import android.content.Context;
-- import android.content.Intent;
--+import android.content.IntentSender;
--+import android.content.SharedPreferences;
-- import android.os.Bundle;
-- import android.util.Log;
-- import android.view.Menu;
--@@ -16,7 +19,17 @@
-- import android.widget.RelativeLayout;
-- 
-- 
--+import com.google.android.material.snackbar.Snackbar;
-- import com.google.android.material.tabs.TabLayout;
--+import com.google.android.play.core.appupdate.AppUpdateInfo;
--+import com.google.android.play.core.appupdate.AppUpdateManager;
--+import com.google.android.play.core.appupdate.AppUpdateManagerFactory;
--+import com.google.android.play.core.install.InstallState;
--+import com.google.android.play.core.install.InstallStateUpdatedListener;
--+import com.google.android.play.core.install.model.AppUpdateType;
--+import com.google.android.play.core.install.model.InstallStatus;
--+import com.google.android.play.core.install.model.UpdateAvailability;
--+import com.google.android.play.core.tasks.Task;
-- import com.google.firebase.auth.FirebaseAuth;
-- import com.google.firebase.auth.FirebaseUser;
-- import com.google.firebase.database.DataSnapshot;
--@@ -36,101 +49,211 @@
-- 
-- import java.util.Objects;
-- 
---public class MainActivity extends AppCompatActivity
---        {
---
--+public class MainActivity extends AppCompatActivity {
-- 
--     private static final String TAG = "MainActivity";
--+    private static final int ACTIVITY_NUM = 0;
--     private static final int HOME_FRAGMENT = 1;
---            public TabLayout tablayout;
---    private static final int ACTIVITY_NUM = 0;
--+    private Context mContext;
--+
--+    public TabLayout tablayout;
--     private FirebaseAuth mAuth;
--     private FirebaseAuth.AuthStateListener mAuthListener;
--     private ViewPager mViewPager;
--     private FrameLayout mFramelayoutl;
--     private RelativeLayout mRelativeLayout;
---    LinearLayout prom;
---    Context context=MainActivity.this;
---    String mUid;
--+    private static final int REQ_CODE_VERSION_UPDATE = 530;
--+    private AppUpdateManager appUpdateManager;
--+    private InstallStateUpdatedListener installStateUpdatedListener;
-- 
--     @Override
--     protected void onCreate(Bundle savedInstanceState) {
--         super.onCreate(savedInstanceState);
--         setContentView(R.layout.activity_main);
---
--+        mContext = MainActivity.this;
--         Log.d(TAG, "onCreate:starting.");
--         mAuth = FirebaseAuth.getInstance();
---        mViewPager = (ViewPager) findViewById(R.id.viewpager_container);
---        mFramelayoutl = (FrameLayout) findViewById(R.id.container);
---        mRelativeLayout = (RelativeLayout) findViewById(R.id.relLayoutParent);
--+        mViewPager = findViewById(R.id.viewpager_container);
--+        mFramelayoutl = findViewById(R.id.container);
--+        mRelativeLayout = findViewById(R.id.relLayoutParent);
-- 
---
--+        checkForAppUpdate();
--         setupBottomNavigationView();
--         checkCurrentuser(mAuth.getCurrentUser());
--         setupFirebaseAuth();
---
--         setupViewPager();
---
---
---//        update Token
--         updateToken(FirebaseInstanceId.getInstance().getToken());
--     }
-- 
---    @Override
---    protected void onResume() {
---        checkCurrentuser(mAuth.getCurrentUser());
---        super.onResume();
---    }
---
---
---
---
---
---    //    *********************FIREBASE***************************
--     private void checkCurrentuser(FirebaseUser user) {
--         Log.d(TAG, "checkCurrentuser:check if current user logged in");
--         if (user == null) {
--             Intent intent = new Intent(MainActivity.this, login.class);
--             startActivity(intent);
--         }
---
---
--     }
-- 
---            public void updateToken(String token) {
---
---                try {
---
---
---                    DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Tokens");
---                    Token mToken = new Token(token);
---                    ref.child(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid()).setValue(mToken);
---                }catch (NullPointerException e){
---                    Log.e(TAG, "updateToken: "+e.getMessage() );
---                }
---
---            }
--+    public void updateToken(String token) {
--+        try {
--+            DatabaseReference ref = FirebaseDatabase.getInstance().getReference("Tokens");
--+            Token mToken = new Token(token);
--+            ref.child(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid()).setValue(mToken);
--+        } catch (NullPointerException e) {
--+            Log.e(TAG, "updateToken: " + e.getMessage());
--+        }
--+    }
-- 
--     private void setupFirebaseAuth() {
--         Log.d(TAG, "setup FirebaseAuth: setting up firebase auth.");
---
--         mAuth = FirebaseAuth.getInstance();
---
---        mAuthListener = new FirebaseAuth.AuthStateListener() {
---            @Override
---            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {
---                FirebaseUser user = firebaseAuth.getCurrentUser();
---                checkCurrentuser(user);
---                if (user != null) {
---
---                    Log.d(TAG, "onAuthStateChanged:signed in:" + user.getUid());
---                } else {
---                    Log.d(TAG, "onAuthStateChanged:signed_out");
---                    Intent intent = new Intent(MainActivity.this, login.class);
---                    startActivity(intent);
---                }
--+        mAuthListener = firebaseAuth -> {
--+            FirebaseUser user = firebaseAuth.getCurrentUser();
--+            checkCurrentuser(user);
--+            if (user != null) {
--+                Log.d(TAG, "onAuthStateChanged:signed in:" + user.getUid());
--+            } else {
--+                Log.d(TAG, "onAuthStateChanged:signed_out");
--+                SharedPreferences settings = getSharedPreferences("shared preferences", Context.MODE_PRIVATE);
--+                settings.edit().clear().apply();
--+                PreferenceManager.getDefaultSharedPreferences(getBaseContext()).edit().clear().apply();
--+                Intent intent = new Intent(mContext, login.class);
--+                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
--+                mAuth.signOut();
--+                startActivity(intent);
--+            }
--+        };
--+    }
--+
--+    private void checkForAppUpdate() {
--+        // Creates instance of the manager.
--+        appUpdateManager = AppUpdateManagerFactory.create(mContext);
--+
--+        // Returns an intent object that you use to check for an update.
--+        Task<AppUpdateInfo> appUpdateInfoTask = appUpdateManager.getAppUpdateInfo();
--+
--+        // Create a listener to track request state updates.
--+        installStateUpdatedListener = new InstallStateUpdatedListener() {
--+            @Override
--+            public void onStateUpdate(InstallState installState) {
--+                // Show module progress, log state, or install the update.
--+                if (installState.installStatus() == InstallStatus.DOWNLOADED)
--+                    // After the update is downloaded, show a notification
--+                    // and request user confirmation to restart the app.
--+                    popupSnackbarForCompleteUpdateAndUnregister();
--             }
--         };
--+
--+        // Checks that the platform will allow the specified type of update.
--+        appUpdateInfoTask.addOnSuccessListener(appUpdateInfo -> {
--+            if (appUpdateInfo.updateAvailability() == UpdateAvailability.UPDATE_AVAILABLE) {
--+                // Request the update.
--+                if (appUpdateInfo.isUpdateTypeAllowed(AppUpdateType.FLEXIBLE)) {
--+
--+                    // Before starting an update, register a listener for updates.
--+                    appUpdateManager.registerListener(installStateUpdatedListener);
--+                    // Start an update.
--+                    startAppUpdateFlexible(appUpdateInfo);
--+                } else if (appUpdateInfo.isUpdateTypeAllowed(AppUpdateType.IMMEDIATE)) {
--+                    // Start an update.
--+                    startAppUpdateImmediate(appUpdateInfo);
--+                }
--+            }
--+        });
--+    }
--+
--+    private void startAppUpdateImmediate(AppUpdateInfo appUpdateInfo) {
--+        try {
--+            appUpdateManager.startUpdateFlowForResult(
--+                    appUpdateInfo,
--+                    AppUpdateType.IMMEDIATE,
--+                    // The current activity making the update request.
--+                    this,
--+                    // Include a request code to later monitor this update request.
--+                    MainActivity.REQ_CODE_VERSION_UPDATE);
--+        } catch (IntentSender.SendIntentException e) {
--+            e.printStackTrace();
--+        }
--+    }
--+
--+    private void startAppUpdateFlexible(AppUpdateInfo appUpdateInfo) {
--+        try {
--+            appUpdateManager.startUpdateFlowForResult(
--+                    appUpdateInfo,
--+                    AppUpdateType.FLEXIBLE,
--+                    // The current activity making the update request.
--+                    this,
--+                    // Include a request code to later monitor this update request.
--+                    MainActivity.REQ_CODE_VERSION_UPDATE);
--+        } catch (IntentSender.SendIntentException e) {
--+            e.printStackTrace();
--+            unregisterInstallStateUpdListener();
--+        }
--+    }
--+
--+    /**
--+     * Displays the snackbar notification and call to action.
--+     * Needed only for Flexible app update
--+     */
--+    private void popupSnackbarForCompleteUpdateAndUnregister() {
--+        Snackbar snackbar = Snackbar.make(findViewById(R.id.activity_main_layout), "An update has just been downloaded.", Snackbar.LENGTH_INDEFINITE);
--+        snackbar.setAction("RESTART", view -> appUpdateManager.completeUpdate());
--+        snackbar.setActionTextColor(getResources().getColor(R.color.scheme8));
--+        snackbar.show();
--+
--+        unregisterInstallStateUpdListener();
--+    }
--+
--+    /**
--+     * Checks that the update is not stalled during 'onResume()'.
--+     * However, you should execute this check at all app entry points.
--+     */
--+    private void checkNewAppVersionState() {
--+        appUpdateManager
--+                .getAppUpdateInfo()
--+                .addOnSuccessListener(
--+                        appUpdateInfo -> {
--+                            //FLEXIBLE:
--+                            // If the update is downloaded but not installed,
--+                            // notify the user to complete the update.
--+                            if (appUpdateInfo.installStatus() == InstallStatus.DOWNLOADED) {
--+                                popupSnackbarForCompleteUpdateAndUnregister();
--+                            }
--+
--+                            //IMMEDIATE:
--+                            if (appUpdateInfo.updateAvailability()
--+                                    == UpdateAvailability.DEVELOPER_TRIGGERED_UPDATE_IN_PROGRESS) {
--+                                // If an in-app update is already running, resume the update.
--+                                startAppUpdateImmediate(appUpdateInfo);
--+                            }
--+                        });
--+
--+    }
--+
--+    /**
--+     * Needed only for FLEXIBLE update
--+     */
--+    private void unregisterInstallStateUpdListener() {
--+        if (appUpdateManager != null && installStateUpdatedListener != null)
--+            appUpdateManager.unregisterListener(installStateUpdatedListener);
--+    }
--+
--+    @Override
--+    public void onActivityResult(int requestCode, final int resultCode, Intent intent) {
--+        super.onActivityResult(requestCode, resultCode, intent);
--+        if (requestCode == REQ_CODE_VERSION_UPDATE && resultCode != RESULT_OK) {
--+            //RESULT_OK / RESULT_CANCELED / RESULT_IN_APP_UPDATE_FAILED
--+            Log.d(TAG, "Update flow failed! Result code: " + resultCode);
--+            // If the update is cancelled or fails,
--+            // you can request to start the update again.
--+            unregisterInstallStateUpdListener();
--+        }
--+    }
--+
--+    @Override
--+    protected void onResume() {
--+        checkCurrentuser(mAuth.getCurrentUser());
--+        checkNewAppVersionState();
--+        super.onResume();
--     }
-- 
--     @Override
--@@ -139,16 +262,15 @@
--         mAuth.addAuthStateListener(mAuthListener);
--         mViewPager.setCurrentItem(HOME_FRAGMENT);
--         checkCurrentuser(mAuth.getCurrentUser());
---
---
--     }
-- 
---            @Override
---            public void onDestroy() {
---                super.onDestroy();
---            }
--+    @Override
--+    public void onDestroy() {
--+        unregisterInstallStateUpdListener();
--+        super.onDestroy();
--+    }
-- 
---            @Override
--+    @Override
--     public void onStop() {
--         super.onStop();
--         if (mAuthListener != null) {
--@@ -165,42 +287,30 @@
--         adapter.addFragment(new notificationFragment());
--         adapter.addFragment(new Homefragment());
--         adapter.addFragment(new messagesfragment());
---
--         mViewPager.setAdapter(adapter);
---
--         tablayout = (TabLayout) findViewById(R.id.tabs);
--         tablayout.setupWithViewPager(mViewPager);
---//        for giving icon to them
--         tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
--         tablayout.getTabAt(1).setText("ORION");
--         tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);
---
---
---
--         DatabaseReference db = FirebaseDatabase.getInstance().getReference();
---        db.child(getString(R.string.dbname_users))
---                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
---                .child("Notifications").orderByKey().limitToLast(1)
--+        db.child(getString(R.string.dbname_users)).child(mAuth.getCurrentUser().getUid())
--+                .child("Notifications")
--+                .orderByKey()
--+                .limitToLast(1)
--                 .addValueEventListener(new ValueEventListener() {
--                     @Override
--                     public void onDataChange(@NonNull DataSnapshot snapshot) {
--                         if (snapshot.exists()) {
--                             for (DataSnapshot snapshot1 : snapshot.getChildren()) {
---
---                                if (snapshot1.child("seen").getValue().equals("true")) {
---
---                                    tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
---
---                                }
--+                                if (snapshot1.child("seen").getValue().equals("true")) tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
--                                 if (snapshot1.child("seen").getValue().equals("false")) {
--                                     tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_red);
--                                     break;
--                                 }
---
--                             }
--                         }
--                     }
---
-- 
--                     @Override
--                     public void onCancelled(@NonNull DatabaseError error) {
--@@ -208,19 +318,12 @@
--                     }
--                 });
-- 
---        checkMessageSeen(context);
---
---
--+        checkMessageSeen(mContext);
--         tablayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
--             @Override
--             public void onTabSelected(TabLayout.Tab tab) {
---
--                 if (tablayout.getSelectedTabPosition() == 0) {
---
---
--                     tablayout.getTabAt(0).setIcon(R.drawable.ic_bell_black);
---
---
--                     DatabaseReference db = FirebaseDatabase.getInstance().getReference();
--                     db.child(getString(R.string.dbname_users))
--                             .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
--@@ -250,95 +353,66 @@
--                                 }
--                             });
--                 }
---                if (tablayout.getSelectedTabPosition()==2){
---                    checkMessageSeen(context);
---                }
--+                if (tablayout.getSelectedTabPosition() == 2) checkMessageSeen(mContext);
--             }
---
-- 
--             @Override
--             public void onTabUnselected(TabLayout.Tab tab) {
---
---
--             }
-- 
--             @Override
--             public void onTabReselected(TabLayout.Tab tab) {
--                 tablayout.removeOnTabSelectedListener(this);
---
--             }
--         });
---
---
--     }
-- 
---            public void checkMessageSeen(Context context) {
---
---                DatabaseReference refer = FirebaseDatabase.getInstance().getReference();
---                Query query = refer.child(context.getString(R.string.dbname_Chats))
---                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid());
---
---                query.addValueEventListener(new ValueEventListener() {
---                    @Override
---                    public void onDataChange(@NonNull DataSnapshot snapshot) {
---
---                        final long[] x = {0};
---                        for (DataSnapshot dataSnapshot : snapshot.getChildren()) {
---
---
---                            refer.child(context.getString(R.string.dbname_ChatList))
---                                    .child(dataSnapshot.getValue().toString())
---                                    .orderByKey()
---                                    .limitToLast(1)
---                                    .addValueEventListener(new ValueEventListener() {
---                                        @Override
---                                        public void onDataChange(@NonNull DataSnapshot snapshot1) {
---
---
---                                            for (DataSnapshot ds : snapshot1.getChildren()) {
---
---                                                if (ds.exists()) {
---
---                                                    Chat chat = ds.getValue(Chat.class);
---                                                    if (!chat.isIfseen()&&chat.getReceiver().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {
---                                                        tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_red);
---                                                        x[0]++;
---                                                    }
---
---                                                }
---
---
---                                            }
---
---                                        }
---
--+    public void checkMessageSeen(Context context) {
--+        DatabaseReference refer = FirebaseDatabase.getInstance().getReference();
--+        Query query = refer.child(context.getString(R.string.dbname_Chats))
--+                .child(mAuth.getCurrentUser().getUid());
--+        query.addValueEventListener(new ValueEventListener() {
--+            @Override
--+            public void onDataChange(@NonNull DataSnapshot snapshot) {
--+                final long[] x = {0};
--+                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {
--+                    refer.child(context.getString(R.string.dbname_ChatList))
--+                            .child(dataSnapshot.getValue().toString())
--+                            .orderByKey()
--+                            .limitToLast(1)
--+                            .addValueEventListener(new ValueEventListener() {
--+                                @Override
--+                                public void onDataChange(@NonNull DataSnapshot snapshot1) {
--+                                    for (DataSnapshot ds : snapshot1.getChildren()) {
--+                                        if (ds.exists()) {
--+                                            Chat chat = ds.getValue(Chat.class);
--+                                            if (!chat.isIfseen() && chat.getReceiver().equals(mAuth.getCurrentUser().getUid())) {
--+                                                tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_red);
--+                                                x[0]++;
--+                                            }
--+                                        }
--+                                    }
--+                                }
-- 
---                                        @Override
---                                        public void onCancelled(@NonNull DatabaseError databaseError) {
--+                                @Override
--+                                public void onCancelled(@NonNull DatabaseError databaseError) {
-- 
---                                        }
---                                    });
--+                                }
--+                            });
-- 
---                            if (x[0]>0){
---
---                                break;
---                            }else{
---                                tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);
---
---                            }
---
---                        }
---                    }
--+                    if (x[0] > 0) break;
--+                    else tablayout.getTabAt(2).setIcon(R.drawable.ic_chat_black);
--+                }
--+            }
-- 
---                    @Override
---                    public void onCancelled(@NonNull DatabaseError error) {
--+            @Override
--+            public void onCancelled(@NonNull DatabaseError error) {
-- 
---                    }
---                });
---
---            }
--+            }
--+        });
--+    }
-- 
---            public void hideLayout() {
--+    public void hideLayout() {
--         mRelativeLayout.setVisibility(View.GONE);
--         mFramelayoutl.setVisibility(View.VISIBLE);
-- 
--@@ -347,15 +421,12 @@
--     public void showLayout() {
--         mRelativeLayout.setVisibility(View.VISIBLE);
--         mFramelayoutl.setVisibility(View.GONE);
---
--     }
-- 
--     @Override
--     public void onBackPressed() {
--         super.onBackPressed();
---        if (mFramelayoutl.getVisibility() == View.VISIBLE) {
---            showLayout();
---        }
--+        if (mFramelayoutl.getVisibility() == View.VISIBLE) showLayout();
--     }
-- 
--     private void setupBottomNavigationView() {
--@@ -363,11 +434,8 @@
--         BottomNavigationViewEx bottomNavigationViewEx = (BottomNavigationViewEx) findViewById(R.id.BottomNavViewBar);
--         BottomNaavigationViewHelper.setupBottomNavigationView(bottomNavigationViewEx);
--         BottomNaavigationViewHelper.enableNavigation(MainActivity.this, this, bottomNavigationViewEx);
---
--         Menu menu = bottomNavigationViewEx.getMenu();
--         MenuItem menuItem = menu.getItem(ACTIVITY_NUM);
--         menuItem.setChecked(true);
--     }
---
---
---}
--+}
--\ No newline at end of file
--Index: .idea/misc.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n  <component name=\"SuppressABINotification\">\r\n    <option name=\"modulesWithSuppressedNotConfigured\">\r\n      <set>\r\n        <option value=\"app\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- .idea/misc.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
--+++ .idea/misc.xml	(date 1605447137889)
--@@ -1,6 +1,6 @@
-- <?xml version="1.0" encoding="UTF-8"?>
-- <project version="4">
---  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
--+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
--     <output url="file://$PROJECT_DIR$/build/classes" />
--   </component>
--   <component name="ProjectType">
--Index: app/src/main/res/menu/post_comment.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/src/main/res/menu/post_comment.xml	(date 1605450034567)
--+++ app/src/main/res/menu/post_comment.xml	(date 1605450034567)
--@@ -0,0 +1,6 @@
--+<?xml version="1.0" encoding="utf-8"?>
--+<menu xmlns:android="http://schemas.android.com/apk/res/android">
--+    <item
--+        android:id="@+id/one"
--+        android:title="Delete Comment" />
--+</menu>
--\ No newline at end of file
--Index: .idea/gradle.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- .idea/gradle.xml	(revision f663a29a8d1c8290d711089b217f1d140de116de)
--+++ .idea/gradle.xml	(date 1605447459756)
--@@ -5,6 +5,7 @@
--     <option name="linkedExternalProjectsSettings">
--       <GradleProjectSettings>
--         <option name="testRunner" value="PLATFORM" />
--+        <option name="disableWrapperSourceDistributionNotification" value="true" />
--         <option name="distributionType" value="DEFAULT_WRAPPED" />
--         <option name="externalProjectPath" value="$PROJECT_DIR$" />
--         <option name="gradleJvm" value="1.8" />
--@@ -15,6 +16,7 @@
--           </set>
--         </option>
--         <option name="resolveModulePerSourceSet" value="false" />
--+        <option name="useQualifiedModuleNames" value="true" />
--       </GradleProjectSettings>
--     </option>
--   </component>
--Index: gradle/wrapper/gradle-wrapper.properties
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>#Fri Jul 17 18:20:13 IST 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.1.1-all.zip\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>windows-1252
--===================================================================
----- gradle/wrapper/gradle-wrapper.properties	(revision f663a29a8d1c8290d711089b217f1d140de116de)
--+++ gradle/wrapper/gradle-wrapper.properties	(date 1605447145796)
--@@ -1,6 +1,6 @@
---#Fri Jul 17 18:20:13 IST 2020
--+#Sun Nov 15 19:02:25 IST 2020
-- distributionBase=GRADLE_USER_HOME
-- distributionPath=wrapper/dists
-- zipStoreBase=GRADLE_USER_HOME
-- zipStorePath=wrapper/dists
---distributionUrl=https\://services.gradle.org/distributions/gradle-6.1.1-all.zip
--+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
--Index: app/build.gradle
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\napply plugin: 'com.google.firebase.firebase-perf'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion '30.0.2'\r\n    defaultConfig {\r\n        applicationId \"com.orion.orion\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        multiDexEnabled true\r\n\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'\r\n    implementation 'com.google.firebase:firebase-auth:19.4.0'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    def multidex_version = \"2.0.1\"\r\n    implementation \"androidx.multidex:multidex:$multidex_version\"\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n\r\n    implementation 'com.github.judemanutd:autostarter:1.0.3'\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n\r\n    implementation 'com.google.firebase:firebase-database:19.5.0'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.0'\r\n    implementation 'com.google.firebase:firebase-messaging:20.3.0'\r\n    implementation 'com.google.firebase:firebase-firestore:21.7.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-crashlytics:17.1.1'\r\n    implementation 'com.google.firebase:firebase-analytics:17.4.4'\r\n    implementation 'com.google.firebase:firebase-perf:19.0.8'\r\n    testImplementation 'junit:junit:4.13.1'\r\n    androidTestImplementation 'androidx.test:runner:1.3.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.google.android.gms:play-services-location:17.1.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n    //animations\r\n    implementation 'com.daimajia.easing:library:2.4@aar'\r\n    implementation 'com.daimajia.androidanimations:library:2.4@aar'\r\n\r\n\r\n//exoplayer\r\n    implementation 'com.google.android.exoplayer:exoplayer:2.11.7'\r\n    implementation 'com.danikula:videocache:2.7.1'\r\n\r\n    //VideoCompressor + kotlin\r\n    implementation 'com.github.AbedElazizShe:LightCompressor:0.7.5'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'\r\n\r\n    implementation 'androidx.preference:preference:1.1.1'\r\n}\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
----- app/build.gradle	(revision f663a29a8d1c8290d711089b217f1d140de116de)
--+++ app/build.gradle	(date 1605447427332)
--@@ -79,4 +79,7 @@
--     implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
-- 
--     implementation 'androidx.preference:preference:1.1.1'
--+
--+    //    update
--+    implementation 'com.google.android.play:core:1.6.1'
-- }
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\napply plugin: 'com.google.firebase.firebase-perf'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion '30.0.2'\r\n    defaultConfig {\r\n        applicationId \"com.orion.orion\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        multiDexEnabled true\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        debug {\r\n            shrinkResources true\r\n            minifyEnabled true\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.1'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    def multidex_version = \"2.0.1\"\r\n    implementation \"androidx.multidex:multidex:$multidex_version\"\r\n\r\n\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n\r\n    implementation 'com.google.firebase:firebase-database:19.5.1'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.0'\r\n    implementation 'com.google.firebase:firebase-messaging:21.0.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'\r\n    implementation 'com.google.firebase:firebase-analytics:18.0.0'\r\n    implementation 'com.google.firebase:firebase-perf:19.0.10'\r\n    testImplementation 'junit:junit:4.13.1'\r\n    androidTestImplementation 'androidx.test:runner:1.3.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.google.android.gms:play-services-location:17.1.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n    //animations\r\n    implementation 'com.daimajia.easing:library:2.4@aar'\r\n    implementation 'com.daimajia.androidanimations:library:2.4@aar'\r\n\r\n\r\n    //exoplayer\r\n    implementation 'com.google.android.exoplayer:exoplayer:2.11.7'\r\n    implementation 'com.danikula:videocache:2.7.1'\r\n\r\n    //VideoCompressor + kotlin\r\n    implementation 'com.github.AbedElazizShe:LightCompressor:0.7.5'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'\r\n\r\n    implementation 'androidx.preference:preference:1.1.1'\r\n\r\n    //    update\r\n    implementation 'com.google.android.play:core:1.8.3'\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/build.gradle	(revision ced723bb6bee0ee929e704c5d6eed50b11c05c1f)
-+++ app/build.gradle	(date 1606027099016)
-@@ -17,6 +17,11 @@
-     }
-     buildTypes {
-         debug {
-+            shrinkResources false
-+            minifyEnabled false
-+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
-+        }
-+        release {
-             shrinkResources true
-             minifyEnabled true
-             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_18-11-2020_15_00__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_18-11-2020_15_00__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_20-11-2020_20_36__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_20-11-2020_20_36__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_18-11-2020_22_22__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_18-11-2020_22_22__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_16-11-2020_17_38__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_16-11-2020_17_38__Default_Changelist_.xml
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-11-2020_20_36__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_20-11-2020_20_36__Default_Changelist_.xml	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_20-11-2020_20_36__Default_Changelist_.xml	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_20-11-2020_20_36_[Default_Changelist]" date="1605884792691" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-11-2020_20_36_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 20-11-2020 20:36 [Default Changelist]" />
-  <binary>
-    <option name="BEFORE_PATH" value="app/src/main/res/drawable/orion_logo_png.png" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-11-2020_20_36_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_20-11-2020_20_36_[Default_Changelist]/shelved.patch	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_20-11-2020_20_36_[Default_Changelist]/shelved.patch	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
@@ -1,516 +0,0 @@
-Index: app/src/main/java/com/orion/orion/ViewPostActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.media.AudioManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.PopupMenu;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.VolleyLog;\r\nimport com.bumptech.glide.Glide;\r\nimport com.danikula.videocache.HttpProxyCacheServer;\r\nimport com.google.android.exoplayer2.DefaultLoadControl;\r\nimport com.google.android.exoplayer2.ExoPlaybackException;\r\nimport com.google.android.exoplayer2.ExoPlayerFactory;\r\nimport com.google.android.exoplayer2.LoadControl;\r\nimport com.google.android.exoplayer2.PlaybackParameters;\r\nimport com.google.android.exoplayer2.Player;\r\nimport com.google.android.exoplayer2.SimpleExoPlayer;\r\nimport com.google.android.exoplayer2.Timeline;\r\nimport com.google.android.exoplayer2.source.ExtractorMediaSource;\r\nimport com.google.android.exoplayer2.source.MediaSource;\r\nimport com.google.android.exoplayer2.source.TrackGroupArray;\r\nimport com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;\r\nimport com.google.android.exoplayer2.trackselection.DefaultTrackSelector;\r\nimport com.google.android.exoplayer2.trackselection.TrackSelectionArray;\r\nimport com.google.android.exoplayer2.trackselection.TrackSelector;\r\nimport com.google.android.exoplayer2.ui.PlayerView;\r\nimport com.google.android.exoplayer2.upstream.BandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DataSource;\r\nimport com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;\r\nimport com.google.android.exoplayer2.util.Util;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.Photo;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.profile;\r\nimport com.orion.orion.util.SNTPClient;\r\nimport com.orion.orion.util.SquareImageView;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.TimeZone;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport static android.view.View.GONE;\r\nimport static com.orion.orion.util.MyApplication.getProxy;\r\n\r\npublic class ViewPostActivity extends AppCompatActivity {\r\n    private static final String TAG = \"ViewPostFragment\";\r\n\r\n\r\n    //firebase\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private DatabaseReference myRef;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n    String currentUsername = \"\";\r\n\r\n    private Photo mphoto;\r\n    PlayerView playerView;\r\n    ProgressBar progressBar;\r\n    boolean play = true;\r\n    long currentPosition = 0;\r\n    SimpleExoPlayer simpleExoPlayer;\r\n\r\n    private final String mLikesString = \"\";\r\n    private String numberoflike = \"0\";\r\n    ArrayList<Comment> comments = new ArrayList<>();\r\n\r\n\r\n    private SquareImageView mPostImage, thumbnail, progress2;\r\n    private BottomNavigationViewEx bottomNavigationView;\r\n    private TextView mBackLabel, duration, mCaption, mUsername, mTimestamp, mLikes, mCommentnumber, mcredit, domain, promoteNum;\r\n    private ImageView mBackArrow, mEllipses, mStarYellow, mStarWhite, mProfileImage, mComment, promote, promoted, play2, mute, unmute;\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n    LinearLayout progress;\r\n    private users mCurrentUser;\r\n    private boolean likeByCurrentsUser2;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_view_post);\r\n\r\n        mPostImage = findViewById(R.id.post_image);\r\n        bottomNavigationView = findViewById(R.id.BottomNavViewBar);\r\n        mBackArrow = findViewById(R.id.backarrow);\r\n        mEllipses = findViewById(R.id.ivEllipses);\r\n        mStarWhite = findViewById(R.id.image_star);\r\n        mStarYellow = findViewById(R.id.image_star_yellow);\r\n        mProfileImage = findViewById(R.id.profile_photo1);\r\n        mBackLabel = findViewById(R.id.tvbacklabel1);\r\n        mCaption = findViewById(R.id.image_caption);\r\n        mUsername = findViewById(R.id.username1);\r\n        mTimestamp = findViewById(R.id.images_time);\r\n        mLikes = findViewById(R.id.likes_number);\r\n        mComment = findViewById(R.id.image_shoutout);\r\n        mCommentnumber = findViewById(R.id.comments_number);\r\n        mcredit = findViewById(R.id.credit);\r\n        promote = findViewById(R.id.promote);\r\n        promoted = findViewById(R.id.promoted);\r\n        domain = findViewById(R.id.domain12);\r\n        promoteNum = findViewById(R.id.promote_number);\r\n\r\n        progress = findViewById(R.id.pro);\r\n        progress2 = findViewById(R.id.progress);\r\n\r\n\r\n        play2 = findViewById(R.id.play);\r\n        mute = findViewById(R.id.mute);\r\n        unmute = findViewById(R.id.unmute);\r\n        playerView = findViewById(R.id.player_view);\r\n        progressBar = findViewById(R.id.progress_bar);\r\n        duration = findViewById(R.id.duration);\r\n        thumbnail = findViewById(R.id.thumbnail);\r\n\r\n\r\n//          Initialize SharedPreference variables\r\n        sp = getApplicationContext().getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n\r\n\r\n        Intent i = getIntent();\r\n        mphoto = i.getParcelableExtra(\"photo\");\r\n        comments = i.getParcelableArrayListExtra(\"comments\");\r\n\r\n        duration.setVisibility(View.GONE);\r\n\r\n\r\n        mEllipses.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                PopupMenu popupMenu = new PopupMenu(ViewPostActivity.this, mEllipses);\r\n                if (mphoto.getUi().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                    popupMenu.getMenuInflater().inflate(R.menu.post_menu, popupMenu.getMenu());\r\n                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                        @Override\r\n                        public boolean onMenuItemClick(MenuItem item) {\r\n                            Toast.makeText(ViewPostActivity.this, \"clicked\", Toast.LENGTH_SHORT).show();\r\n\r\n                            AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);\r\n                            builder.setTitle(\"Delete\");\r\n                            builder.setMessage(\"Are you sure, you want to delete this Post?\");\r\n\r\n//                set buttons\r\n                            builder.setPositiveButton(\"Delete\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    Log.d(TAG, \"DeleteMessage: deleteing message\");\r\n                                    DeletePost();\r\n\r\n                                }\r\n                            });\r\n                            builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    dialog.dismiss();\r\n                                }\r\n                            });\r\n                            builder.create().show();\r\n\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    popupMenu.show();\r\n\r\n\r\n                } else {\r\n                    popupMenu.getMenuInflater().inflate(R.menu.post_menu_all, popupMenu.getMenu());\r\n                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                        @Override\r\n                        public boolean onMenuItemClick(MenuItem item) {\r\n                            Toast.makeText(ViewPostActivity.this, \"clicked\", Toast.LENGTH_SHORT).show();\r\n\r\n                            AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);\r\n                            builder.setTitle(\"Report\");\r\n                            builder.setMessage(\"Are you sure, you want to Report this Post?\");\r\n\r\n//                set buttons\r\n                            builder.setPositiveButton(\"Report\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    Log.d(TAG, \"DeleteMessage: deleteing message\");\r\n                                    ReportPost();\r\n\r\n                                }\r\n                            });\r\n                            builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    dialog.dismiss();\r\n                                }\r\n                            });\r\n                            builder.create().show();\r\n\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    popupMenu.show();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        if (mphoto.getTy().equals(\"photo\")) {\r\n\r\n            mPostImage.setVisibility(View.VISIBLE);\r\n            play2.setVisibility(View.GONE);\r\n            Glide.with(ViewPostActivity.this)\r\n                    .load(mphoto.getIp())\r\n                    .placeholder(R.drawable.load)\r\n                    .error(R.drawable.default_image2)\r\n                    .placeholder(R.drawable.load)\r\n                    .into(mPostImage);\r\n            playerView.setVisibility(GONE);\r\n\r\n        } else {\r\n            unmute.setVisibility(View.VISIBLE);\r\n            play2.setVisibility(View.VISIBLE);\r\n            mPostImage.setVisibility(View.GONE);\r\n            playerView.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n//                   ***********get Video***********\r\n\r\n\r\n        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n//                    get thumbnail\r\n        reference2\r\n                .child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.thumbnail))\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            Glide.with(ViewPostActivity.this)\r\n                                    .load(mphoto.getT())\r\n                                    .placeholder(R.drawable.load)\r\n                                    .error(R.drawable.default_image2)\r\n                                    .placeholder(R.drawable.load)\r\n                                    .thumbnail(0.25f)\r\n                                    .into(thumbnail);                           }\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n//                     play/pause video\r\n\r\n        final Handler[] mHandler = new Handler[1];\r\n        final Runnable[] updateProgressAction = new Runnable[1];\r\n        mUsername.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent i = new Intent(ViewPostActivity.this, profile.class);\r\n                i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                i.putExtra(getString(R.string.intent_user), mphoto.getUi());\r\n                startActivity(i);\r\n            }\r\n        });\r\n        mProfileImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent i = new Intent(ViewPostActivity.this, profile.class);\r\n                i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                i.putExtra(getString(R.string.intent_user), mphoto.getUi());\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        playerView.getVideoSurfaceView().setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                progressBar.setVisibility(View.VISIBLE);\r\n//                if paused\r\n                if (play) {\r\n\r\n                    play = false;\r\n                    play2.setVisibility(View.INVISIBLE);\r\n\r\n                    LoadControl loadControl = new DefaultLoadControl();\r\n                    BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n                    TrackSelector trackSelector = new DefaultTrackSelector(new AdaptiveTrackSelection.Factory(bandwidthMeter));\r\n                    if (simpleExoPlayer != null) {\r\n\r\n                        simpleExoPlayer.release();\r\n                    }\r\n\r\n                    simpleExoPlayer = ExoPlayerFactory.newSimpleInstance(ViewPostActivity.this, trackSelector, loadControl);\r\n\r\n                    DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(\r\n                            ViewPostActivity.this, Util.getUserAgent(ViewPostActivity.this, \"RecyclerView VideoPlayer\"));\r\n                    String mediaUrl = mphoto.getIp();\r\n                    HttpProxyCacheServer proxy = getProxy(ViewPostActivity.this);\r\n                    String proxyUrl = proxy.getProxyUrl(mediaUrl);\r\n\r\n\r\n                    playerView.setPlayer(simpleExoPlayer);\r\n\r\n\r\n                    playerView.setKeepScreenOn(true);\r\n                    playerView.setKeepScreenOn(true);\r\n\r\n\r\n                    MediaSource videoSource = new ExtractorMediaSource.Factory(dataSourceFactory)\r\n                            .createMediaSource(Uri.parse(proxyUrl));\r\n//                    set Volume\r\n                    if (mute.getVisibility() == View.VISIBLE) {\r\n                        simpleExoPlayer.setVolume(0f);\r\n                    } else if (unmute.getVisibility() == View.VISIBLE) {\r\n                        simpleExoPlayer.setVolume(AudioManager.STREAM_MUSIC);\r\n                    }\r\n\r\n                    simpleExoPlayer.prepare(videoSource);\r\n                    simpleExoPlayer.seekTo(currentPosition);\r\n                    simpleExoPlayer.setPlayWhenReady(true);\r\n                    simpleExoPlayer.getPlaybackState();\r\n\r\n\r\n                    simpleExoPlayer.addListener(new Player.EventListener() {\r\n                        @Override\r\n                        public void onTimelineChanged(Timeline timeline, Object manifest, int reason) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onLoadingChanged(boolean isLoading) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n\r\n                            if (playbackState == Player.STATE_BUFFERING) {\r\n\r\n                                progressBar.setVisibility(View.VISIBLE);\r\n\r\n                            } else if (playbackState == Player.STATE_READY) {\r\n\r\n                                duration.setVisibility(View.VISIBLE);\r\n                                thumbnail.setVisibility(GONE);\r\n                                progressBar.setVisibility(View.GONE);\r\n\r\n//                                display duration\r\n                                updateProgressAction[0] = new Runnable() {\r\n                                    @Override\r\n                                    public void run() {\r\n                                        updateProgress();\r\n                                    }\r\n\r\n                                    private void updateProgress() {\r\n\r\n                                        long delayMs = TimeUnit.SECONDS.toMillis(1);\r\n                                        mHandler[0].postDelayed(updateProgressAction[0], delayMs);\r\n                                        duration.setText(String.valueOf((int) (simpleExoPlayer.getDuration() - simpleExoPlayer.getCurrentPosition()) / 1000));\r\n\r\n                                    }\r\n\r\n                                };\r\n                                mHandler[0] = new Handler();\r\n                                mHandler[0].post(updateProgressAction[0]);\r\n\r\n\r\n                            } else if (playbackState == Player.STATE_ENDED) {\r\n\r\n                                play2.setVisibility(View.VISIBLE);\r\n                                play = true;\r\n                                thumbnail.setVisibility(View.VISIBLE);\r\n                                simpleExoPlayer.seekTo(0);\r\n                                simpleExoPlayer.setPlayWhenReady(false);\r\n                                simpleExoPlayer.release();\r\n\r\n                            } else if (playbackState == Player.STATE_IDLE) {\r\n                                play2.setVisibility(View.VISIBLE);\r\n\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onRepeatModeChanged(int repeatMode) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onShuffleModeEnabledChanged(boolean shuffleModeEnabled) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlayerError(ExoPlaybackException error) {\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPositionDiscontinuity(int reason) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlaybackParametersChanged(PlaybackParameters playbackParameters) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onSeekProcessed() {\r\n\r\n                        }\r\n                    });\r\n                } else {\r\n//                    if playing\r\n                    play = true;\r\n                    play2.setVisibility(View.VISIBLE);\r\n                    currentPosition = simpleExoPlayer.getCurrentPosition();\r\n                    simpleExoPlayer.setPlayWhenReady(false);\r\n                    simpleExoPlayer.getPlaybackState();\r\n                    simpleExoPlayer.release();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n//        toggle volume\r\n        mute.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                mute.setVisibility(View.GONE);\r\n                unmute.setVisibility(View.VISIBLE);\r\n                if (simpleExoPlayer != null) {\r\n                    simpleExoPlayer.setVolume(AudioManager.STREAM_MUSIC);\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n        unmute.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                mute.setVisibility(View.VISIBLE);\r\n                unmute.setVisibility(View.GONE);\r\n                if (simpleExoPlayer != null) {\r\n                    simpleExoPlayer.setVolume(0f);\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        getCurrentUser();\r\n\r\n        setupFirebaseAuth();\r\n        ifCurrentUserLiked();\r\n        ifCurrentUserPromoted();\r\n        numberofPromote();\r\n        getPhototDetail();\r\n        setupWidgets();\r\n\r\n        mStarWhite.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"whitestar clicked\");\r\n\r\n                mStarWhite.setVisibility(View.GONE);\r\n                mStarYellow.setVisibility(View.VISIBLE);\r\n                addlike();\r\n                NumberOfLikes();\r\n\r\n\r\n            }\r\n        });\r\n        mStarYellow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"yellowstar clicked\");\r\n\r\n                mStarWhite.setVisibility(View.VISIBLE);\r\n                mStarYellow.setVisibility(View.GONE);\r\n                removeLike();\r\n                NumberOfLikes();\r\n\r\n\r\n            }\r\n        });\r\n        promote.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                promotePost();\r\n            }\r\n        });\r\n\r\n\r\n        promoted.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                unPromotePost();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void ReportPost() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        reference.child(getString(R.string.dbname_reports))\r\n                .child(getString(R.string.field_post))\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_user_id))\r\n                .setValue(mphoto.getUi());\r\n    }\r\n\r\n    private void unPromotePost() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(\"Remove Promotion\");\r\n        builder.setMessage(\"Are you sure, you want to remove this Promotion?\");\r\n\r\n//                set buttons\r\n        builder.setPositiveButton(\"Remove\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                Log.d(VolleyLog.TAG, \"Rejecting: rejected \");\r\n\r\n                promote.setVisibility(View.VISIBLE);\r\n                promoted.setVisibility(View.GONE);\r\n\r\n                DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                db.child(getString(R.string.dbname_promote))\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                        .child(mphoto.getPi())\r\n                        .removeValue();\r\n\r\n                DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n                reference.child(getString(R.string.dbname_user_photos))\r\n                        .child(mphoto.getUi())\r\n                        .child(mphoto.getPi())\r\n                        .child(getString(R.string.field_promotes))\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                        .removeValue();\r\n\r\n\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n        builder.create().show();\r\n\r\n    }\r\n\r\n    private void numberofPromote() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_promotes));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                String num = String.valueOf(dataSnapshot.getChildrenCount());\r\n                promoteNum.setText(num);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    private void promotePost() {\r\n        BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(this, R.style.BottomSheetDialogTheme);\r\n\r\n        View bottomSheetView = this.getLayoutInflater()\r\n                .inflate(R.layout.layout_bottom_sheet_promote, bottomSheetDialog.findViewById(R.id.layout_bottom_sheet_container));\r\n        TextView username = bottomSheetView.findViewById(R.id.usernameBs);\r\n        TextView cancel = bottomSheetView.findViewById(R.id.cancel);\r\n        TextView promote1 = bottomSheetView.findViewById(R.id.promote);\r\n        ImageView post = bottomSheetView.findViewById(R.id.postBs);\r\n        Glide.with(ViewPostActivity.this)\r\n                .load(mphoto.getIp())\r\n                .placeholder(R.drawable.load)\r\n                .error(R.drawable.default_image2)\r\n                .placeholder(R.drawable.load)\r\n                .thumbnail(0.5f)\r\n                .into(post);\r\n        username.setText(currentUsername);\r\n\r\n\r\n        cancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                bottomSheetDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        promote1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                promote.setVisibility(View.GONE);\r\n                promoted.setVisibility(View.VISIBLE);\r\n\r\n\r\n                SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n                    @Override\r\n                    public void onTimeReceived(String rawDate) {\r\n                        // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n\r\n                        String str_date = rawDate;\r\n                        java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                        Date date = null;\r\n                        try {\r\n                            date = formatter.parse(str_date);\r\n                        } catch (ParseException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                        Long timeStart = date.getTime();\r\n                        Long timeEnd = date.getTime() + 84600000;\r\n\r\n\r\n                        DatabaseReference db1 = FirebaseDatabase.getInstance().getReference();\r\n\r\n                        HashMap<String, Object> hashMap = new HashMap<>();\r\n                        hashMap.put(getString(R.string.field_photo_id), mphoto.getPi());\r\n                        hashMap.put(getString(R.string.field_user_id), mphoto.getUi());\r\n                        hashMap.put(getString(R.string.field_image_path), mphoto.getIp());\r\n                        hashMap.put(getString(R.string.field_story_ID), mphoto.getPi());\r\n                        hashMap.put(getString(R.string.field_promotion_time_end), String.valueOf(timeEnd));\r\n                        hashMap.put(getString(R.string.field_promotion_time_start), String.valueOf(timeStart));\r\n                        hashMap.put(getString(R.string.field_promoter_ID), FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n\r\n                        db1.child(getString(R.string.dbname_promote))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(mphoto.getPi())\r\n                                .setValue(hashMap);\r\n\r\n                        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n                        reference.child(getString(R.string.dbname_user_photos))\r\n                                .child(mphoto.getUi())\r\n                                .child(mphoto.getPi())\r\n                                .child(getString(R.string.field_promotes))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .setValue(\"true\");\r\n\r\n                        addToHisNotification(\"\" + mphoto.getUi(), mphoto.getPi(), \"Promoted your post.\");\r\n\r\n\r\n                        bottomSheetDialog.dismiss();\r\n\r\n                        Log.e(SNTPClient.TAG, rawDate);\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Exception ex) {\r\n                        Log.e(SNTPClient.TAG, ex.getMessage());\r\n                    }\r\n                });\r\n\r\n\r\n            }\r\n        });\r\n\r\n\r\n        bottomSheetDialog.setContentView(bottomSheetView);\r\n        bottomSheetDialog.show();\r\n\r\n\r\n    }\r\n\r\n    private void DeletePost() {\r\n\r\n        progress.setVisibility(View.VISIBLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE,\r\n                WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n        final int[] x = {0};\r\n        DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();\r\n        reference3.child(getString(R.string.dbname_follower))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                x[0]++;\r\n                                DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();\r\n                                reference3.child(getString(R.string.dbname_users))\r\n                                        .child(snapshot1.getKey())\r\n                                        .child(getString(R.string.post_updates))\r\n                                        .child(mphoto.getPi())\r\n                                        .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                                if (x[0] == snapshot.getChildrenCount()) {\r\n                                    deleteFurther();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            deleteFurther();\r\n\r\n                        }\r\n                    }\r\n\r\n                    private void deleteFurther() {\r\n\r\n                        if( !mphoto.getTy().equals(\"photo\")){\r\n                            StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getT());\r\n                            photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n\r\n                                }\r\n                            });\r\n                        }\r\n                        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n                        reference2.child(getString(R.string.dbname_user_photos))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(mphoto.getPi())\r\n                                .removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getIp());\r\n                                photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        // File deleted successfully\r\n\r\n                                        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n                                        reference2.child(getString(R.string.explore_update))\r\n                                                .child(mphoto.getPi())\r\n                                                .setValue(true)\r\n                                                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(Void aVoid) {\r\n                                                        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Kolkata\"), new SNTPClient.Listener() {\r\n                                                            @Override\r\n                                                            public void onTimeReceived(String currentTimeStamp) {\r\n                                                                reference2.child(getString(R.string.explore_update)).child(getString(R.string.field_last_updated)).setValue(currentTimeStamp);\r\n                                                            }\r\n\r\n                                                            @Override\r\n                                                            public void onError(Exception ex) {\r\n\r\n                                                            }\r\n                                                        });\r\n                                                        String json = sp.getString(\"pl\", null);\r\n                                                        String json2 = sp.getString(\"myMedia\", null);\r\n\r\n                                                        Type type = new TypeToken<ArrayList<Photo>>() {\r\n                                                        }.getType();\r\n                                                        ArrayList<Photo> photoList = new ArrayList<>();\r\n                                                        ArrayList<Photo> mymediaList = new ArrayList<>();\r\n\r\n                                                        photoList = gson.fromJson(json, type);\r\n                                                        mymediaList = gson.fromJson(json2, type);\r\n                                                        ArrayList<Photo> photoList2 =new ArrayList<>();\r\n                                                        ArrayList<Photo> mymediaList2= new ArrayList<>();\r\n                                                        if( photoList != null) {\r\n                                                            photoList2 = new ArrayList<>(photoList);\r\n                                                        }\r\n                                                        if (mymediaList != null){\r\n                                                            mymediaList2 = new ArrayList<>(mymediaList);\r\n                                                        }\r\n\r\n\r\n                                                        if (photoList2.size() == 0) {                 //    if no arrayList is present\r\n\r\n\r\n                                                        } else {\r\n\r\n                                                            for (Photo a : photoList) {\r\n                                                                if (a.getPi().equals(mphoto.getPi()))\r\n                                                                    photoList2.remove(a);\r\n\r\n                                                            }\r\n                                                        }\r\n\r\n\r\n                                                        if (mymediaList2.size() == 0) {                 //    if no arrayList is present\r\n\r\n\r\n                                                        } else {\r\n\r\n                                                            for (Photo a : mymediaList) {\r\n                                                                if (a.getPi().equals(mphoto.getPi()))\r\n                                                                    mymediaList2.remove(a);\r\n\r\n                                                            }\r\n                                                        }\r\n\r\n\r\n                                                        //  delete from post list and save updated list\r\n                                                        SharedPreferences.Editor editor = sp.edit();\r\n                                                        json = gson.toJson(photoList2);\r\n                                                        json2 = gson.toJson(mymediaList2);\r\n\r\n                                                        editor.putString(\"pl\", json);\r\n                                                        editor.putString(\"myMedia\", json2);\r\n\r\n                                                        editor.apply();\r\n\r\n\r\n                                                        progress.setVisibility(GONE);\r\n                                                        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                                        finish();\r\n                                                    }\r\n                                                });\r\n\r\n\r\n                                    }\r\n\r\n                                }).\r\n\r\n                                        addOnFailureListener(new OnFailureListener() {\r\n                                            @Override\r\n                                            public void onFailure (@NonNull Exception exception){\r\n                                                // Uh-oh, an error occurred!\r\n                                                Log.d(VolleyLog.TAG, \"onFailure: did not delete file\");\r\n                                            }\r\n                                        });\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled (@NonNull DatabaseError error){\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n\r\n\r\n    private void getCurrentUser () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    mCurrentUser = dataSnapshot.getValue(users.class);\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void NumberOfLikes () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_likes));\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                numberoflike = String.valueOf(dataSnapshot.getChildrenCount());\r\n                mLikes.setText(numberoflike);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void ifCurrentUserLiked () {\r\n        Log.d(TAG, \" checking current user liked or not\");\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_likes))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    Log.d(TAG, \" checking current user liked or not: Already liked\");\r\n                    mStarWhite.setVisibility(View.GONE);\r\n                    mStarYellow.setVisibility(View.VISIBLE);\r\n                    NumberOfLikes();\r\n                    likeByCurrentsUser2 = true;\r\n\r\n                } else {\r\n                    Log.d(TAG, \" checking current user liked or not: not liked\");\r\n                    mStarWhite.setVisibility(View.VISIBLE);\r\n                    mStarYellow.setVisibility(View.GONE);\r\n                    NumberOfLikes();\r\n                    likeByCurrentsUser2 = false;\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void addToHisNotification (String hisUid, String pId, String notification){\r\n\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n\r\n                String str_date = rawDate;\r\n                java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                Date date = null;\r\n                try {\r\n                    date = formatter.parse(str_date);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                Log.d(TAG, \"onCreateView: timestampyesss\" + date.getTime());\r\n                String timestamp = String.valueOf(date.getTime());\r\n\r\n\r\n//        data to put in notification\r\n                HashMap<Object,String> hashMap = new HashMap<>();\r\n                hashMap.put(\"pId\",pId);\r\n\r\n                hashMap.put(getString(R.string.field_timestamp),timestamp);\r\n\r\n                hashMap.put(\"pUid\",hisUid);\r\n\r\n                hashMap.put(getString(R.string.field_notification_message),notification);\r\n                hashMap.put(getString(R.string.field_if_seen),\"false\");\r\n\r\n                hashMap.put(\"sUid\",FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users));\r\n                ref.child(hisUid).child(getString(R.string.field_Notifications)).child(timestamp).setValue(hashMap)\r\n                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n\r\n                            }\r\n                        }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n                Log.e(SNTPClient.TAG, rawDate);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception ex) {\r\n                Log.e(SNTPClient.TAG, ex.getMessage());\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void addlike () {\r\n        Log.d(TAG, \" like add\");\r\n\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        reference1.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_likes))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(getString(R.string.field_user_id))\r\n                .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        NumberOfLikes();\r\n        addToHisNotification(\"\" + mphoto.getUi(), mphoto.getPi(), \"Liked your post\");\r\n\r\n\r\n    }\r\n\r\n    private void removeLike () {\r\n        Log.d(TAG, \" like removed\");\r\n\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        reference1.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_likes))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .removeValue();\r\n        NumberOfLikes();\r\n\r\n\r\n    }\r\n\r\n    private void ifCurrentUserPromoted () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_promotes))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    Log.d(TAG, \" checking current user liked or not: Already liked\");\r\n                    promote.setVisibility(View.GONE);\r\n                    promoted.setVisibility(View.VISIBLE);\r\n\r\n                } else {\r\n                    Log.d(TAG, \" checking current user liked or not: not liked\");\r\n                    promote.setVisibility(View.VISIBLE);\r\n                    promoted.setVisibility(View.GONE);\r\n\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getPhototDetail () {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(getString(R.string.dbname_users))\r\n                .child(mphoto.getUi());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                users user = dataSnapshot.getValue(users.class);\r\n                mUsername.setText(user.getU());\r\n                currentUsername = user.getU();\r\n                Glide.with(ViewPostActivity.this)\r\n                        .load(user.getPp())\r\n                        .placeholder(R.drawable.load)\r\n                        .error(R.drawable.default_image2)\r\n                        .placeholder(R.drawable.load)\r\n                        .into(mProfileImage);\r\n                mcredit.setText(\"© \" + user.getU());\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    private void setupWidgets () {\r\n        mTimestamp.setText(mphoto.getDc().substring(0, 10));\r\n\r\n        mBackArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n\r\n        mComment.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//\r\n                Intent i = new Intent(ViewPostActivity.this, CommentActivity.class);\r\n                i.putExtra(\"photoId\", mphoto.getPi());\r\n                i.putExtra(\"userId\", mphoto.getUi());\r\n                startActivity(i);\r\n\r\n            }\r\n        });\r\n        mCommentnumber.setText(String.valueOf(comments.size()));\r\n        mCaption.setText(mphoto.getCap());\r\n        mLikes.setText(mLikesString);\r\n\r\n\r\n    }\r\n\r\n\r\n    private void setupFirebaseAuth () {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n\r\n        mAuthListener = new FirebaseAuth.AuthStateListener() {\r\n            @Override\r\n            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\r\n                FirebaseUser user = firebaseAuth.getCurrentUser();\r\n\r\n                if (user != null) {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n                } else {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                }\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart () {\r\n        super.onStart();\r\n\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStop () {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onPause () {\r\n        super.onPause();\r\n        if (simpleExoPlayer != null) {\r\n            simpleExoPlayer.release();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy () {\r\n        super.onDestroy();\r\n        if (simpleExoPlayer != null) {\r\n            simpleExoPlayer.release();\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/ViewPostActivity.java	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/java/com/orion/orion/ViewPostActivity.java	(date 1605880884300)
-@@ -154,7 +154,6 @@
-         duration = findViewById(R.id.duration);
-         thumbnail = findViewById(R.id.thumbnail);
- 
--
- //          Initialize SharedPreference variables
-         sp = getApplicationContext().getSharedPreferences("shared preferences", Context.MODE_PRIVATE);
-         gson = new Gson();
-@@ -256,11 +255,13 @@
-                     .placeholder(R.drawable.load)
-                     .into(mPostImage);
-             playerView.setVisibility(GONE);
-+            thumbnail.setVisibility(GONE);
- 
-         } else {
-             unmute.setVisibility(View.VISIBLE);
-             play2.setVisibility(View.VISIBLE);
-             mPostImage.setVisibility(View.GONE);
-+            thumbnail.setVisibility(View.VISIBLE);
-             playerView.setVisibility(View.VISIBLE);
-         }
- 
-Index: app/src/main/res/layout/activity_post_video.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/white\">\r\n\r\n    <com.google.android.material.appbar.AppBarLayout\r\n        android:id=\"@+id/profileToolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:background=\"@drawable/white_border\">\r\n\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/backarrow\"\r\n                    android:layout_width=\"35dp\"\r\n                    android:layout_height=\"35dp\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginEnd=\"20dp\"\r\n                    android:layout_marginRight=\"20dp\"\r\n                    android:src=\"@drawable/ic_back_black_arrow\" />\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginLeft=\"5dp\"\r\n                    android:text=\"Post Video\"\r\n                    android:textColor=\"#000000\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/post\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_alignParentRight=\"true\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginRight=\"15dp\"\r\n                    android:text=\"Post\"\r\n                    android:textColor=\"@color/scheme8\"\r\n                    android:textSize=\"18sp\" />\r\n\r\n\r\n            </RelativeLayout>\r\n        </androidx.appcompat.widget.Toolbar>\r\n    </com.google.android.material.appbar.AppBarLayout>\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/profileToolbar\"\r\n        android:layout_marginLeft=\"15dp\"\r\n        android:layout_marginRight=\"15dp\"\r\n        android:layout_marginBottom=\"15dp\"\r\n        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\r\n\r\n        <com.google.android.material.textfield.TextInputEditText\r\n            android:id=\"@+id/inputCaption\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_below=\"@id/progress\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginBottom=\"10dp\"\r\n            android:background=\"@drawable/rectangular_border\"\r\n            android:backgroundTint=\"@color/white\"\r\n            android:hint=\"Enter Title or Caption\"\r\n            android:imeOptions=\"actionNext\"\r\n            android:inputType=\"textFilter\"\r\n            android:textColor=\"@color/black\"\r\n            android:textColorHint=\"@color/grey\"\r\n            android:textSize=\"15sp\" />\r\n\r\n        <View\r\n            android:id=\"@+id/captionLine\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"2dp\"\r\n            android:layout_below=\"@+id/inputCaption\"\r\n            android:background=\"#E5E6EB\" />\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/relThumbnail\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/captionLine\"\r\n            android:orientation=\"horizontal\"\r\n            android:weightSum=\"3\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/thumbtext\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:layout_margin=\"20dp\"\r\n                android:layout_weight=\"1.5\"\r\n\r\n                android:text=\"Pick a Thumbnail:\"\r\n                android:textColor=\"#03A9F4\"\r\n                android:textSize=\"15sp\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/thumbnailButton\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"20sp\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:layout_weight=\"0.5\"\r\n                android:background=\"@color/scheme8\"\r\n                android:src=\"@drawable/ic_add\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/thumbnailImage\"\r\n                android:layout_width=\"20dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:layout_weight=\"1\"\r\n                android:src=\"@drawable/ic_star_black\" />\r\n        </LinearLayout>\r\n\r\n        <androidx.cardview.widget.CardView\r\n            android:id=\"@+id/videoBox\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:gravity=\"center_horizontal\"\r\n            android:visibility=\"invisible\"\r\n            app:cardBackgroundColor=\"@color/white\"\r\n            app:cardCornerRadius=\"10dp\">\r\n\r\n            <androidx.constraintlayout.widget.ConstraintLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <com.google.android.exoplayer2.ui.PlayerView\r\n                    android:id=\"@+id/player_view\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"0dp\"\r\n                    android:layout_gravity=\"center_horizontal|center_vertical\"\r\n                    android:background=\"@drawable/square\"\r\n                    android:backgroundTint=\"@color/black\"\r\n                    android:visibility=\"visible\"\r\n                    app:controller_layout_id=\"@layout/custom_controller\"\r\n                    app:fastforward_increment=\"10000\"\r\n                    app:hide_on_touch=\"true\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintDimensionRatio=\"W,1:1\"\r\n                    app:layout_constraintLeft_toLeftOf=\"parent\"\r\n                    app:layout_constraintRight_toRightOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\"\r\n                    app:player_layout_id=\"@layout/exo_simple_player_view\"\r\n                    app:resize_mode=\"fit\"\r\n                    app:rewind_increment=\"10000\"\r\n                    app:show_timeout=\"5000\"\r\n                    app:surface_type=\"texture_view\"\r\n                    app:use_controller=\"false\" />\r\n            </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n            <com.orion.orion.util.SquareImageView\r\n                android:id=\"@+id/thumbnail\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_gravity=\"center\"\r\n                android:visibility=\"visible\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/play\"\r\n                android:layout_width=\"60dp\"\r\n                android:layout_height=\"60dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:src=\"@drawable/ic_play_btn\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/close\"\r\n                android:layout_width=\"24dp\"\r\n                android:layout_height=\"24dp\"\r\n                android:layout_gravity=\"left|top\"\r\n                android:layout_margin=\"5dp\"\r\n                android:src=\"@drawable/ic_baseline_close_24\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/unmute\"\r\n                android:layout_width=\"25dp\"\r\n                android:layout_height=\"25dp\"\r\n                android:layout_gravity=\"bottom\"\r\n                android:layout_margin=\"5dp\"\r\n                android:src=\"@drawable/unmute\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/mute\"\r\n                android:layout_width=\"25dp\"\r\n                android:layout_height=\"25dp\"\r\n                android:layout_gravity=\"bottom\"\r\n                android:layout_margin=\"5dp\"\r\n                android:src=\"@drawable/mute\"\r\n                android:visibility=\"gone\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/duration\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"25dp\"\r\n                android:layout_gravity=\"right\"\r\n                android:layout_margin=\"5dp\"\r\n                android:text=\"0s\"\r\n                android:textColor=\"#686868\" />\r\n\r\n        </androidx.cardview.widget.CardView>\r\n\r\n        <TextView\r\n            android:id=\"@+id/progress\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@id/videoBox\"\r\n            android:layout_marginTop=\"7dp\"\r\n            android:gravity=\"center_horizontal\"\r\n            android:padding=\"10dp\"\r\n            android:textColor=\"@color/grey\"\r\n            android:textSize=\"15sp\"\r\n            android:visibility=\"visible\"\r\n            tools:text=\"Progress\" />\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/progressBar\"\r\n            style=\"?android:attr/progressBarStyleHorizontal\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@id/progress\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:max=\"100\"\r\n            android:progress=\"0\"\r\n            android:visibility=\"invisible\" />\r\n\r\n        <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton\r\n            android:id=\"@+id/fab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:text=\"Pick Video\"\r\n            android:textAllCaps=\"false\"\r\n            android:textColor=\"@color/white\"\r\n            app:backgroundTint=\"@color/scheme8\"\r\n            app:icon=\"@drawable/ic_baseline_video_library_24\"\r\n            app:iconTint=\"@color/white\" />\r\n\r\n    </RelativeLayout>\r\n</RelativeLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/activity_post_video.xml	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/res/layout/activity_post_video.xml	(date 1605874747829)
-@@ -74,7 +74,7 @@
-             android:layout_marginBottom="10dp"
-             android:background="@drawable/rectangular_border"
-             android:backgroundTint="@color/white"
--            android:hint="Enter Title or Caption"
-+            android:hint="Enter Caption"
-             android:imeOptions="actionNext"
-             android:inputType="textFilter"
-             android:textColor="@color/black"
-@@ -93,7 +93,10 @@
-             android:layout_width="match_parent"
-             android:layout_height="wrap_content"
-             android:layout_below="@+id/captionLine"
-+            android:layout_margin="10dp"
-             android:orientation="horizontal"
-+            android:layout_centerHorizontal="true"
-+            android:gravity="center"
-             android:weightSum="3">
- 
-             <TextView
-@@ -101,32 +104,34 @@
-                 android:layout_width="0dp"
-                 android:layout_height="wrap_content"
-                 android:layout_centerVertical="true"
--                android:layout_margin="20dp"
-                 android:layout_weight="1.5"
- 
--                android:text="Pick a Thumbnail:"
--                android:textColor="#03A9F4"
--                android:textSize="15sp" />
-+                android:text="Pick Thumbnail:"
-+                android:textColor="#000000"
-+                android:textSize="18sp" />
- 
-             <ImageView
-                 android:id="@+id/thumbnailButton"
--                android:layout_width="0dp"
--                android:layout_height="20sp"
-+                android:layout_width="20dp"
-+                android:layout_gravity="center|center_vertical"
-+                android:layout_height="30sp"
-                 android:layout_centerVertical="true"
--                android:layout_marginTop="20dp"
-                 android:layout_weight="0.5"
-                 android:background="@color/scheme8"
-                 android:src="@drawable/ic_add" />
- 
--            <ImageView
--                android:id="@+id/thumbnailImage"
--                android:layout_width="20dp"
--                android:layout_height="40dp"
--                android:layout_marginLeft="10dp"
--                android:layout_marginTop="20dp"
--                android:layout_weight="1"
--                android:src="@drawable/ic_star_black" />
--        </LinearLayout>
-+
-+        </LinearLayout>
-+        <ImageView
-+            android:id="@+id/thumbnailImage"
-+            android:layout_width="40dp"
-+            android:layout_below="@+id/relThumbnail"
-+            android:layout_height="40dp"
-+            android:layout_centerHorizontal="true"
-+            android:layout_marginLeft="10dp"
-+            android:layout_marginTop="10dp"
-+            android:layout_weight="1"
-+            />
- 
-         <androidx.cardview.widget.CardView
-             android:id="@+id/videoBox"
-Index: app/src/main/java/com/orion/orion/Adapters/AdapterParticipantList.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion.Adapters;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.net.Uri;\r\nimport android.text.format.DateFormat;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.contest.Contest_Evaluation.activity_view_media;\r\nimport com.orion.orion.models.JoinForm;\r\nimport com.orion.orion.models.ParticipantList;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.profile;\r\nimport com.orion.orion.util.SNTPClient;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\nimport static com.android.volley.VolleyLog.TAG;\r\n\r\npublic class AdapterParticipantList extends RecyclerView.Adapter<AdapterParticipantList.ViewHolder> {\r\n    private String mAppend = \"\";\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n    private Context mContext;\r\n    private List<ParticipantList> participantLists;\r\n    String name1 = \"\", profilelink = \"\", username1 = \"\", idLink = \"\", mediaLink = \"\", comment = \"\", college1 = \"\";\r\n\r\n    public AdapterParticipantList(Context mContext, List<ParticipantList> participantLists) {\r\n        this.mContext = mContext;\r\n        this.participantLists = participantLists;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        View view = LayoutInflater.from(mContext).inflate(R.layout.contest_participant_item, parent, false);\r\n        return new AdapterParticipantList.ViewHolder(view);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final ViewHolder holder, final int i) {\r\n\r\n        ParticipantList mparticipantLists = participantLists.get(i);\r\n//          Initialize SharedPreference variables\r\n        sp = mContext.getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n\r\n        String timeStamp = mparticipantLists.getTim();\r\n\r\n//        convert time stamp to date and time\r\n        Calendar cal = Calendar.getInstance(Locale.ENGLISH);\r\n        cal.setTimeInMillis(Long.parseLong(timeStamp));\r\n        String dateTime = DateFormat.format(\"dd/MM/yyyy hh:mm aa\", cal).toString();\r\n\r\n        holder.time.setText(dateTime);\r\n\r\n\r\n        getparticipantDetails(mparticipantLists.getUi(), holder.username, holder.profile);\r\n\r\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(mContext, R.style.BottomSheetDialogTheme);\r\n\r\n                View bottomSheetView = ((FragmentActivity) mContext).getLayoutInflater()\r\n                        .inflate(R.layout.layout_bottom_sheet, (LinearLayout) bottomSheetDialog.findViewById(R.id.layout_bottom_sheet_container));\r\n                TextView name = bottomSheetView.findViewById(R.id.displaynameBs);\r\n                TextView remove = bottomSheetView.findViewById(R.id.remove);\r\n\r\n                TextView username = bottomSheetView.findViewById(R.id.usernameBs);\r\n                TextView college = bottomSheetView.findViewById(R.id.collegeBs);\r\n                TextView idcard = bottomSheetView.findViewById(R.id.idBs);\r\n                TextView submission = bottomSheetView.findViewById(R.id.submissionBs);\r\n                LinearLayout layout = bottomSheetView.findViewById(R.id.collegeLinear);\r\n                CircleImageView profileview = bottomSheetView.findViewById(R.id.profileBs);\r\n\r\n                name.setText(name1);\r\n                username.setText(username1);\r\n                Glide.with(mContext)\r\n                        .load(profilelink)\r\n                        .placeholder(R.drawable.load)\r\n                        .error(R.drawable.default_image2)\r\n                        .placeholder(R.drawable.load)\r\n                        .thumbnail(0.5f)\r\n                        .into(profileview);\r\n\r\n                getparticipantform(mparticipantLists.getUi(), mparticipantLists.getJi(), mparticipantLists.getCi(), college, layout);\r\n\r\n                remove.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        AlertDialog.Builder builder = new AlertDialog.Builder(mContext);\r\n                        builder.setTitle(\"Remove Participant\");\r\n                        builder.setMessage(R.string.remove_participant_prompt);\r\n\r\n//                set buttons\r\n                        builder.setPositiveButton(\"Remove\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialog, int which) {\r\n\r\n                                DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n\r\n                                db.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(mparticipantLists.getUi())\r\n                                        .child(mContext.getString(R.string.joined_contest))\r\n                                        .child(mparticipantLists.getJi())\r\n                                        .child(mContext.getString(R.string.field_status))\r\n                                        .setValue(\"Rejected\");\r\n\r\n                                db.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(mparticipantLists.getUi())\r\n                                        .child(mContext.getString(R.string.field_joined_updates))\r\n                                        .child(mparticipantLists.getJi())\r\n                                        .setValue(\"Rejected\");\r\n\r\n                                db.child(mContext.getString(R.string.dbname_participantList))\r\n                                        .child(mparticipantLists.getCi())\r\n                                        .child(mparticipantLists.getJi())\r\n                                        .removeValue();\r\n\r\n                                db.child(mContext.getString(R.string.dbname_contestlist))\r\n                                        .child(mparticipantLists.getCi())\r\n                                        .child(mContext.getString(R.string.field_Participant_List))\r\n                                        .child(mparticipantLists.getUi())\r\n                                        .removeValue()\r\n                                        .addOnSuccessListener(aVoid -> {\r\n                                            if (mparticipantLists.getMl().length()<23)\r\n                                            {\r\n                                                deleteUrl();\r\n                                            }\r\n                                           else if (mparticipantLists.getMl() == null || mparticipantLists.getMl().equals(\"\")\r\n                                                    || !mparticipantLists.getMl().substring(8, 23).equals(\"firebasestorage\")) {\r\n\r\n                                               deleteUrl();\r\n\r\n\r\n                                            } else {\r\n\r\n                                               deleteImage();\r\n\r\n                                            }\r\n\r\n                                        });\r\n\r\n\r\n                            }\r\n\r\n                            private void deleteImage() {\r\n                                DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n\r\n                                StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mparticipantLists.getMl());\r\n                                photoRef.delete().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                    @Override\r\n                                    public void onComplete(@NonNull Task<Void> task) {\r\n\r\n                                        DatabaseReference ref2 = FirebaseDatabase.getInstance().getReference();\r\n                                        ref2.child(mContext.getString(R.string.dbname_participantList))\r\n                                                .child(mparticipantLists.getCi())\r\n                                                .child(mparticipantLists.getJi())\r\n                                                .removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                            @Override\r\n                                            public void onSuccess(Void aVoid) {\r\n                                                //    Add newly Created ArrayList to Shared Preferences\r\n                                                String json = sp.getString(mparticipantLists.getCi(), null);\r\n\r\n                                                Type type = new TypeToken<ArrayList<ParticipantList>>() {\r\n                                                }.getType();\r\n                                                ArrayList<ParticipantList> participantList=new ArrayList<>();\r\n\r\n                                                participantList = gson.fromJson(json, type);\r\n\r\n                                                if (participantList==null){\r\n\r\n                                                }else{\r\n                                                    ArrayList<ParticipantList> participantList2=new ArrayList<>(participantList);\r\n\r\n\r\n                                                    for (ParticipantList a:participantList){\r\n                                                        if (a.getJi().equals(mparticipantLists.getJi())){\r\n                                                            participantList2.remove(a);\r\n                                                        }\r\n                                                    }\r\n\r\n                                                    participantList.remove(mparticipantLists);\r\n\r\n                                                    SharedPreferences.Editor editor = sp.edit();\r\n                                                    json = gson.toJson(participantList2);\r\n                                                    editor.putString(mparticipantLists.getCi(), json);\r\n                                                    editor.apply();\r\n\r\n                                                }\r\n\r\n\r\n                                                participantLists.remove(participantLists.get(i));\r\n\r\n                                                AdapterParticipantList.this.notifyItemRemoved(i);\r\n\r\n\r\n                                                db.child(mContext.getString(R.string.dbname_users))\r\n                                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                        .child(mContext.getString(R.string.changedJoinedContest))\r\n                                                        .setValue(\"true\");\r\n\r\n\r\n                                                bottomSheetDialog.dismiss();\r\n                                            }\r\n                                        });\r\n\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            private void deleteUrl() {\r\n                                DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n\r\n                                //    Add newly Created ArrayList to Shared Preferences\r\n                                String json = sp.getString(mparticipantLists.getCi(), null);\r\n\r\n                                Type type = new TypeToken<ArrayList<ParticipantList>>() {\r\n                                }.getType();\r\n                                ArrayList<ParticipantList> participantList=new ArrayList<>();\r\n\r\n                                participantList = gson.fromJson(json, type);\r\n\r\n                                if (participantList==null){\r\n\r\n                                }else{\r\n                                    ArrayList<ParticipantList> participantList2=new ArrayList<>(participantList);\r\n\r\n\r\n                                    for (ParticipantList a:participantList){\r\n\r\n                                        if (a.getJi().equals(participantList.get(i).getJi())){\r\n                                            participantList2.remove(a);\r\n                                        }\r\n                                    }\r\n\r\n                                    participantList.remove(participantLists.get(i));\r\n\r\n                                    SharedPreferences.Editor editor = sp.edit();\r\n                                    json = gson.toJson(participantList2);\r\n                                    editor.putString(mparticipantLists.getCi(), json);\r\n                                    editor.apply();\r\n\r\n                                }\r\n\r\n\r\n                                participantLists.remove(participantLists.get(i));\r\n\r\n                                AdapterParticipantList.this.notifyItemRemoved(i);\r\n\r\n                                db.child(mContext.getString(R.string.dbname_users))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.changedJoinedContest))\r\n                                        .setValue(\"true\");\r\n                                bottomSheetDialog.dismiss();\r\n                            }\r\n\r\n\r\n                        });\r\n                        builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialog, int which) {\r\n                                dialog.dismiss();\r\n                            }\r\n                        });\r\n                        builder.create().show();\r\n\r\n\r\n                    }\r\n                });\r\n\r\n\r\n                name.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n\r\n                        Intent i = new Intent(mContext, profile.class);\r\n                        i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));\r\n\r\n                        i.putExtra(mContext.getString(R.string.intent_user),mparticipantLists.getUi());\r\n                        mContext.startActivity(i);\r\n                    }\r\n                });\r\n                username.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n\r\n                        Intent i = new Intent(mContext, profile.class);\r\n                        i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));\r\n\r\n                        i.putExtra(mContext.getString(R.string.intent_user), mparticipantLists.getUi());\r\n                        mContext.startActivity(i);\r\n                    }\r\n                });\r\n                profileview.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n\r\n                        Intent i = new Intent(mContext, profile.class);\r\n                        i.putExtra(mContext.getString(R.string.calling_activity), mContext.getString(R.string.home));\r\n\r\n                        i.putExtra(mContext.getString(R.string.intent_user), mparticipantLists.getUi());\r\n                        mContext.startActivity(i);\r\n                    }\r\n                });\r\n                submission.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        boolean ok=mparticipantLists.getMl().length()>23;\r\n                        boolean ifNull=mparticipantLists.getMl() == null ||mparticipantLists.getMl().equals(\"\");\r\n                        if (ifNull){\r\n                            Toast.makeText(mContext, \"Invalid Link\", Toast.LENGTH_SHORT).show();\r\n\r\n                        }else if (ok) {\r\n                            if (mparticipantLists.getMl().substring(8, 23).equals(\"firebasestorage\")) {\r\n                                Intent i = new Intent(mContext.getApplicationContext(), activity_view_media.class);\r\n                                i.putExtra(\"imageLink\", mparticipantLists.getMl());\r\n                                i.putExtra(\"view\", \"No\");\r\n\r\n                                mContext.startActivity(i);\r\n                            } else {\r\n                                try{\r\n                                    Uri uri = Uri.parse(mparticipantLists.getMl());\r\n                                    Intent intent = new Intent(Intent.ACTION_VIEW, uri);\r\n                                    mContext.startActivity(intent);\r\n\r\n                                }catch (ActivityNotFoundException e){\r\n                                    Toast.makeText(mContext, \"Invalid Link\", Toast.LENGTH_SHORT).show();\r\n                                    Log.e(SNTPClient.TAG, \"onClick: \"+ e.getMessage());\r\n                                }\r\n                            }\r\n                        }else {\r\n                            try{\r\n                                Uri uri = Uri.parse(mparticipantLists.getMl());\r\n                                Intent intent = new Intent(Intent.ACTION_VIEW, uri);\r\n                                mContext.startActivity(intent);\r\n\r\n                            }catch (ActivityNotFoundException e){\r\n                                Toast.makeText(mContext, \"Invalid Link\", Toast.LENGTH_SHORT).show();\r\n                                Log.e(SNTPClient.TAG, \"onClick: \"+ e.getMessage());\r\n                            }\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n                });\r\n                idcard.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        Intent i = new Intent(mContext.getApplicationContext(), activity_view_media.class);\r\n                        i.putExtra(\"imageLink\", mparticipantLists.getIl());\r\n                        i.putExtra(\"view\", \"No\");\r\n\r\n                        mContext.startActivity(i);\r\n\r\n                    }\r\n                });\r\n\r\n                bottomSheetDialog.setContentView(bottomSheetView);\r\n                bottomSheetDialog.show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getparticipantform(String userid, String joiningkey, String contestkey, TextView college, LinearLayout layout) {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(mContext.getString(R.string.dbname_contests))\r\n                .child(userid)\r\n                .child(mContext.getString(R.string.joined_contest))\r\n                .child(joiningkey)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        JoinForm joinForm = dataSnapshot.getValue(JoinForm.class);\r\n                        college1 = joinForm.getClg();\r\n                        String hostid = joinForm.getHst();\r\n                        DatabaseReference ref1 = FirebaseDatabase.getInstance().getReference();\r\n                        ref1.child(mContext.getString(R.string.dbname_contests))\r\n                                .child(hostid)\r\n                                .child(mContext.getString(R.string.created_contest))\r\n                                .child(contestkey)\r\n                                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                                        String openfor = dataSnapshot.child(mContext.getString(R.string.field_open_for)).getValue().toString();\r\n                                        if (openfor.equals(\"All\")) {\r\n                                            layout.setVisibility(View.GONE);\r\n                                        } else {\r\n                                            layout.setVisibility(View.VISIBLE);\r\n                                            college.setText(college1);\r\n                                        }\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                                    }\r\n                                });\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    public long getItemId(int position) {\r\n        ParticipantList form = participantLists.get(position);\r\n        return form.getJi().hashCode();\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return participantLists.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        private TextView username, time;\r\n        private DatabaseReference mReference;\r\n\r\n        private CircleImageView profile;\r\n\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            mReference = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n            profile = (CircleImageView) itemView.findViewById(R.id.profilePartCv);\r\n            username = itemView.findViewById(R.id.username);\r\n            time = itemView.findViewById(R.id.timeStamp);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private void getparticipantDetails(String userid, TextView username, CircleImageView profile) {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(mContext.getString(R.string.dbname_users))\r\n                .child(userid)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        users user = dataSnapshot.getValue(users.class);\r\n                        name1 = user.getDn();\r\n                        username1 = user.getU();\r\n                        profilelink = user.getPp();\r\n                        try {\r\n\r\n                            Glide.with(mContext)\r\n                                    .load(profilelink)\r\n                                    .placeholder(R.drawable.load)\r\n                                    .error(R.drawable.default_image2)\r\n                                    .placeholder(R.drawable.load)\r\n                                    .thumbnail(0.5f)\r\n                                    .into(profile);\r\n                        } catch (NullPointerException e) {\r\n                            Log.e(TAG, \"onDataChange: \" + e.getMessage());\r\n\r\n                        }\r\n\r\n                        username.setText(user.getU());\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/Adapters/AdapterParticipantList.java	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/java/com/orion/orion/Adapters/AdapterParticipantList.java	(date 1605881449258)
-@@ -493,7 +493,7 @@
-                         profilelink = user.getPp();
-                         try {
- 
--                            Glide.with(mContext)
-+                            Glide.with(mContext.getApplicationContext())
-                                     .load(profilelink)
-                                     .placeholder(R.drawable.load)
-                                     .error(R.drawable.default_image2)
-Index: app/src/main/res/layout/dialog_profile_link.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_margin=\"8dp\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:padding=\"8dp\"\r\n        android:paddingBottom=\"20dp\"\r\n        android:text=\"Enter Your Profile Link\"\r\n        android:textColor=\"@color/scheme8\"\r\n        android:textSize=\"16sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/edt_comment\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:background=\"@drawable/grey_border_bottom\"\r\n        android:hint=\"Enter link here\"\r\n        android:padding=\"8dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/textView\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/buttonSubmit\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:layout_marginEnd=\"8dp\"\r\n        android:layout_marginBottom=\"8dp\"\r\n        android:backgroundTint=\"@color/scheme8\"\r\n        android:text=\"ADD\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/edt_comment\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/buttonCancel\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"8dp\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:layout_marginBottom=\"8dp\"\r\n        android:text=\"Cancel\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@+id/edt_comment\" />\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/dialog_profile_link.xml	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/res/layout/dialog_profile_link.xml	(date 1605876488274)
-@@ -17,7 +17,6 @@
-         android:text="Enter Your Profile Link"
-         android:textColor="@color/scheme8"
-         android:textSize="16sp"
--        android:textStyle="bold"
-         app:layout_constraintEnd_toEndOf="parent"
-         app:layout_constraintStart_toStartOf="parent"
-         app:layout_constraintTop_toTopOf="parent" />
-@@ -29,7 +28,7 @@
-         android:layout_marginStart="8dp"
-         android:layout_marginTop="8dp"
-         android:layout_marginEnd="8dp"
--        android:background="@drawable/grey_border_bottom"
-+        android:background="@drawable/rectangular_border"
-         android:hint="Enter link here"
-         android:padding="8dp"
-         app:layout_constraintEnd_toEndOf="parent"
-@@ -45,6 +44,7 @@
-         android:layout_marginBottom="8dp"
-         android:backgroundTint="@color/scheme8"
-         android:text="ADD"
-+        android:textColor="@color/white"
-         app:layout_constraintBottom_toBottomOf="parent"
-         app:layout_constraintEnd_toEndOf="parent"
-         app:layout_constraintTop_toBottomOf="@+id/edt_comment" />
-@@ -57,6 +57,7 @@
-         android:layout_marginTop="8dp"
-         android:layout_marginBottom="8dp"
-         android:text="Cancel"
-+
-         app:layout_constraintBottom_toBottomOf="parent"
-         app:layout_constraintStart_toStartOf="parent"
-         app:layout_constraintTop_toBottomOf="@+id/edt_comment" />
-Index: app/src/main/java/com/orion/orion/contest/Contest_Evaluation/fragment_contest_overview.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion.contest.Contest_Evaluation;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\nimport android.os.Parcelable;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TableLayout;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.orion.orion.Adapters.AdapterRankList;\r\nimport com.orion.orion.Adapters.AdapterWinners;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.contest.ViewContestDetails;\r\nimport com.orion.orion.contest.ranking;\r\nimport com.orion.orion.models.ContestDetail;\r\nimport com.orion.orion.models.ParticipantList;\r\nimport com.orion.orion.models.juryMarks;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.profile;\r\nimport com.orion.orion.util.FirebaseMethods;\r\nimport com.orion.orion.util.SNTPClient;\r\nimport com.orion.orion.util.StringManipilation;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.Date;\r\nimport java.util.TimeZone;\r\n\r\nimport static com.android.volley.VolleyLog.TAG;\r\n\r\npublic class fragment_contest_overview extends Fragment {\r\n\r\n    private TableLayout juryTable, juryTable2;\r\n    private String joiningKey = \"\";\r\n    private RecyclerView rankRv;\r\n    private FirebaseMethods mFirebaseMethods;\r\n    private ArrayList<ParticipantList> participantLists;\r\n    private ArrayList<ParticipantList> participantLists2;\r\n    private RelativeLayout relWinner;\r\n\r\n    //    SP\r\n    private Gson gson;\r\n    private SharedPreferences sp;\r\n    private users user = new users();\r\n\r\n    public LinearLayout progress;\r\n    private RecyclerView winnerRv;\r\n    private Button pubBtn, pubBtn2;\r\n    private String timestamp = \"\";\r\n    boolean isPublicAndJuryVote = false;\r\n\r\n    private String Conteskey;\r\n\r\n\r\n    public fragment_contest_overview() {\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_contest_overview, container, false);\r\n\r\n        juryTable = view.findViewById(R.id.jurytable);\r\n        juryTable2 = view.findViewById(R.id.jurytable2);\r\n        pubBtn = view.findViewById(R.id.pubBtn);\r\n        pubBtn2 = view.findViewById(R.id.pubBtn2);\r\n        relWinner = view.findViewById(R.id.relWin);\r\n        ScrollView scrollView = view.findViewById(R.id.scroll);\r\n        TextView seeRank = view.findViewById(R.id.seeRank);\r\n        progress = view.findViewById(R.id.pro);\r\n\r\n        mFirebaseMethods = new FirebaseMethods(getActivity());\r\n\r\n        juryTable.setStretchAllColumns(true);\r\n        juryTable2.setStretchAllColumns(true);\r\n        Bundle b = getActivity().getIntent().getExtras();\r\n        Conteskey = b.getString(\"contestId\");\r\n\r\n        rankRv = view.findViewById(R.id.rankList);\r\n        rankRv.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());\r\n        rankRv.setLayoutManager(linearLayoutManager);\r\n\r\n        seeRank.setOnClickListener((View.OnClickListener) view1 -> {\r\n            Intent i = new Intent(getContext(), ranking.class);\r\n            Bundle args = new Bundle();\r\n            args.putParcelableArrayList(\"participant\", (ArrayList<? extends Parcelable>) participantLists);\r\n            i.putExtra(\"BUNDLE\", args);\r\n            startActivity(i);\r\n        });\r\n\r\n//          Initialize SharedPreference variables\r\n        sp = getContext().getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n\r\n        participantLists = new ArrayList<>();\r\n        participantLists2 = new ArrayList<>();\r\n\r\n//        **********************************************************\r\n\r\n        winnerRv = view.findViewById(R.id.recyclerWinner);\r\n        winnerRv.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager1 = new LinearLayoutManager(getContext());\r\n        winnerRv.setLayoutManager(linearLayoutManager1);\r\n\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n                //*************************************************************************\r\n                String currentTime = StringManipilation.getTime(rawDate);\r\n                @SuppressLint(\"SimpleDateFormat\") java.text.DateFormat formatter1 = new SimpleDateFormat(\"dd-MM-yyyy\");\r\n                Date date1 = null;\r\n                try {\r\n                    date1 = (Date) formatter1.parse(currentTime);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                assert date1 != null;\r\n                timestamp = String.valueOf(date1.getTime());\r\n\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                ref.child(getString(R.string.dbname_contestlist))\r\n                        .child(Conteskey)\r\n                        .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                                if (dataSnapshot.exists()) {\r\n                                    ContestDetail contestDetail = dataSnapshot.getValue(ContestDetail.class);\r\n                                    assert contestDetail != null;\r\n                                    String WinDec = contestDetail.getWd();\r\n                                    boolean result = contestDetail.getR();\r\n                                    if (contestDetail.getVt().equals(\"Jury and Public\")) {\r\n                                        isPublicAndJuryVote = true;\r\n                                    }\r\n\r\n\r\n                                    @SuppressLint(\"SimpleDateFormat\") java.text.DateFormat formatter = new SimpleDateFormat(\"dd-MM-yyyy\");\r\n                                    Date date = null;\r\n                                    try {\r\n                                        date = (Date) formatter.parse(WinDec);\r\n                                    } catch (ParseException e) {\r\n                                        e.printStackTrace();\r\n                                    }\r\n                                    assert date != null;\r\n                                    String winD = String.valueOf(date.getTime());\r\n                                    Thread thread = new Thread() {\r\n                                        @Override\r\n                                        public void run() {\r\n                                            try {\r\n                                                synchronized (this) {\r\n                                                    wait(1000);\r\n\r\n                                                    getActivity().runOnUiThread(() -> {\r\n                                                        if (result) {\r\n                                                            pubBtn2.setVisibility(View.VISIBLE);\r\n                                                            relWinner.setVisibility(View.VISIBLE);\r\n                                                        } else {\r\n                                                            if ((Long.parseLong(winD) + 172800000) < Long.parseLong(timestamp)) {\r\n                                                                publishResultAutomatically();\r\n                                                            } else if (Long.parseLong(winD) <= Long.parseLong(timestamp)) {\r\n                                                                pubBtn.setVisibility(View.VISIBLE);\r\n                                                                relWinner.setVisibility(View.VISIBLE);\r\n                                                            } else {\r\n                                                                relWinner.setVisibility(View.GONE);\r\n                                                            }\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            } catch (InterruptedException e) {\r\n                                                e.printStackTrace();\r\n                                            }\r\n                                        }\r\n\r\n                                        ;\r\n                                    };\r\n                                    thread.start();\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                            }\r\n                        });\r\n\r\n                Log.e(SNTPClient.TAG, rawDate);\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onError(Exception e) {\r\n                Log.e(SNTPClient.TAG, e.getMessage());\r\n            }\r\n        });\r\n\r\n        pubBtn.setOnClickListener(v -> {\r\n            AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n            builder.setTitle(\"Publish Result\");\r\n            builder.setMessage(\"Are you sure, you want to publish result?\");\r\n//                set buttons\r\n            builder.setPositiveButton(\"Publish\", (dialog, which) -> getWinners(participantLists, true));\r\n            builder.setNegativeButton(\"Not now\", (dialog, which) -> dialog.dismiss());\r\n            builder.create().show();\r\n\r\n        });\r\n        getParticipantListFromSP();\r\n        return view;\r\n    }\r\n\r\n    private void publishResultAutomatically() {\r\n        progress.setVisibility(View.VISIBLE);\r\n\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(getString(R.string.dbname_participantList))\r\n                .child(Conteskey)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        int x = 0;\r\n                        ArrayList<ParticipantList> participantLists = new ArrayList<>();\r\n                        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                            x++;\r\n                            participantLists.add(snapshot.getValue(ParticipantList.class));\r\n                            if (x == dataSnapshot.getChildrenCount()) {\r\n                                getWinners(participantLists, false);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void getWinners(ArrayList<ParticipantList> participantLists, boolean manual) {\r\n        Collections.sort(participantLists, (o1, o2) -> Integer.compare(o1.getTs(), o2.getTs()));\r\n        Collections.reverse(participantLists);\r\n        try {\r\n            for (int x = 0; x < 3; x++) {\r\n                participantLists2.add(participantLists.get(x));\r\n            }\r\n        } catch (IndexOutOfBoundsException e) {\r\n        }\r\n        mFirebaseMethods.publishResut(manual, Conteskey, participantLists, progress, getActivity(), participantLists2);\r\n        pubBtn2.setVisibility(View.VISIBLE);\r\n        relWinner.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n\r\n    private void juryMarksTable(String conteskey) {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(getString(R.string.dbname_participantList))\r\n                .child(conteskey)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                            ParticipantList    participantList = snapshot.getValue(ParticipantList.class);\r\n                            assert participantList != null;\r\n                            joiningKey = participantList.getJi();\r\n                            DatabaseReference ref2 = FirebaseDatabase.getInstance().getReference();\r\n                            ParticipantList finalParticipantList = participantList;\r\n                            ref2.child(getString(R.string.dbname_participantList))\r\n                                    .child(conteskey)\r\n                                    .child(joiningKey)\r\n                                    .child(getString(R.string.juryMarks))\r\n                                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                                            juryMarks  juryMarks = dataSnapshot.getValue(juryMarks.class);\r\n                                            TableRow tbrow = new TableRow(getActivity());\r\n                                            tbrow.setLayoutParams(new TableLayout.LayoutParams(0, TableRow.LayoutParams.WRAP_CONTENT, 1f));\r\n                                            tbrow.setWeightSum(5);\r\n                                            TextView t1v = new TextView(getActivity());\r\n                                            getU(finalParticipantList.getUi(), t1v);\r\n                                            t1v.setOnClickListener(v -> {\r\n                                                DatabaseReference ref =FirebaseDatabase.getInstance().getReference();\r\n\r\n                                                Query userquery = ref\r\n                                                        .child(getString(R.string.dbname_username))\r\n                                                        .child(t1v.getText().toString());\r\n                                                userquery.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                                    @Override\r\n                                                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                                                        if (dataSnapshot.exists()) {\r\n                                                           String username = dataSnapshot.getValue().toString();\r\n\r\n                                                            Intent i = new Intent(getContext(), profile.class);\r\n                                                            i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                                                            i.putExtra(getString(R.string.intent_user), username);\r\n                                                            startActivity(i);\r\n\r\n\r\n                                                        }\r\n\r\n                                                    }\r\n\r\n\r\n                                                    @Override\r\n                                                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                                                        Log.d(TAG, \"Query Cancelled\");\r\n                                                    }\r\n                                                });\r\n                                            });\r\n                                            t1v.setTextColor(Color.RED);\r\n                                            t1v.setGravity(Gravity.CENTER);\r\n                                            tbrow.addView(t1v);\r\n                                            TextView t2v = new TextView(getActivity());\r\n                                            assert juryMarks != null;\r\n                                            t2v.setText(juryMarks.getJ1());\r\n                                            t2v.setTextColor(Color.BLACK);\r\n                                            t2v.setGravity(Gravity.CENTER);\r\n                                            tbrow.addView(t2v);\r\n                                            TextView t3v = new TextView(getActivity());\r\n                                            t3v.setText(juryMarks.getJ2());\r\n                                            t3v.setTextColor(Color.BLACK);\r\n                                            t3v.setGravity(Gravity.CENTER);\r\n                                            tbrow.addView(t3v);\r\n                                            TextView t4v = new TextView(getActivity());\r\n                                            t4v.setText(juryMarks.getJ3());\r\n                                            t4v.setTextColor(Color.BLACK);\r\n                                            t4v.setGravity(Gravity.CENTER);\r\n                                            tbrow.addView(t4v);\r\n                                            TextView t5v = new TextView(getActivity());\r\n                                            long x = 0, y = 0, z = 0;\r\n                                            if (juryMarks.getJ1().equals(\"\")) x = 0;\r\n                                            else x = Long.parseLong(juryMarks.getJ1());\r\n                                            if (juryMarks.getJ2().equals(\"\")) y = 0;\r\n                                            else y = Long.parseLong(juryMarks.getJ2());\r\n                                            if (juryMarks.getJ3().equals(\"\")) z = 0;\r\n                                            else z = Long.parseLong(juryMarks.getJ3());\r\n                                            long total = x + y + z;\r\n                                            t5v.setText(String.valueOf(total));\r\n                                            t5v.setTextColor(Color.BLACK);\r\n                                            t5v.setMaxLines(1);\r\n                                            t5v.setGravity(Gravity.CENTER);\r\n                                            tbrow.addView(t5v);\r\n                                            juryTable.addView(tbrow);\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void juryAndPublicMarksTable(String contestkey) {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(getString(R.string.dbname_participantList))\r\n                .child(contestkey)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                            ParticipantList participantList = new ParticipantList();\r\n                            participantList = snapshot.getValue(ParticipantList.class);\r\n                            assert participantList != null;\r\n                            joiningKey = participantList.getJi().toString();\r\n                            DatabaseReference ref2 = FirebaseDatabase.getInstance().getReference();\r\n                            ParticipantList finalParticipantList = participantList;\r\n                            ref2.child(getString(R.string.dbname_participantList))\r\n                                    .child(contestkey)\r\n                                    .child(joiningKey)\r\n                                    .child(getString(R.string.juryMarks))\r\n                                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                                            juryMarks juryMarks = new juryMarks();\r\n                                            juryMarks = dataSnapshot.getValue(juryMarks.class);\r\n                                            TableRow tbrow = new TableRow(getActivity());\r\n                                            tbrow.setLayoutParams(new TableLayout.LayoutParams(0, TableRow.LayoutParams.WRAP_CONTENT, 1f));\r\n                                            tbrow.setWeightSum(5);\r\n                                            TextView t1v = new TextView(getActivity());\r\n                                            getU(finalParticipantList.getUi(), t1v);\r\n                                            t1v.setOnClickListener(v -> {\r\n                                                DatabaseReference ref =FirebaseDatabase.getInstance().getReference();\r\n\r\n                                                Query userquery = ref\r\n                                                        .child(getString(R.string.dbname_username))\r\n                                                        .child(t1v.getText().toString());\r\n                                                userquery.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                                    @Override\r\n                                                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                                                        if (dataSnapshot.exists()) {\r\n                                                            String username = dataSnapshot.getValue().toString();\r\n\r\n                                                            Intent i = new Intent(getContext(), profile.class);\r\n                                                            i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                                                            i.putExtra(getString(R.string.intent_user), username);\r\n                                                            startActivity(i);\r\n\r\n\r\n                                                        }\r\n\r\n                                                    }\r\n\r\n\r\n                                                    @Override\r\n                                                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                                                        Log.d(TAG, \"Query Cancelled\");\r\n                                                    }\r\n                                                });\r\n                                            });\r\n                                            t1v.setTextColor(Color.RED);\r\n                                            t1v.setGravity(Gravity.CENTER);\r\n                                            tbrow.addView(t1v);\r\n                                            TextView t2v = new TextView(getActivity());\r\n                                            long t = 0, o = 0, p = 0;\r\n                                            if (juryMarks.getJ1().equals(\"\")) t = 0;\r\n                                            else t = Long.parseLong(juryMarks.getJ1());\r\n                                            if (juryMarks.getJ2().equals(\"\")) o = 0;\r\n                                            else o = Long.parseLong(juryMarks.getJ2());\r\n                                            if (juryMarks.getJ3().equals(\"\")) p = 0;\r\n                                            else p = Long.parseLong(juryMarks.getJ3());\r\n                                            long total = t + o + p;\r\n                                            t2v.setText(String.valueOf(total));\r\n                                            t2v.setTextColor(Color.BLACK);\r\n                                            t2v.setGravity(Gravity.CENTER);\r\n                                            tbrow.addView(t2v);\r\n                                            TextView t3v = new TextView(getActivity());\r\n                                            t3v.setTextColor(Color.BLACK);\r\n                                            t3v.setGravity(Gravity.CENTER);\r\n                                            tbrow.addView(t3v);\r\n                                            TextView t4v = new TextView(getActivity());\r\n                                            t4v.setTextColor(Color.BLACK);\r\n                                            t4v.setGravity(Gravity.CENTER);\r\n                                            getVoteCount(finalParticipantList.getJi(), t3v, contestkey, t4v, t2v);\r\n                                            tbrow.addView(t4v);\r\n                                            juryTable2.addView(tbrow);\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                                        }\r\n                                    });\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void getTotal(TextView t2v, TextView t3v, TextView t4v, String contestkey, String Joiningkey) {\r\n        try {\r\n            long a = Long.parseLong(t2v.getText().toString());\r\n            long b = Long.parseLong(t3v.getText().toString());\r\n            long c;\r\n            if (isPublicAndJuryVote) c = (a + b) / 2;\r\n            else c = (a + b);\r\n            t4v.setText(String.valueOf(c));\r\n            DatabaseReference ref4 = FirebaseDatabase.getInstance().getReference();\r\n            ref4.child(getString(R.string.dbname_participantList))\r\n                    .child(contestkey)\r\n                    .child(Joiningkey)\r\n                    .child(getString(R.string.field_total_score))\r\n                    .setValue((int) c);\r\n        } catch (NumberFormatException ignored) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void getVoteCount(String joiningKey, TextView t3v, String contestkey, TextView t4v, TextView t2v) {\r\n        DatabaseReference ref4 = FirebaseDatabase.getInstance().getReference();\r\n        ref4.child(getString(R.string.dbname_participantList))\r\n                .child(contestkey)\r\n                .child(joiningKey)\r\n                .child(getString(R.string.voting_list))\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        long i = dataSnapshot.getChildrenCount();\r\n                        t3v.setText(String.valueOf(i));\r\n                        getTotal(t2v, t3v, t4v, contestkey, joiningKey);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void getU(String userid, TextView textView) {\r\n        DatabaseReference ref5 = FirebaseDatabase.getInstance().getReference();\r\n        ref5.child(getString(R.string.dbname_users)).\r\n                child(userid).\r\n                child(getString(R.string.field_username)).\r\n                addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                            String user = dataSnapshot.getValue().toString();\r\n                            textView.setText(user);\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n    private void getRank() {\r\n        participantLists2.clear();\r\n        Collections.sort(participantLists, (o1, o2) -> Integer.compare(o1.getTs(), o2.getTs()));\r\n        Collections.reverse(participantLists);\r\n        try {\r\n            for (int x = 0; x < 3; x++) participantLists2.add(participantLists.get(x));\r\n        } catch (IndexOutOfBoundsException e) {\r\n            Log.e(TAG, \"onDataChange: \" + e.getMessage());\r\n        }\r\n\r\n        displayParticipantRank();\r\n\r\n        AdapterWinners winnerList = new AdapterWinners(getContext(), participantLists2);\r\n        winnerList.setHasStableIds(true);\r\n\r\n        winnerRv.setAdapter(winnerList);\r\n    }\r\n\r\n    //  fetching ParticipantList  from SharedPreferences\r\n    private void getParticipantListFromSP() {\r\n        String json = sp.getString(Conteskey, null);\r\n\r\n        Type type = new TypeToken<ArrayList<ParticipantList>>() {\r\n        }.getType();\r\n        participantLists = gson.fromJson(json, type);\r\n        if (participantLists == null) {    //        if no arrayList is present\r\n            participantLists = new ArrayList<>();\r\n        }\r\n        getRank();\r\n        juryMarksTable(Conteskey);\r\n        juryAndPublicMarksTable(Conteskey);\r\n\r\n    }\r\n\r\n    private void displayParticipantRank() {\r\n        ArrayList<ParticipantList> paginatedParticipantLists = new ArrayList<>();\r\n        if (participantLists != null) {\r\n            try {\r\n                int iteration = participantLists.size();\r\n                if (iteration > 10) iteration = 10;\r\n                int mResults = 10;\r\n                for (int i = 0; i < iteration; i++)\r\n                    paginatedParticipantLists.add(participantLists.get(i));\r\n                AdapterRankList rankList = new AdapterRankList(getContext(), paginatedParticipantLists);\r\n                rankList.setHasStableIds(true);\r\n                rankRv.setAdapter(rankList);\r\n\r\n            } catch (NullPointerException e) {\r\n                Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n            } catch (IndexOutOfBoundsException e) {\r\n                Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/contest/Contest_Evaluation/fragment_contest_overview.java	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/java/com/orion/orion/contest/Contest_Evaluation/fragment_contest_overview.java	(date 1605875861639)
-@@ -185,31 +185,36 @@
-                                                 synchronized (this) {
-                                                     wait(1000);
- 
--                                                    getActivity().runOnUiThread(() -> {
--                                                        if (result) {
--                                                            pubBtn2.setVisibility(View.VISIBLE);
--                                                            relWinner.setVisibility(View.VISIBLE);
--                                                        } else {
--                                                            if ((Long.parseLong(winD) + 172800000) < Long.parseLong(timestamp)) {
--                                                                publishResultAutomatically();
--                                                            } else if (Long.parseLong(winD) <= Long.parseLong(timestamp)) {
--                                                                pubBtn.setVisibility(View.VISIBLE);
--                                                                relWinner.setVisibility(View.VISIBLE);
--                                                            } else {
--                                                                relWinner.setVisibility(View.GONE);
--                                                            }
--                                                        }
--                                                    });
-+                                                    if (getActivity() != null) {
-+                                                        getActivity().runOnUiThread(() -> {
-+                                                            if (result) {
-+                                                                pubBtn2.setVisibility(View.VISIBLE);
-+                                                                relWinner.setVisibility(View.VISIBLE);
-+                                                            } else {
-+                                                                if ((Long.parseLong(winD) + 172800000) < Long.parseLong(timestamp)) {
-+                                                                    publishResultAutomatically();
-+                                                                } else if (Long.parseLong(winD) <= Long.parseLong(timestamp)) {
-+                                                                    pubBtn.setVisibility(View.VISIBLE);
-+                                                                    relWinner.setVisibility(View.VISIBLE);
-+                                                                } else {
-+                                                                    relWinner.setVisibility(View.GONE);
-+                                                                }
-+                                                            }
-+                                                        });
-+                                                    }
-                                                 }
--                                            } catch (InterruptedException e) {
--                                                e.printStackTrace();
--                                            }
--                                        }
-+                                                } catch(InterruptedException e){
-+                                                    e.printStackTrace();
-+                                                }
-+                                            }
- 
-+                                            ;
-+                                        }
-+
-                                         ;
--                                    };
-                                     thread.start();
--                                }
-+                                    }
-+
-                             }
- 
-                             @Override
-Index: app/src/main/res/layout/fragment_editprofile.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/white\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/topEditProfile\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <com.google.android.material.appbar.AppBarLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:backgroundTint=\"@color/white\">\r\n\r\n                <androidx.appcompat.widget.Toolbar\r\n                    android:id=\"@+id/profileToolbar\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\">\r\n\r\n\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/profileName\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\">\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/backarrow\"\r\n                            android:layout_width=\"30dp\"\r\n                            android:layout_height=\"30dp\"\r\n                            android:layout_centerVertical=\"true\"\r\n                            android:layout_marginStart=\"10dp\"\r\n                            android:layout_marginLeft=\"10dp\"\r\n                            android:layout_marginEnd=\"20dp\"\r\n                            android:layout_marginRight=\"20dp\"\r\n                            android:src=\"@drawable/ic_back_black_arrow\" />\r\n\r\n                        <TextView\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_centerHorizontal=\"true\"\r\n                            android:layout_centerVertical=\"true\"\r\n                            android:layout_marginLeft=\"5dp\"\r\n                            android:text=\"Edit Profile\"\r\n                            android:textColor=\"#000000\" />\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/saveChanges\"\r\n                            android:layout_width=\"30dp\"\r\n                            android:layout_height=\"30dp\"\r\n                            android:layout_alignParentRight=\"true\"\r\n                            android:layout_centerVertical=\"true\"\r\n                            android:layout_marginStart=\"10dp\"\r\n                            android:layout_marginLeft=\"10dp\"\r\n                            android:layout_marginEnd=\"20dp\"\r\n                            android:layout_marginRight=\"20dp\"\r\n                            android:src=\"@drawable/ic_checkmark\" />\r\n\r\n\r\n                    </RelativeLayout>\r\n                </androidx.appcompat.widget.Toolbar>\r\n\r\n\r\n            </com.google.android.material.appbar.AppBarLayout>\r\n\r\n        </RelativeLayout>\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/centerEditProfile\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_below=\"@+id/topEditProfile\"\r\n            android:paddingStart=\"10dp\"\r\n            android:paddingEnd=\"10dp\">\r\n\r\n            <ScrollView\r\n                android:layout_width=\"match_parent\"\r\n\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <RelativeLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@color/white\"\r\n                    android:padding=\"2dp\">\r\n\r\n                    <de.hdodenhof.circleimageview.CircleImageView\r\n                        android:id=\"@+id/profile_photo\"\r\n                        android:layout_width=\"120dp\"\r\n                        android:layout_height=\"120dp\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        android:layout_marginTop=\"20dp\"\r\n                        app:civ_border_color=\"@color/scheme8\"\r\n                        app:civ_border_width=\"2dp\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/change_Profile_Photo\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_below=\"@+id/profile_photo\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        android:text=\"Change Photo\"\r\n                        android:textColor=\"#03A9F4\"\r\n                        android:textSize=\"16sp\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/pi\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_below=\"@id/change_Profile_Photo\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        android:layout_marginTop=\"30dp\"\r\n                        android:gravity=\"start\"\r\n                        android:text=\"Personal Info\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"22dp\" />\r\n                    <!--    username-->\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/relLayout1\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"50dp\"\r\n                        android:layout_below=\"@+id/pi\"\r\n                        android:background=\"@color/white\">\r\n\r\n\r\n                        <EditText\r\n                            android:id=\"@+id/username\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_centerVertical=\"true\"\r\n                            android:background=\"@drawable/rectangular_border\"\r\n\r\n                            android:hint=\"Username\"\r\n                            android:inputType=\"textNoSuggestions\"\r\n\r\n                            android:padding=\"10dp\" />\r\n\r\n                    </RelativeLayout>\r\n                    <!--    display name-->\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/relLayout2\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"50dp\"\r\n                        android:layout_below=\"@+id/relLayout1\"\r\n                        android:layout_marginTop=\"15dp\"\r\n                        android:background=\"@color/white\">\r\n\r\n\r\n                        <EditText\r\n                            android:id=\"@+id/display_name\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_centerVertical=\"true\"\r\n                            android:background=\"@drawable/rectangular_border\"\r\n                            android:hint=\"Display name\"\r\n                            android:inputType=\"textNoSuggestions\"\r\n                            android:padding=\"10dp\" />\r\n\r\n                    </RelativeLayout>\r\n\r\n\r\n                    <!--    website-->\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/relLayout3\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_below=\"@+id/relLayout2\"\r\n                        android:layout_marginTop=\"15dp\"\r\n                        android:background=\"@color/white\">\r\n\r\n                        <EditText\r\n                            android:id=\"@+id/description\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_centerVertical=\"true\"\r\n                            android:layout_alignParentEnd=\"true\"\r\n                            android:background=\"@drawable/rectangular_border\"\r\n                            android:hint=\"Sescription\"\r\n                            android:maxLines=\"5\"\r\n                            android:inputType=\"textNoSuggestions\"\r\n                            android:padding=\"10dp\" />\r\n\r\n                    </RelativeLayout>\r\n\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/relLayout4\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_below=\"@+id/relLayout3\"\r\n                        android:layout_marginTop=\"15dp\"\r\n                        android:background=\"@color/white\">\r\n\r\n                        <EditText\r\n                            android:id=\"@+id/externalLinks\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_centerVertical=\"true\"\r\n                            android:layout_alignParentEnd=\"true\"\r\n                            android:background=\"@drawable/rectangular_border\"\r\n                            android:hint=\"External Links\"\r\n                            android:maxLines=\"5\"\r\n                            android:inputType=\"textNoSuggestions\"\r\n                            android:padding=\"10dp\" />\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/addLink\"\r\n                            android:layout_width=\"50dp\"\r\n                            android:layout_height=\"50dp\"\r\n                            android:padding=\"5dp\"\r\n                            android:src=\"@drawable/ic_baseline_add_24\"\r\n                            android:layout_alignParentEnd=\"true\"\r\n                            android:layout_alignParentTop=\"true\"\r\n                            android:layout_alignParentBottom=\"true\"\r\n                            app:tint=\"@color/scheme8\" />\r\n\r\n                    </RelativeLayout>\r\n                    <RelativeLayout\r\n                        android:paddingStart=\"10dp\"\r\n                        android:id=\"@+id/relLayout5\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:layout_below=\"@+id/relLayout4\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        tools:ignore=\"RtlSymmetry\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/link1\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:gravity=\"center\"\r\n                            android:layout_alignParentStart=\"true\"\r\n                            android:textColor=\"@color/dot_dark_screen3\"\r\n                            android:text=\"External Links\"\r\n                            android:textSize=\"16sp\"\r\n                            android:inputType=\"textNoSuggestions\" />\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/link1delete\"\r\n                            android:layout_width=\"24dp\"\r\n                            android:layout_height=\"24dp\"\r\n                            android:layout_alignParentTop=\"true\"\r\n                            android:layout_alignParentBottom=\"true\"\r\n                            android:padding=\"5dp\"\r\n                            android:layout_marginStart=\"15dp\"\r\n                            android:layout_toRightOf=\"@+id/link1\"\r\n                            android:src=\"@drawable/ic_baseline_close_24\" />\r\n\r\n                    </RelativeLayout>\r\n                    <RelativeLayout\r\n                        android:paddingStart=\"10dp\"\r\n                        android:id=\"@+id/relLayout6\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:layout_below=\"@+id/relLayout5\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        tools:ignore=\"RtlSymmetry\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/link2\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_alignParentStart=\"true\"\r\n                            android:gravity=\"center\"\r\n                            android:inputType=\"textNoSuggestions\"\r\n                            android:text=\"External Links\"\r\n                            android:textColor=\"@color/dot_dark_screen3\"\r\n                            android:textSize=\"16sp\" />\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/link2delete\"\r\n                            android:layout_width=\"24dp\"\r\n                            android:layout_height=\"24dp\"\r\n                            android:layout_alignParentTop=\"true\"\r\n                            android:layout_alignParentBottom=\"true\"\r\n                            android:padding=\"5dp\"\r\n                            android:layout_marginStart=\"15dp\"\r\n                            android:layout_toRightOf=\"@+id/link2\"\r\n                            android:src=\"@drawable/ic_baseline_close_24\" />\r\n\r\n                    </RelativeLayout>\r\n                    <RelativeLayout\r\n                        android:paddingStart=\"10dp\"\r\n                        android:id=\"@+id/relLayout7\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:layout_below=\"@+id/relLayout6\"\r\n                        android:layout_marginTop=\"5dp\"\r\n                        tools:ignore=\"RtlSymmetry\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/link3\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:gravity=\"center\"\r\n                            android:layout_alignParentStart=\"true\"\r\n                            android:textColor=\"@color/dot_dark_screen3\"\r\n                            android:text=\"External Links\"\r\n                            android:textSize=\"16sp\"\r\n                            android:inputType=\"textNoSuggestions\" />\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/link3delete\"\r\n                            android:layout_width=\"24dp\"\r\n                            android:layout_height=\"24dp\"\r\n                            android:layout_alignParentTop=\"true\"\r\n                            android:layout_alignParentBottom=\"true\"\r\n                            android:padding=\"5dp\"\r\n                            android:layout_marginStart=\"15dp\"\r\n                            android:layout_toRightOf=\"@+id/link3\"\r\n                            android:src=\"@drawable/ic_baseline_close_24\" />\r\n\r\n                    </RelativeLayout>\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/pl\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_below=\"@id/relLayout7\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        android:layout_marginTop=\"50dp\"\r\n                        android:background=\"@drawable/grey_border_bottom\"\r\n                        android:gravity=\"start\"\r\n                        android:text=\"Connections\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"22dp\" />\r\n\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/profileLinks\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_below=\"@id/pl\"\r\n                        android:layout_alignParentStart=\"true\"\r\n                        android:layout_alignParentEnd=\"true\"\r\n                        android:layout_marginTop=\"10dp\">\r\n\r\n                        <LinearLayout\r\n                            android:id=\"@+id/linksLine\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"horizontal\"\r\n                            android:weightSum=\"5\">\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/gmail_link\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:orientation=\"vertical\"\r\n                                android:weightSum=\"10\">\r\n\r\n                                <ImageView\r\n                                    android:layout_width=\"40dp\"\r\n                                    android:layout_height=\"40dp\"\r\n                                    android:layout_weight=\"3\"\r\n                                    android:elevation=\"3dp\"\r\n                                    android:src=\"@drawable/ic_gmail_logo\"\r\n                                    tools:ignore=\"NestedWeights\" />\r\n\r\n\r\n                            </LinearLayout>\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/instagram_link\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:orientation=\"vertical\"\r\n                                android:weightSum=\"10\">\r\n\r\n                                <ImageView\r\n                                    android:layout_width=\"40dp\"\r\n                                    android:layout_height=\"40dp\"\r\n                                    android:layout_weight=\"3\"\r\n                                    android:elevation=\"3dp\"\r\n                                    android:src=\"@drawable/ic_insta_logo\"\r\n                                    tools:ignore=\"NestedWeights\" />\r\n\r\n\r\n                            </LinearLayout>\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/facebook_link\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:orientation=\"vertical\"\r\n                                android:weightSum=\"15\">\r\n\r\n                                <ImageView\r\n                                    android:layout_width=\"40dp\"\r\n                                    android:layout_height=\"40dp\"\r\n                                    android:layout_weight=\"3\"\r\n                                    android:elevation=\"3dp\"\r\n                                    android:src=\"@drawable/ic_fb_logo\"\r\n                                    tools:ignore=\"NestedWeights\" />\r\n\r\n\r\n                            </LinearLayout>\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/twitter_link\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:orientation=\"vertical\"\r\n                                android:weightSum=\"10\">\r\n\r\n                                <ImageView\r\n                                    android:layout_width=\"40dp\"\r\n                                    android:layout_height=\"40dp\"\r\n                                    android:layout_weight=\"3\"\r\n                                    android:elevation=\"3dp\"\r\n                                    android:src=\"@drawable/ic_twitter_logo\"\r\n                                    tools:ignore=\"NestedWeights\" />\r\n\r\n                            </LinearLayout>\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/whatsapp_link\"\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:orientation=\"vertical\"\r\n                                android:weightSum=\"10\">\r\n\r\n                                <ImageView\r\n                                    android:layout_width=\"40dp\"\r\n                                    android:layout_height=\"40dp\"\r\n                                    android:layout_weight=\"3\"\r\n                                    android:elevation=\"3dp\"\r\n                                    android:src=\"@drawable/ic_whatsapp_logo\"\r\n                                    tools:ignore=\"NestedWeights\" />\r\n\r\n\r\n                            </LinearLayout>\r\n                        </LinearLayout>\r\n\r\n                    </RelativeLayout>\r\n\r\n\r\n                </RelativeLayout>\r\n            </ScrollView>\r\n\r\n        </RelativeLayout>\r\n    </RelativeLayout>\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_editprofile.xml	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/res/layout/fragment_editprofile.xml	(date 1605876542961)
-@@ -345,6 +345,7 @@
-                             android:layout_width="match_parent"
-                             android:layout_height="wrap_content"
-                             android:orientation="horizontal"
-+                            android:layout_marginBottom="20dp"
-                             android:weightSum="5">
- 
-                             <LinearLayout
-Index: app/src/main/res/layout/activity_post_photo.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/white\"\r\n    tools:context=\".profile.PostPhotoActivity\">\r\n\r\n    <com.google.android.material.appbar.AppBarLayout\r\n        android:id=\"@+id/profileToolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:background=\"@drawable/white_border\">\r\n\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/backarrow\"\r\n                    android:layout_width=\"35dp\"\r\n                    android:layout_height=\"35dp\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginEnd=\"20dp\"\r\n                    android:layout_marginRight=\"20dp\"\r\n                    android:src=\"@drawable/ic_back_black_arrow\" />\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginLeft=\"5dp\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:text=\"Post Photo\"\r\n                    android:textColor=\"#000000\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/post\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_alignParentRight=\"true\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginRight=\"15dp\"\r\n                    android:text=\"Post\"\r\n                    android:textColor=\"@color/scheme8\"\r\n                    android:textSize=\"18sp\"\r\n                    />\r\n\r\n\r\n            </RelativeLayout>\r\n        </androidx.appcompat.widget.Toolbar>\r\n    </com.google.android.material.appbar.AppBarLayout>\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/profileToolbar\"\r\n        android:layout_marginLeft=\"15dp\"\r\n        android:layout_marginRight=\"15dp\"\r\n        android:layout_marginBottom=\"15dp\"\r\n        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\r\n\r\n        <com.google.android.material.textfield.TextInputEditText\r\n            android:id=\"@+id/inputCaption\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_below=\"@+id/imageshare\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:layout_marginBottom=\"20dp\"\r\n            android:backgroundTint=\"@color/white\"\r\n\r\n            android:hint=\"Enter and Interesting Title or Caption\"\r\n            android:imeOptions=\"actionNext\"\r\n            android:inputType=\"textFilter\"\r\n            android:textColor=\"@color/black\"\r\n            android:textColorHint=\"@color/grey\"\r\n            android:textSize=\"18sp\" />\r\n\r\n        <View\r\n            android:id=\"@+id/captionLine\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"2dp\"\r\n            android:layout_below=\"@+id/inputCaption\"\r\n            android:background=\"#E5E6EB\" />\r\n\r\n        <com.orion.orion.util.SquareImageView\r\n            android:id=\"@+id/imageshare\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerHorizontal=\"true\"/>\r\n\r\n        <com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton\r\n            android:id=\"@+id/fab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"bottom|end\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:text=\"Pick Photo\"\r\n            android:layout_margin=\"20dp\"\r\n            android:textAllCaps=\"false\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            app:backgroundTint=\"@color/scheme8\"\r\n            app:iconTint=\"@color/white\" />\r\n\r\n    </RelativeLayout>\r\n</RelativeLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/activity_post_photo.xml	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/res/layout/activity_post_photo.xml	(date 1605874747852)
-@@ -76,7 +76,7 @@
-             android:layout_marginBottom="20dp"
-             android:backgroundTint="@color/white"
- 
--            android:hint="Enter and Interesting Title or Caption"
-+            android:hint="Enter Caption"
-             android:imeOptions="actionNext"
-             android:inputType="textFilter"
-             android:textColor="@color/black"
-Index: app/src/main/res/values/strings.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><resources>\r\n    <color name=\"gray_scale\">#8affffff</color>\r\n    <color name=\"progress_max_active\">@color/white</color>\r\n    <color name=\"progress_primary\">@color/white</color>\r\n    <color name=\"progress_secondary\">@color/gray_scale</color>\r\n    <declare-styleable name=\"StoriesProgressView2\">\r\n        <attr name=\"progressCount\" format=\"integer|reference\" />\r\n    </declare-styleable>\r\n\r\n    <dimen name=\"progress_bar_height\">2dp</dimen>\r\n    <string name=\"app_name\">orion</string>\r\n\r\n    <!--    Databases-->\r\n\r\n    <string name=\"edit_profile\">Edit Pofile</string>\r\n    <string name=\"sign_out\">Sign Out</string>\r\n    <string name=\"profie_fragment\">Profile</string>\r\n    <string name=\"view_post_fragment\">View Post</string>\r\n    <string name=\"calling_activity\">calling_activity</string>\r\n    <string name=\"profile_activity\">profile_activity</string>\r\n\r\n    <string name=\"confirm_password_dialog\">ConfirmPasswordDialog</string>\r\n\r\n\r\n    <string name=\"selected_image\">selected_image</string>\r\n    <string name=\"selected_bitmap\">selected_bitmap</string>\r\n\r\n    <string name=\"return_to_fragment\">return_to_fragment</string>\r\n    <string name=\"activity_number\">activity_number</string>\r\n\r\n    <string name=\"comments\">Comments</string>\r\n    <string name=\"view_comment_fragment\">View Comments</string>\r\n\r\n    <string name=\"search_activity\">Search Activity</string>\r\n    <string name=\"intent_user\">intent_user</string>\r\n    <string name=\"view_profile_fragment\">ViewProfile</string>\r\n\r\n    <string name=\"bundle_user_accountsetting\">bundle_user_accountsetting</string>\r\n    <string name=\"bundle_photo\">bundle_photo</string>\r\n    <string name=\"home\">Home Activity</string>\r\n    <string name=\"his_UID\">his_UID</string>\r\n\r\n    <string name=\"entryfee_prompt\">Select here</string>\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"descrip\">Andreu World launches its 20th international design contest and opens registration for 2020 to both students and professionals worldwide. Participants are invited to design an item of furniture (chair and/or table) based on specifications provided in a brief. The best design for 2020 will be awarded with 4,000 Euro and the second-best, with 2,000 Euro. A maximum of four (4) non-monetary prizes will also be announced. The competition briefing implies the following requirements:</string>\r\n    <string name=\"rule\">Chairs (chairs, armchairs, lounge chairs, stools, benches and sofas): The main material shall be wood and upholstery. Beech, ash, oak, or walnut should be the wood species utilized, in either solid or plywood version. The Kvadrat textile collections should be used for upholstered pieces. The use of other materials such as metal, thermopolymer, and aluminum will also be accepted. Tables (meeting table, living tables and occasional tables): The principal material shall be “Solid Textile Board by Really” – a high-density material manufactured from Kvadrat textiles at the end of their life-cycle. The use of other materials such as wood, plywood, laminate, glass, metal, thermopolymer, and natural stones will be accepted. All designs presented should be new, not having been marketed or disclosed prior to the date of the Contest.</string>\r\n\r\n\r\n    <!-- Databses names-->\r\n    <string name=\"dbname_users\">users</string>\r\n    <string name=\"dbname_contests\">Contests</string>\r\n    <string name=\"dbname_follower\">followers</string>\r\n    <string name=\"dbname_following\">following</string>\r\n    <string name=\"dbname_user_photos\">user_photos</string>\r\n    <string name=\"dbname_contestlist\">ContestList</string>\r\n    <string name=\"dbname_participantList\">ParticipantList</string>\r\n    <string name=\"dbname_leaderboard\">Leaderboard</string>\r\n    <string name=\"dbname_Chats\">Chats</string>\r\n    <string name=\"dbname_request\">Requests</string>\r\n    <string name=\"dbname_promote\">Promote</string>\r\n    <string name=\"dbname_reports\">Reports</string>\r\n    <string name=\"dbname_ChatList\">ChatList</string>\r\n    <string name=\"db_topUsersParams\">db_topUsersParams</string>\r\n    <string name=\"dbname_username\">username</string>\r\n\r\n\r\n    <!-- Field Names -->\r\n    <string name=\"field_followers\">f</string>\r\n    <string name=\"field_promotes\">pmt</string>\r\n    <string name=\"field_contest_title\">ct</string>\r\n    <string name=\"field_contest_organized_by\">cob</string>\r\n    <string name=\"field_contest_description\">cd</string>\r\n    <string name=\"field_all_time\">at</string>\r\n    <string name=\"field_yearly\">y</string>\r\n    <string name=\"field_last_month\">lm</string>\r\n    <string name=\"field_this_month\">tm</string>\r\n    <string name=\"field_last_week\">lw</string>\r\n    <string name=\"field_this_week\">tw</string>\r\n    <string name=\"field_contest\">c</string>\r\n    <string name=\"field_last_updated\">lu</string>\r\n    <string name=\"field_last_known_location\">lkl</string>\r\n    <string name=\"field_month\">m</string>\r\n    <string name=\"field_country\">cntry</string>\r\n    <string name=\"field_city\">cty</string>\r\n    <string name=\"field_area\">area</string>\r\n    <string name=\"field_domain\">d</string>\r\n    <string name=\"field_post\">p</string>\r\n    <string name=\"post_updates\">pu</string>\r\n    <string name=\"thumbnail\">t</string>\r\n    <string name=\"type\">ty</string>\r\n    <string name=\"field_last_updated_topUsers\">luu</string>\r\n    <string name=\"field_overall\">o</string>\r\n    <string name=\"field_completed\">cmp</string>\r\n    <string name=\"contest_update\">cu</string>\r\n    <string name=\"changedFollowers\">cf</string>\r\n    <string name=\"changedJoinedContest\">cjc</string>\r\n    <string name=\"changedCreatedContest\">ccc</string>\r\n    <string name=\"field_instagram\">in</string>\r\n    <string name=\"field_facebook\">fb</string>\r\n    <string name=\"field_twitter\">tw</string>\r\n    <string name=\"field_whatsapp\">wa</string>\r\n    <string name=\"db_posts_deleted\">dp</string>\r\n    <string name=\"explore_update\">eu</string>\r\n    <string name=\"field_link1\">l1</string>\r\n    <string name=\"field_link2\">l2</string>\r\n    <string name=\"field_link3\">l3</string>\r\n    <string name=\"created_contest\">cc</string>\r\n    <string name=\"joined_contest\">jc</string>\r\n    <string name=\"voting_list\">vl</string>\r\n    <string name=\"juryMarks\">jm</string>\r\n    <string name=\"field_comment\">cmnt</string>\r\n    <string name=\"profile_photo\">pp</string>\r\n    <string name=\"field_likes\">l</string>\r\n    <string name=\"field_image_path\">ip</string>\r\n    <string name=\"field_username\">u</string>\r\n    <string name=\"field_email\">e</string>\r\n    <string name=\"field_display_name\">dn</string>\r\n    <string name=\"field_user_id\">ui</string>\r\n    <string name=\"field_website\">web</string>\r\n    <string name=\"field_description\">des</string>\r\n    <string name=\"field_phone_number\">pn</string>\r\n    <string name=\"field_Notifications\">n</string>\r\n    <string name=\"field_caption\">cap</string>\r\n    <string name=\"field_date_createdr\">dc</string>\r\n    <string name=\"field_photo_id\">pi</string>\r\n    <string name=\"field_tags\">tg</string>\r\n    <string name=\"field_Participant_List\">pl</string>\r\n    <string name=\"gp_displayer_tittle\">GP:GENUINE PERCENTAGE</string>\r\n    <string name=\"delete_message_prompt\">Are you sure, you want to delete this message?</string>\r\n    <string name=\"delete_post_prompt\">Are you sure, you want to delete this Post?</string>\r\n    <string name=\"remove_promotion_prompt\">\"Are you sure, you want to remove this Promotion?\"</string>\r\n    <string name=\"promotion_prompt\">\"Are you sure, you want to promote this Post?\"</string>\r\n\r\n    <string name=\"field_contest_completed\">c_cmp</string>\r\n    <string name=\"field_contest_reports\">c_rprt</string>\r\n    <string name=\"field_contest_report_list\">rl</string>\r\n    <string name=\"report_prompt\">Are you sure, you want to Report this Contest?</string>\r\n    <string name=\"report_post_prompt\">Are you sure, you want to Report this Post?</string>\r\n\r\n    <string name=\"gp_diplayer_description\">This is the percentage showing how much genuine this host is.</string>\r\n    <string name=\"field_total_voters_list\">tvl</string>\r\n    <string name=\"delete_notification_prompt\">Are you sure, you want to delete this Notification?</string>\r\n    <string name=\"remove_participant_prompt\">Are you sure, you want to remove this Participant?</string>\r\n    <string name=\"field_status\">st</string>\r\n    <string name=\"field_joined_updates\">ju</string>\r\n    <string name=\"reject_participant_prompt\">Are you sure, you want to Reject this Participant?</string>\r\n    <string name=\"allow_participanr_prompt\">Are you sure, you want to Allow this Participant?</string>\r\n    <string name=\"field_open_for\">of</string>\r\n    <string name=\"field_view\">v</string>\r\n    <string name=\"field_total_score\">ts</string>\r\n    <string name=\"field_rule\">rul</string>\r\n    <string name=\"field_contest_created_updates\">ccu</string>\r\n    <string name=\"field_contest_joined_updates\">cju</string>\r\n    <string name=\"field_result\">r</string>\r\n    <string name=\"field_media_link\">ml</string>\r\n    <string name=\"field_jury_pic_1\">jp1</string>\r\n    <string name=\"field_jury_pic_2\">jp2</string>\r\n    <string name=\"field_jury_pic_3\">jp3</string>\r\n    <string name=\"field_poster\">po</string>\r\n    <string name=\"field_id_link\">il</string>\r\n    <string name=\"field_contest_judged\">cj</string>\r\n    <string name=\"field_contest_wins\">cw</string>\r\n    <string name=\"field_contest_participated\">cp</string>\r\n    <string name=\"field_sender_ID\">sid</string>\r\n    <string name=\"field_receiver_ID\">rid</string>\r\n    <string name=\"field_message\">msg</string>\r\n    <string name=\"field_timestamp\">tim</string>\r\n    <string name=\"field_if_seen\">ifs</string>\r\n    <string name=\"field_message_ID\">mid</string>\r\n    <string name=\"field_entry_fee\">ef</string>\r\n    <string name=\"field_contest_ID\">ci</string>\r\n    <string name=\"field_vote_type\">vt</string>\r\n    <string name=\"field_registration_begin\">rb</string>\r\n    <string name=\"field_registration_end\">re</string>\r\n    <string name=\"field_voting_begin\">vb</string>\r\n    <string name=\"field_voting_end\">ve</string>\r\n    <string name=\"field_max_participant_limit\">mLt</string>\r\n    <string name=\"field_winners_declare\">wd</string>\r\n    <string name=\"field_file_type\">ft</string>\r\n    <string name=\"field_total_prize\">tp</string>\r\n    <string name=\"field_place1_prize\">p1</string>\r\n    <string name=\"field_place2_prize\">p2</string>\r\n    <string name=\"field_place3_prize\">p3</string>\r\n    <string name=\"field_jury_name_1\">jn1</string>\r\n    <string name=\"field_jury_name_2\">jn2</string>\r\n    <string name=\"field_jury_name_3\">jn3</string>\r\n    <string name=\"field_host\">hst</string>\r\n    <string name=\"field_college\">clg</string>\r\n    <string name=\"field_joining_ID\">ji</string>\r\n    <string name=\"field_jury_comment1\">c1</string>\r\n    <string name=\"field_jury_comment2\">c2</string>\r\n    <string name=\"field_jury_comment3\">c3</string>\r\n    <string name=\"field_jury_1\">j1</string>\r\n    <string name=\"field_jury_2\">j2</string>\r\n    <string name=\"field_jury_3\">j3</string>\r\n    <string name=\"field_notification_message\">not</string>\r\n\r\n    <string name=\"field_promotion_time_start\">tiS</string>\r\n    <string name=\"field_promotion_time_end\">tiE</string>\r\n    <string name=\"field_promoter_ID\">pID</string>\r\n    <string name=\"field_story_ID\">stID</string>\r\n    <string name=\"field_rating\">rat</string>\r\n    <string name=\"field_unfollowed_Me\">um</string>\r\n    <string name=\"Privacy_Policy\">https://drive.google.com/file/d/1Kat9jq_H9vXxNWXmKfP4N3XerfpfHkw5/view?usp=sharing</string>\r\n    <string name=\"Terms_and_Condition\">https://drive.google.com/file/d/1t8XtHgyhvhWlWPlqoG8MREP56kFuEhPL/view?usp=sharing</string>\r\n\r\n\r\n    <string-array name=\"entryfee\">\r\n        <item>Select here</item>\r\n        <item>Free</item>\r\n        <item>Paid</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"entryfee2\">\r\n        <item>Overall</item>\r\n        <item>Free</item>\r\n        <item>Paid</item>\r\n    </string-array>\r\n\r\n    <string-array name=\"domain\">\r\n        <item>All</item>\r\n        <item>Speaker</item>\r\n        <item>Chef</item>\r\n        <item>Cinematographer</item>\r\n        <item>Dancer</item>\r\n        <item>Instrument Player</item>\r\n        <item>Editor</item>\r\n        <item>Fashion Designer</item>\r\n        <item>Actor</item>\r\n        <item>Film maker</item>\r\n        <item>Gamer</item>\r\n        <item>Makeup Artist</item>\r\n        <item>Model</item>\r\n        <item>Singer</item>\r\n        <item>Musician</item>\r\n        <item>Sketch Artist</item>\r\n        <item>Poet</item>\r\n        <item>Photographer</item>\r\n        <item>Rapper</item>\r\n        <item>Sports</item>\r\n        <item>Writer</item>\r\n        <item>Digital Art</item>\r\n\r\n\r\n    </string-array>\r\n    <string-array name=\"domain2\">\r\n        <item>Overall</item>\r\n        <item>Speaker</item>\r\n        <item>Chef</item>\r\n        <item>Cinematographer</item>\r\n        <item>Dancer</item>\r\n        <item>Instrument Player</item>\r\n        <item>Editor</item>\r\n        <item>Fashion Designer</item>\r\n        <item>Actor</item>\r\n        <item>Film maker</item>\r\n        <item>Gamer</item>\r\n        <item>Makeup Artist</item>\r\n        <item>Model</item>\r\n        <item>Singer</item>\r\n        <item>Musician</item>\r\n        <item>Sketch Artist</item>\r\n        <item>Poet</item>\r\n        <item>Photographer</item>\r\n        <item>Rapper</item>\r\n        <item>Sports</item>\r\n        <item>Writer</item>\r\n        <item>Digital Art</item>\r\n\r\n    </string-array>\r\n\r\n    <string-array name=\"juryNumber\">\r\n        <item>Select here</item>\r\n        <item>1</item>\r\n        <item>2</item>\r\n        <item>3</item>\r\n\r\n    </string-array>\r\n\r\n    <string-array name=\"prize\">\r\n        <item>Select here</item>\r\n        <item>No</item>\r\n        <item>Yes</item>\r\n\r\n    </string-array>\r\n\r\n\r\n</resources>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/values/strings.xml	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/res/values/strings.xml	(date 1605862047565)
-@@ -89,7 +89,7 @@
-     <string name="thumbnail">t</string>
-     <string name="type">ty</string>
-     <string name="field_last_updated_topUsers">luu</string>
--    <string name="field_overall">o</string>
-+    <string name="field_overall">Overall</string>
-     <string name="field_completed">cmp</string>
-     <string name="contest_update">cu</string>
-     <string name="changedFollowers">cf</string>
-Index: app/src/main/res/layout/fragment_mainfeed_listitem.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_marginTop=\"50dp\"\r\n            android:layout_marginBottom=\"50dp\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <androidx.cardview.widget.CardView\r\n                android:id=\"@+id/relLayout1\"\r\n\r\n                app:cardUseCompatPadding=\"true\"\r\n                app:cardCornerRadius=\"5dp\"\r\n\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\">\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:id=\"@+id/header\"\r\n                android:background=\"@drawable/rectangular_border\"\r\n                android:layout_height=\"50dp\">\r\n\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/ivEllipses\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_alignParentRight=\"true\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginRight=\"6dp\"\r\n                    android:src=\"@drawable/ic_eclipse_white\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/username\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginLeft=\"10dp\"\r\n                    android:layout_toRightOf=\"@id/profile_photo\"\r\n                    android:maxLines=\"1\"\r\n                    android:text=\"username\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"17sp\" />\r\n\r\n\r\n                <TextView\r\n                    android:id=\"@+id/domain12\"\r\n                    android:layout_width=\"150dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginLeft=\"10dp\"\r\n                    android:gravity=\"right\"\r\n                    android:layout_toLeftOf=\"@+id/ivEllipses\"\r\n                    android:text=\"Photographer\"\r\n                    android:fontFamily=\"@font/orion\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:maxLines=\"1\"\r\n                    android:textSize=\"15sp\"\r\n                    android:layout_marginStart=\"10dp\" />\r\n                <TextView\r\n                    android:id=\"@+id/images_time\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@id/username\"\r\n                    android:layout_toRightOf=\"@+id/profile_photo\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginLeft=\"10dp\"\r\n\r\n                    android:text=\"N DAYS AGO\"\r\n                    android:textColor=\"@color/grey\"\r\n                    android:textSize=\"8dp\" />\r\n\r\n                <de.hdodenhof.circleimageview.CircleImageView\r\n                    android:id=\"@+id/profile_photo\"\r\n                    android:layout_width=\"30dp\"\r\n                    android:layout_height=\"30dp\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginLeft=\"10dp\"\r\n                    android:layout_marginTop=\"20dp\"\r\n                    app:civ_border_color=\"#000000\"\r\n                    app:civ_border_width=\"0.5dp\" />\r\n\r\n            </RelativeLayout>\r\n            </androidx.cardview.widget.CardView>\r\n            <RelativeLayout\r\n                android:id=\"@+id/relLayout2\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@id/post_imagelayout\"\r\n              >\r\n\r\n                <RelativeLayout\r\n                    android:id=\"@+id/starlayout\"\r\n                    android:layout_width=\"60dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    >\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/image_star\"\r\n                        android:layout_width=\"35dp\"\r\n                        android:layout_height=\"35dp\"\r\n                        android:layout_centerInParent=\"true\"\r\n                        android:src=\"@drawable/ic_star_black\"\r\n                        android:visibility=\"visible\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/image_star_yellow\"\r\n                        android:layout_width=\"35dp\"\r\n                        android:layout_height=\"35dp\"\r\n                        android:layout_centerInParent=\"true\"\r\n                        android:src=\"@drawable/ic_star_color\"\r\n                        android:visibility=\"invisible\" />\r\n\r\n\r\n                </RelativeLayout>\r\n\r\n                <RelativeLayout\r\n                    android:id=\"@+id/comment_layout\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"match_parent\"\r\n                    >\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/image_shoutout\"\r\n                        android:layout_width=\"30dp\"\r\n                        android:layout_height=\"30dp\"\r\n                        android:layout_marginLeft=\"4dp\"\r\n                        android:layout_centerVertical=\"true\"\r\n                        android:src=\"@drawable/ic_comment_black\"\r\n                        android:visibility=\"visible\" />\r\n                </RelativeLayout>\r\n\r\n                <TextView\r\n                    android:id=\"@+id/likes_number\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/starlayout\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginLeft=\"5dp\"\r\n                    android:layout_marginTop=\"5dp\"\r\n                    android:text=\"0\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"15dp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/comments_number\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/comment_layout\"\r\n                    android:layout_marginLeft=\"12dp\"\r\n                    android:layout_marginTop=\"5dp\"\r\n                    android:text=\"0\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"15dp\" />\r\n                <RelativeLayout\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:id=\"@+id/promotion\">\r\n                <ImageView\r\n                    android:layout_width=\"30dp\"\r\n                    android:layout_height=\"30dp\"\r\n                    android:src=\"@drawable/ic_promote_black\"\r\n                    android:layout_alignParentRight=\"true\"\r\n                    android:layout_marginRight=\"4dp\"\r\n                    android:id=\"@+id/promote\"/>\r\n                <ImageView\r\n                    android:layout_width=\"30dp\"\r\n                    android:layout_height=\"30dp\"\r\n                    android:layout_marginRight=\"4dp\"\r\n\r\n                    android:src=\"@drawable/ic_promote_yellow\"\r\n                    android:visibility=\"gone\"\r\n                    android:layout_alignParentRight=\"true\"\r\n                    android:id=\"@+id/promoted\"/>\r\n                </RelativeLayout>\r\n                <TextView\r\n                    android:id=\"@+id/promote_number\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/promotion\"\r\n                    android:layout_marginRight=\"5dp\"\r\n\r\n                    android:text=\"0\"\r\n                    android:layout_alignParentRight=\"true\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"15dp\" />\r\n\r\n\r\n            </RelativeLayout>\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/relLayout3\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/relLayout2\"\r\n                android:layout_marginBottom=\"1dp\"\r\n                android:padding=\"10dp\">\r\n\r\n\r\n                <TextView\r\n                    android:id=\"@+id/image_caption\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:text=\"naman.mahendra mountain #mountain\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"16dp\" />\r\n\r\n\r\n\r\n\r\n            </RelativeLayout>\r\n            <RelativeLayout\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/relLayout1\"\r\n                android:id=\"@+id/post_imagelayout\"\r\n\r\n                >\r\n                <androidx.cardview.widget.CardView\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    app:cardBackgroundColor=\"@color/white\"\r\n                    app:cardUseCompatPadding=\"true\"\r\n                    app:cardCornerRadius=\"5dp\"\r\n                    android:elevation=\"5dp\"\r\n\r\n                    android:outlineAmbientShadowColor=\"@color/white\"\r\n                    >\r\n                    <com.orion.orion.util.SquareImageView\r\n                        android:id=\"@+id/frame\"\r\n                        android:visibility=\"visible\"\r\n                        android:src=\"@drawable/square\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        />\r\n\r\n                    <com.google.android.exoplayer2.ui.PlayerView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:id=\"@+id/player_view\"\r\n                        app:resize_mode=\"fit\"\r\n                        app:hide_on_touch=\"true\"\r\n                        android:visibility=\"visible\"\r\n                        app:show_timeout=\"5000\"\r\n                        app:rewind_increment=\"10000\"\r\n                        app:fastforward_increment=\"10000\"\r\n                        app:use_controller=\"false\"\r\n                        app:surface_type=\"texture_view\"\r\n                        android:background=\"@drawable/square\"\r\n                        app:player_layout_id=\"@layout/exo_simple_player_view\"\r\n                        app:controller_layout_id=\"@layout/custom_controller\"/>\r\n\r\n                    <com.orion.orion.util.SquareImageView\r\n                        android:id=\"@+id/thumbnail\"\r\n                        android:visibility=\"visible\"\r\n                        android:src=\"@drawable/square\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        />\r\n\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"60dp\"\r\n                        android:layout_height=\"60dp\"\r\n                        android:src=\"@drawable/ic_play_black_logo\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:id=\"@+id/play\"/>\r\n\r\n                    <ProgressBar\r\n                        android:layout_width=\"80dp\"\r\n                        android:layout_height=\"80dp\"\r\n                        android:visibility=\"gone\"\r\n                        android:id=\"@+id/progress_bar\"\r\n                        android:layout_gravity=\"center\"\r\n                    />\r\n                    <ImageView\r\n                        android:layout_width=\"25dp\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:src=\"@drawable/ic_unmute_black\"\r\n                        android:layout_gravity=\"bottom\"\r\n                        android:layout_margin=\"10dp\"\r\n                        android:visibility=\"gone\"\r\n\r\n                        android:id=\"@+id/unmute\"\r\n                        />\r\n                    <ImageView\r\n                        android:layout_width=\"25dp\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:layout_margin=\"10dp\"\r\n                        android:layout_gravity=\"bottom\"\r\n\r\n                        android:visibility=\"gone\"\r\n                        android:src=\"@drawable/ic_mute_black\"\r\n                        android:id=\"@+id/mute\"\r\n                        />\r\n                    <TextView\r\n                        android:layout_width=\"25dp\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:text=\"12\"\r\n                        android:visibility=\"gone\"\r\n                        android:gravity=\"center\"\r\n                        android:background=\"@drawable/ic_white_circle\"\r\n                        android:textColor=\"#000000\"\r\n                        android:layout_gravity=\"right\"\r\n                        android:layout_margin='10dp'\r\n                        android:id=\"@+id/duration\"/>\r\n\r\n                <com.orion.orion.util.SquareImageView\r\n                    android:id=\"@+id/post_image\"\r\n                    android:visibility=\"gone\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                  />\r\n                    <com.orion.orion.util.SquareImageView\r\n                        android:id=\"@+id/progress\"\r\n                        android:visibility=\"gone\"\r\n                        android:src=\"@drawable/load\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        />\r\n\r\n <TextView\r\n                        android:id=\"@+id/credit\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"bottom|right\"\r\n                        android:layout_margin=\"3dp\"\r\n                        android:layout_marginBottom=\"1dp\"\r\n\r\n                        android:background=\"@color/black\"\r\n\r\n                        android:padding=\"2dp\"\r\n                        android:text=\"username\"\r\n                        android:textColor=\"@color/white\"\r\n                        android:textSize=\"10sp\" />\r\n\r\n                </androidx.cardview.widget.CardView>\r\n\r\n\r\n\r\n\r\n            </RelativeLayout>\r\n\r\n        </RelativeLayout>\r\n\r\n    </ScrollView>\r\n\r\n</RelativeLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/fragment_mainfeed_listitem.xml	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/res/layout/fragment_mainfeed_listitem.xml	(date 1605880669601)
-@@ -62,7 +62,7 @@
-                     android:layout_marginLeft="10dp"
-                     android:gravity="right"
-                     android:layout_toLeftOf="@+id/ivEllipses"
--                    android:text="Photographer"
-+                    android:text=""
-                     android:fontFamily="@font/orion"
-                     android:textColor="@color/black"
-                     android:maxLines="1"
-@@ -328,14 +328,7 @@
-                     android:layout_height="wrap_content"
-                     android:layout_centerHorizontal="true"
-                   />
--                    <com.orion.orion.util.SquareImageView
--                        android:id="@+id/progress"
--                        android:visibility="gone"
--                        android:src="@drawable/load"
--                        android:layout_width="match_parent"
--                        android:layout_height="wrap_content"
--                        android:layout_centerHorizontal="true"
--                        />
-+
- 
-  <TextView
-                         android:id="@+id/credit"
-Index: app/src/main/res/layout/layout_view_post.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/white\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n\r\n            >\r\n\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/relLayout1\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n\r\n                android:background=\"@color/scheme8\">\r\n\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/ivEllipses\"\r\n                    android:layout_width=\"30dp\"\r\n                    android:layout_height=\"30dp\"\r\n                    android:layout_alignParentRight=\"true\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:src=\"@drawable/ic_whilte_eclipse\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/username1\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginLeft=\"10dp\"\r\n                    android:layout_toRightOf=\"@id/profile_photo1\"\r\n                    android:text=\"Username\"\r\n                    android:textColor=\"@color/white\"\r\n                    android:textSize=\"20sp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/images_time\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@id/username1\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginLeft=\"10dp\"\r\n                    android:layout_toRightOf=\"@+id/profile_photo1\"\r\n\r\n                    android:text=\"N DAYS AGO\"\r\n                    android:textColor=\"@color/white\"\r\n                    android:textSize=\"8dp\" />\r\n\r\n                <de.hdodenhof.circleimageview.CircleImageView\r\n                    android:id=\"@+id/profile_photo1\"\r\n                    android:layout_width=\"30dp\"\r\n                    android:layout_height=\"30dp\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:layout_marginLeft=\"25dp\"\r\n                    android:layout_marginTop=\"20dp\"\r\n                    app:civ_border_color=\"#0e1111\"\r\n                    app:civ_border_width=\"0.5dp\" />\r\n\r\n            </RelativeLayout>\r\n\r\n\r\n            <com.google.android.material.card.MaterialCardView\r\n                android:theme=\"@style/CustomCardViewStyle\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:id=\"@+id/qwe\"\r\n                app:cardBackgroundColor=\"@color/scheme8\"\r\n                android:layout_below=\"@+id/relLayout1\"\r\n             >\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                >\r\n\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/post_imagelayout\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginBottom=\"50dp\"\r\n\r\n                >\r\n                <androidx.cardview.widget.CardView\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    app:cardBackgroundColor=\"@color/white\"\r\n                    app:cardCornerRadius=\"10dp\"\r\n                   >\r\n                    <com.orion.orion.util.SquareImageView\r\n                        android:id=\"@+id/frame\"\r\n                        android:visibility=\"visible\"\r\n                        android:src=\"@drawable/square\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        />\r\n\r\n                    <com.google.android.exoplayer2.ui.PlayerView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:id=\"@+id/player_view\"\r\n                        app:resize_mode=\"fit\"\r\n                        app:hide_on_touch=\"true\"\r\n                        android:visibility=\"visible\"\r\n                        app:show_timeout=\"5000\"\r\n                        app:rewind_increment=\"10000\"\r\n                        app:fastforward_increment=\"10000\"\r\n                        app:use_controller=\"false\"\r\n                        app:surface_type=\"texture_view\"\r\n                        android:background=\"@drawable/square\"\r\n                        app:player_layout_id=\"@layout/exo_simple_player_view\"\r\n                        app:controller_layout_id=\"@layout/custom_controller\"/>\r\n\r\n                    <com.orion.orion.util.SquareImageView\r\n                        android:id=\"@+id/thumbnail\"\r\n                        android:visibility=\"visible\"\r\n                        android:src=\"@drawable/square\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        />\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"60dp\"\r\n                        android:layout_height=\"60dp\"\r\n                        android:src=\"@drawable/ic_play_black_logo\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:id=\"@+id/play\"/>\r\n\r\n                    <ProgressBar\r\n                        android:layout_width=\"80dp\"\r\n                        android:layout_height=\"80dp\"\r\n                        android:visibility=\"gone\"\r\n                        android:id=\"@+id/progress_bar\"\r\n                        android:layout_gravity=\"center\"\r\n                        />\r\n                    <ImageView\r\n                        android:layout_width=\"25dp\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:src=\"@drawable/ic_unmute_black\"\r\n                        android:layout_gravity=\"bottom\"\r\n                        android:layout_margin=\"10dp\"\r\n                        android:visibility=\"gone\"\r\n\r\n                        android:id=\"@+id/unmute\"\r\n                        />\r\n                    <ImageView\r\n                        android:layout_width=\"25dp\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:layout_margin=\"10dp\"\r\n                        android:layout_gravity=\"bottom\"\r\n\r\n                        android:visibility=\"gone\"\r\n                        android:src=\"@drawable/ic_mute_black\"\r\n                        android:id=\"@+id/mute\"\r\n                        />\r\n                    <TextView\r\n                        android:layout_width=\"25dp\"\r\n                        android:layout_height=\"25dp\"\r\n                        android:background=\"@drawable/ic_white_circle\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"12\"\r\n                        android:visibility=\"gone\"\r\n                        android:textColor=\"#686868\"\r\n                        android:layout_gravity=\"right\"\r\n                        android:layout_margin='10dp'\r\n                        android:id=\"@+id/duration\"/>\r\n\r\n\r\n\r\n                    <com.orion.orion.util.SquareImageView\r\n                        android:id=\"@+id/post_image\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        />\r\n\r\n\r\n                </androidx.cardview.widget.CardView>\r\n\r\n            </RelativeLayout>\r\n            </RelativeLayout>\r\n\r\n                <TextView\r\n                    android:id=\"@+id/credit\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                  android:layout_marginRight=\"20dp\"\r\n                    android:layout_gravity=\"end|bottom\"\r\n\r\n                    android:text=\"username\"\r\n\r\n                    android:textColor=\"@color/white\" />\r\n\r\n            </com.google.android.material.card.MaterialCardView>\r\n    <RelativeLayout\r\n                android:id=\"@+id/relLayout2\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@id/qwe\"\r\n        android:padding=\"15dp\"\r\n                android:background=\"@drawable/white_border\">\r\n\r\n                <RelativeLayout\r\n                    android:id=\"@+id/starlayout\"\r\n                    android:layout_width=\"60dp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_centerHorizontal=\"true\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/image_star\"\r\n                        android:layout_width=\"35dp\"\r\n                        android:layout_height=\"35dp\"\r\n                        android:layout_centerInParent=\"true\"\r\n                        android:src=\"@drawable/ic_star_black\"\r\n                        android:visibility=\"visible\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/image_star_yellow\"\r\n                        android:layout_width=\"35dp\"\r\n                        android:layout_height=\"35dp\"\r\n                        android:layout_centerInParent=\"true\"\r\n                        android:src=\"@drawable/ic_star_color\"\r\n                        android:visibility=\"invisible\" />\r\n\r\n\r\n                </RelativeLayout>\r\n\r\n                <RelativeLayout\r\n                    android:id=\"@+id/comment_layout\"\r\n                    android:layout_width=\"60dp\"\r\n                    android:layout_height=\"match_parent\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/image_shoutout\"\r\n                        android:layout_width=\"35dp\"\r\n                        android:layout_height=\"35dp\"\r\n                        android:layout_centerVertical=\"true\"\r\n                        android:src=\"@drawable/ic_comment_black\"\r\n                        android:visibility=\"visible\" />\r\n                </RelativeLayout>\r\n\r\n                <RelativeLayout\r\n                    android:id=\"@+id/promotion\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/promote\"\r\n                        android:layout_width=\"35dp\"\r\n                        android:layout_height=\"35dp\"\r\n                        android:layout_alignParentRight=\"true\"\r\n                        android:src=\"@drawable/ic_promote_black\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/promoted\"\r\n                        android:layout_width=\"35dp\"\r\n                        android:layout_height=\"35dp\"\r\n                        android:layout_alignParentRight=\"true\"\r\n                        android:src=\"@drawable/ic_promote_yellow\"\r\n                        android:visibility=\"gone\" />\r\n                </RelativeLayout>\r\n\r\n                <TextView\r\n                    android:id=\"@+id/comments_number\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/comment_layout\"\r\n                    android:layout_marginLeft=\"12dp\"\r\n                    android:layout_marginTop=\"5dp\"\r\n                    android:text=\"0\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"15dp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/likes_number\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/starlayout\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginLeft=\"5dp\"\r\n                    android:layout_marginTop=\"5dp\"\r\n                    android:text=\"0\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"15dp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/promote_number\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/promotion\"\r\n                    android:layout_alignParentRight=\"true\"\r\n\r\n                    android:layout_marginRight=\"5dp\"\r\n                    android:text=\"0\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"15dp\" />\r\n\r\n\r\n            </RelativeLayout>\r\n\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/relLayout3\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/relLayout2\"\r\n                android:layout_marginBottom=\"30dp\"\r\n                android:padding=\"10dp\">\r\n\r\n\r\n                <TextView\r\n                    android:id=\"@+id/image_caption\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:text=\"\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"16dp\" />\r\n\r\n\r\n            </RelativeLayout>\r\n\r\n\r\n\r\n\r\n        </RelativeLayout>\r\n\r\n\r\n    </ScrollView>\r\n\r\n\r\n</RelativeLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/layout_view_post.xml	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/res/layout/layout_view_post.xml	(date 1605880669594)
-@@ -95,7 +95,10 @@
-                 <androidx.cardview.widget.CardView
-                     android:layout_width="match_parent"
-                     android:layout_height="wrap_content"
-+                    android:background="@color/white"
-                     app:cardBackgroundColor="@color/white"
-+                    android:outlineAmbientShadowColor="@color/white"
-+
-                     app:cardCornerRadius="10dp"
-                    >
-                     <com.orion.orion.util.SquareImageView
-Index: app/src/main/java/com/orion/orion/util/FirebaseMethods.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion.util;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Matrix;\r\nimport android.graphics.Paint;\r\nimport android.media.ExifInterface;\r\nimport android.net.Uri;\r\nimport android.os.Environment;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.FragmentActivity;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.google.gson.Gson;\r\nimport com.orion.orion.Notifications.Data;\r\nimport com.orion.orion.Notifications.Sender;\r\nimport com.orion.orion.Notifications.Token;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.contest.contestMainActivity;\r\nimport com.orion.orion.contest.create.CheckContest;\r\nimport com.orion.orion.contest.joined.JoiningForm;\r\nimport com.orion.orion.models.CreateForm;\r\nimport com.orion.orion.models.ParticipantList;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.TimeZone;\r\n\r\npublic class FirebaseMethods {\r\n    private static final String TAG = \"FirebaseMethods\";\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private Context mContext;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n    private StorageReference mStorageReference;\r\n    private DatabaseReference myRef;\r\n    private String userID;\r\n    private double mPhotoUploadProgress = 0;\r\n    private RequestQueue requestQueue;\r\n    boolean flag1=true,flag2=true,flag3=true,flag4=true,flag5=true,flag6=true;\r\n    private static final float maxHeight = 1280.0f;\r\n    private static final float maxWidth = 1280.0f;\r\n\r\n    public FirebaseMethods(Context context) {\r\n        mContext = context;\r\n        mStorageReference = FirebaseStorage.getInstance().getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        requestQueue = Volley.newRequestQueue(mContext);\r\n\r\n        if (mAuth.getCurrentUser() != null) {\r\n            userID = mAuth.getCurrentUser().getUid();\r\n            userID = mAuth.getCurrentUser().getUid();\r\n        }\r\n\r\n    }\r\n    public void uploadContest(final int count, final String imgURL, Bitmap bm, String contestKey, String p, String joiningkey){\r\n        FilePaths filepaths = new FilePaths();\r\n\r\n        if (!imgURL.equals(\"\")) {\r\n            String user_id = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n\r\n            String newKey = FirebaseDatabase.getInstance().getReference().child(mContext.getString(R.string.dbname_contests)).push().getKey();\r\n\r\n            final StorageReference storageReference = mStorageReference\r\n                    .child(filepaths.FIREBASE_CONTEST_STORAGE + \"/\" + user_id + \"/\" + contestKey + \"/\" + newKey);\r\n\r\n            if (bm == null) {\r\n                bm = ImageManager.getBitmap(imgURL);\r\n            }\r\n\r\n\r\n            String imgUrl2= compressImage(imgURL);\r\n\r\n             bm = ImageManager.getBitmap(imgUrl2);\r\n\r\n\r\n            byte[] bytes;\r\n\r\n\r\n\r\n           bytes = ImageManager.getBytesFromBitmap(bm, 100);\r\n\r\n\r\n            UploadTask uploadTask = null;\r\n            uploadTask = storageReference.putBytes(bytes);\r\n\r\n            uploadTask.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    storageReference.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            Uri firebaseurl = uri;\r\n                            CreateForm createForm = new CreateForm();\r\n//                           Toast.makeText(mContext, \"Photo Upload success\" , Toast.LENGTH_SHORT).show();\r\n                            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                            if (p.equals(\"p1\")) {\r\n                                flag1=false;\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.created_contest))\r\n                                        .child(contestKey)\r\n                                        .child(mContext.getString(R.string.field_jury_pic_1)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag1=true;\r\n                                        if (flag1&&flag2&&flag3&&flag4){\r\n                                            ((CheckContest)mContext).progress.setVisibility(View.GONE);\r\n                                            ((CheckContest)mContext).  getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext. startActivity(i);\r\n                                            Toast.makeText(mContext ,\"Your Contest request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (p.equals(\"p2\")) {\r\n\r\n                                flag2=false;\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.created_contest))\r\n                                        .child(contestKey)\r\n                                        .child(mContext.getString(R.string.field_jury_pic_2)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag2=true;\r\n                                        if (flag1&&flag2&&flag3&&flag4){\r\n                                            ((CheckContest)mContext).progress.setVisibility(View.GONE);\r\n                                            ((CheckContest)mContext).  getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext. startActivity(i);\r\n                                            Toast.makeText(mContext ,\"Your Contest request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (p.equals(\"p3\")) {\r\n                                flag3=false;\r\n\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.created_contest))\r\n                                        .child(contestKey)\r\n                                        .child(mContext.getString(R.string.field_jury_pic_3)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag3=true;\r\n                                        if (flag1&&flag2&&flag3&&flag4){\r\n                                            ((CheckContest)mContext).progress.setVisibility(View.GONE);\r\n                                            ((CheckContest)mContext).  getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext. startActivity(i);\r\n                                            Toast.makeText(mContext ,\"Your Contest request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (p.equals(\"p4\")) {\r\n                                flag4=false;\r\n\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.created_contest))\r\n                                        .child(contestKey)\r\n                                        .child(mContext.getString(R.string.field_poster)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag4=true;\r\n                                        if (flag1&&flag2&&flag3&&flag4){\r\n                                            ((CheckContest)mContext).progress.setVisibility(View.GONE);\r\n                                            ((CheckContest)mContext).  getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext. startActivity(i);\r\n                                            Toast.makeText(mContext ,\"Your Contest request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                            if (p.equals(\"p5\")) {\r\n\r\n                                flag5=false;\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.joined_contest))\r\n                                        .child(joiningkey)\r\n                                        .child(mContext.getString(R.string.field_id_link)).setValue(firebaseurl.toString());\r\n                                ref.child(mContext.getString(R.string.dbname_request))\r\n                                        .child(mContext.getString(R.string.dbname_participantList))\r\n                                        .child(contestKey)\r\n                                        .child(joiningkey)\r\n                                        .child(mContext.getString(R.string.field_id_link)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag5=true;\r\n                                        if (flag5&&flag6) {\r\n                                            ((JoiningForm) mContext).linearLayout.setVisibility(View.GONE);\r\n                                            ((JoiningForm) mContext).  getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext. startActivity(i);\r\n                                            Toast.makeText(mContext ,\"Your participation request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n                                        }\r\n\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (p.equals(\"p6\")) {\r\n\r\n                                flag6=false;\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.joined_contest))\r\n                                        .child(joiningkey)\r\n                                        .child(mContext.getString(R.string.field_media_link)).setValue(firebaseurl.toString());\r\n                                ref.child(mContext.getString(R.string.dbname_request))\r\n                                        .child(mContext.getString(R.string.dbname_participantList))\r\n                                        .child(contestKey)\r\n                                        .child(joiningkey)\r\n                                        .child(mContext.getString(R.string.field_media_link)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag6=true;\r\n                                        if (flag5&&flag6) {\r\n                                            ((JoiningForm) mContext).linearLayout.setVisibility(View.GONE);\r\n                                            ((JoiningForm) mContext).  getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext. startActivity(i);\r\n                                            Toast.makeText(mContext ,\"Your participation request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n\r\n                    });\r\n\r\n//                   Intent intent = new Intent(mContext, MainActivity.class);\r\n//                   mContext.startActivity(intent);\r\n\r\n\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Log.d(TAG, \"onFailure: Photo Upload Failed\");\r\n                    Toast.makeText(mContext, \"Pics Upload failed\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    public void sendNotification(final String hisUID, final String username,final String message,final String tittle) {\r\n        final  DatabaseReference allToken = FirebaseDatabase.getInstance().getReference(\"Tokens\");\r\n        Query query= allToken.orderByKey().equalTo(hisUID);\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                for (DataSnapshot ds : dataSnapshot.getChildren()) {\r\n                    Token token = ds.getValue(Token.class);\r\n                    Data data = new Data(FirebaseAuth.getInstance().getCurrentUser().getUid(), username + \" \" + message, tittle, hisUID, R.drawable.ic_home);\r\n                    Sender sender = new Sender(data, token.getToken());\r\n\r\n                    try {\r\n                        JSONObject senderJsonObj = new JSONObject(new Gson().toJson(sender));\r\n                        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(\"https://fcm.googleapis.com/fcm/send\", senderJsonObj,\r\n                                new Response.Listener<JSONObject>() {\r\n                                    @Override\r\n                                    public void onResponse(JSONObject response) {\r\n                                        Log.d(\"JSON_RESPONSE\", \"onResponse: \" + response.toString());\r\n                                    }\r\n\r\n                                }, new Response.ErrorListener() {\r\n                            @Override\r\n                            public void onErrorResponse(VolleyError error) {\r\n                                Log.d(\"JSON_RESPONSE\", \"onError: \" + error.toString());\r\n\r\n                            }\r\n                        }){\r\n                            @Override\r\n                            public Map<String, String> getHeaders() throws AuthFailureError {\r\n\r\n                                Map<String,String> headers = new HashMap<>();\r\n                                headers.put(\"Content-Type\",\"application/json\");\r\n                                headers.put(\"Authorization\",\"key=AAAAPBXWnHs:APA91bFkGt9VULR-c7XBIcsF0SYlKTiWod88zRpKwIBf-74w46zKCUuIqKIsATJ_Lbv56jdPWhJ0QclNp56kN8__I1mJOQcKJeGjg6CfrIkDYL9SmEy_Dz0zDhyF4WJIlMdE0khSk7qI\");\r\n\r\n                                return headers;\r\n                            }\r\n                        };\r\n\r\n\r\n                        requestQueue.add(jsonObjectRequest);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n\r\n\r\n\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    public String getTim() {\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ENGLISH);\r\n        sdf.setTimeZone(TimeZone.getTimeZone(\"Asia/Kolkata\"));\r\n        return sdf.format(new Date());\r\n    }\r\n\r\n\r\n    public String compressImage(String imagePath) {\r\n        Log.d(TAG, \"compressImage: \"+imagePath);\r\n  \r\n        File file = new File(imagePath);\r\n        if (file.exists() && file.canRead()) {\r\n            Log.d(TAG, \"compressImage: yes\");\r\n            Bitmap scaledBitmap = null;\r\n\r\n            BitmapFactory.Options options = new BitmapFactory.Options();\r\n            options.inJustDecodeBounds = true;\r\n            Bitmap bmp = BitmapFactory.decodeFile(imagePath, options);\r\n\r\n            int actualHeight = options.outHeight;\r\n            int actualWidth = options.outWidth;\r\n\r\n            float imgRatio = (float) actualWidth / (float) actualHeight;\r\n            float maxRatio = maxWidth / maxHeight;\r\n\r\n            if (actualHeight > maxHeight || actualWidth > maxWidth) {\r\n                if (imgRatio < maxRatio) {\r\n                    imgRatio = maxHeight / actualHeight;\r\n                    actualWidth = (int) (imgRatio * actualWidth);\r\n                    actualHeight = (int) maxHeight;\r\n                } else if (imgRatio > maxRatio) {\r\n                    imgRatio = maxWidth / actualWidth;\r\n                    actualHeight = (int) (imgRatio * actualHeight);\r\n                    actualWidth = (int) maxWidth;\r\n                } else {\r\n                    actualHeight = (int) maxHeight;\r\n                    actualWidth = (int) maxWidth;\r\n\r\n                }\r\n            }\r\n\r\n            options.inSampleSize = calculateInSampleSize(options, actualWidth, actualHeight);\r\n            options.inJustDecodeBounds = false;\r\n            options.inDither = false;\r\n            options.inPurgeable = true;\r\n            options.inInputShareable = true;\r\n            options.inTempStorage = new byte[16 * 1024];\r\n\r\n            try {\r\n                bmp = BitmapFactory.decodeFile(imagePath, options);\r\n            } catch (OutOfMemoryError exception) {\r\n                exception.printStackTrace();\r\n\r\n            }\r\n            try {\r\n                scaledBitmap = Bitmap.createBitmap(actualWidth, actualHeight, Bitmap.Config.RGB_565);\r\n            } catch (OutOfMemoryError exception) {\r\n                exception.printStackTrace();\r\n            }\r\n\r\n            float ratioX = actualWidth / (float) options.outWidth;\r\n            float ratioY = actualHeight / (float) options.outHeight;\r\n            float middleX = actualWidth / 2.0f;\r\n            float middleY = actualHeight / 2.0f;\r\n\r\n            Matrix scaleMatrix = new Matrix();\r\n            scaleMatrix.setScale(ratioX, ratioY, middleX, middleY);\r\n\r\n            Canvas canvas = new Canvas(scaledBitmap);\r\n            canvas.setMatrix(scaleMatrix);\r\n            canvas.drawBitmap(bmp, middleX - bmp.getWidth() / 2, middleY - bmp.getHeight() / 2, new Paint(Paint.FILTER_BITMAP_FLAG));\r\n\r\n            if (bmp != null) {\r\n                bmp.recycle();\r\n            }\r\n\r\n            ExifInterface exif;\r\n            try {\r\n                exif = new ExifInterface(imagePath);\r\n                int orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, 0);\r\n                Matrix matrix = new Matrix();\r\n                if (orientation == 6) {\r\n                    matrix.postRotate(90);\r\n                } else if (orientation == 3) {\r\n                    matrix.postRotate(180);\r\n                } else if (orientation == 8) {\r\n                    matrix.postRotate(270);\r\n                }\r\n                scaledBitmap = Bitmap.createBitmap(scaledBitmap, 0, 0, scaledBitmap.getWidth(), scaledBitmap.getHeight(), matrix, true);\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            FileOutputStream out = null;\r\n            String filepath = getFilename();\r\n            try {\r\n                out = new FileOutputStream(filepath);\r\n\r\n                //write the compressed bitmap at the destination specified by filename.\r\n                scaledBitmap.compress(Bitmap.CompressFormat.JPEG, 80, out);\r\n\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            return filepath;\r\n\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    public static int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {\r\n        final int height = options.outHeight;\r\n        final int width = options.outWidth;\r\n        int inSampleSize = 1;\r\n\r\n        if (height > reqHeight || width > reqWidth) {\r\n            final int heightRatio = Math.round((float) height / (float) reqHeight);\r\n            final int widthRatio = Math.round((float) width / (float) reqWidth);\r\n            inSampleSize = heightRatio < widthRatio ? heightRatio : widthRatio;\r\n        }\r\n        final float totalPixels = width * height;\r\n        final float totalReqPixelsCap = reqWidth * reqHeight * 2;\r\n\r\n        while (totalPixels / (inSampleSize * inSampleSize) > totalReqPixelsCap) {\r\n            inSampleSize++;\r\n        }\r\n\r\n        return inSampleSize;\r\n    }\r\n\r\n    public String getFilename() {\r\n            File mediaStorageDir = new File(Environment.getExternalStorageDirectory()\r\n                    + \"/Android/data/\"\r\n                    + mContext.getApplicationContext().getPackageName()\r\n                    + \"/Files/Compressed\");\r\n\r\n            // Create the storage directory if it does not exist\r\n            if (!mediaStorageDir.exists()) {\r\n                mediaStorageDir.mkdirs();\r\n            }\r\n\r\n            String mImageName = \"IMG_\" + String.valueOf(System.currentTimeMillis()) + \".jpg\";\r\n            String uriString = (mediaStorageDir.getAbsolutePath() + \"/\" + mImageName);\r\n            ;\r\n            return uriString;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    public void publishResut(boolean manual, String Conteskey, ArrayList<ParticipantList> participantLists,\r\n                             LinearLayout progress, FragmentActivity activity, ArrayList<ParticipantList> winnerList) {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n\r\n        if (manual) {\r\n\r\n            ref.child(mContext.getString(R.string.dbname_contestlist))\r\n                    .child(Conteskey)\r\n                    .child(mContext.getString(R.string.field_result))\r\n                    .setValue(true)\r\n                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            ref.child(mContext.getString(R.string.dbname_contests))\r\n                                    .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                    .child(mContext.getString(R.string.field_contest_completed))\r\n                                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                            if (snapshot.exists()) {\r\n                                                long x = (long) snapshot.getValue();\r\n                                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                        .child(mContext.getString(R.string.field_contest_completed))\r\n                                                        .setValue(x + 1)\r\n                                                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                            @Override\r\n                                                            public void onSuccess(Void aVoid) {\r\n                                                               publishResutFurther(manual, Conteskey,participantLists,\r\n                                                                   progress,activity,  winnerList);\r\n                                                            }\r\n                                                        });\r\n                                            } else {\r\n                                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                        .child(mContext.getString(R.string.field_contest_completed))\r\n                                                        .setValue(1).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(Void aVoid) {\r\n                                                       publishResutFurther(manual, Conteskey, participantLists, progress, activity, winnerList);\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n                    });\r\n\r\n\r\n        }else{\r\n            ref.child(mContext.getString(R.string.dbname_contestlist))\r\n                    .child(Conteskey)\r\n                    .child(mContext.getString(R.string.field_result))\r\n                    .setValue(true)\r\n                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            publishResutFurther(manual, Conteskey, participantLists, progress, activity, winnerList);\r\n                        }\r\n                    });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void publishResutFurther(boolean manual, String Conteskey, ArrayList<ParticipantList> participantLists, LinearLayout progress, FragmentActivity activity, ArrayList<ParticipantList> winnerList) {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n\r\n        ref.child(mContext.getString(R.string.dbname_contests))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(mContext.getString(R.string.created_contest))\r\n                .child(Conteskey)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (!snapshot.child(mContext.getString(R.string.field_jury_name_1)).getValue().toString().equals(\"\")){\r\n                            ref.child(mContext.getString(R.string.dbname_username))\r\n                                    .child(snapshot.child(mContext.getString(R.string.field_jury_name_1)).getValue().toString())\r\n                                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                            if (snapshot.exists()){\r\n                                                DatabaseReference ref2 = FirebaseDatabase.getInstance().getReference(mContext.getString(R.string.dbname_contests))\r\n                                                        .child(snapshot.getValue().toString())\r\n                                                        .child(mContext.getString(R.string.field_contest_judged));\r\n\r\n                                                ref2.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                                    @Override\r\n                                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                                        if (snapshot.exists()) {\r\n                                                            long l = (long) snapshot.getValue();\r\n                                                            ref2.setValue(l+1);\r\n                                                        }else{\r\n                                                            ref2.setValue(1);\r\n                                                        }\r\n\r\n                                                    }\r\n\r\n                                                    @Override\r\n                                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                                    }\r\n                                                });\r\n\r\n                                            }\r\n\r\n\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n                        if (!snapshot.child(mContext.getString(R.string.field_jury_name_2)).getValue().toString().equals(\"\")){\r\n                            ref.child(mContext.getString(R.string.dbname_username))\r\n                                    .child(snapshot.child(mContext.getString(R.string.field_jury_name_2)).getValue().toString())\r\n                                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                            if (snapshot.exists()){\r\n                                                DatabaseReference ref2 = FirebaseDatabase.getInstance().getReference(mContext.getString(R.string.dbname_contests))\r\n                                                        .child(snapshot.getValue().toString())\r\n                                                        .child(mContext.getString(R.string.field_contest_judged));\r\n\r\n                                                ref2.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                                    @Override\r\n                                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                                        if (snapshot.exists()) {\r\n                                                            long l = (long) snapshot.getValue();\r\n                                                            ref2.setValue(l+1);\r\n                                                        }else{\r\n                                                            ref2.setValue(1);\r\n                                                        }\r\n\r\n                                                    }\r\n\r\n                                                    @Override\r\n                                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                                    }\r\n                                                });\r\n\r\n                                            }\r\n\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n                        if (!snapshot.child(mContext.getString(R.string.field_jury_name_3)).getValue().toString().equals(\"\")){\r\n                            ref.child(mContext.getString(R.string.dbname_username))\r\n                                    .child(snapshot.child(mContext.getString(R.string.field_jury_name_3)).getValue().toString())\r\n                                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                            if (snapshot.exists()){\r\n                                                DatabaseReference ref2 = FirebaseDatabase.getInstance().getReference(mContext.getString(R.string.dbname_contests))\r\n                                                        .child(snapshot.getValue().toString())\r\n                                                        .child(mContext.getString(R.string.field_contest_judged));\r\n\r\n                                                ref2.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                                    @Override\r\n                                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                                        if (snapshot.exists()) {\r\n                                                            long l = (long) snapshot.getValue();\r\n                                                            ref2.setValue(l+1);\r\n                                                        }else{\r\n                                                            ref2.setValue(1);\r\n                                                        }\r\n\r\n                                                    }\r\n\r\n                                                    @Override\r\n                                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                                    }\r\n                                                });\r\n\r\n                                            }\r\n\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n        if (winnerList.size() != 0) {\r\n\r\n            for (int x = 0; x < winnerList.size(); x++) {\r\n                DatabaseReference ref3 = FirebaseDatabase.getInstance().getReference(mContext.getString(R.string.dbname_contests))\r\n                        .child(winnerList.get(x).getUi())\r\n                        .child(mContext.getString(R.string.field_contest_wins));\r\n\r\n                int finalX = x;\r\n                int finalX1 = x;\r\n                ref3.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot1) {\r\n                        if (snapshot1.exists()){\r\n                            long l= (long)snapshot1.getValue();\r\n                            ref3.setValue(l+1);\r\n                        }else{\r\n                            ref3.setValue(1);\r\n\r\n                        }\r\n                        if (finalX1 ==winnerList.size()){\r\n                            sendNotyToParticipants(participantLists,progress);\r\n\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n            if (winnerList.size()==0){\r\n                sendNotyToParticipants(participantLists, progress);\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void sendNotyToParticipants(ArrayList<ParticipantList> participantLists, LinearLayout progress) {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n\r\n        if (participantLists.size() != 0) {\r\n            for (int x = 0; x < participantLists.size(); x++) {\r\n\r\n                sendNotification(participantLists.get(x).getUi(), \"\", \"Result has been declared of a contest.Check your ranking now.\", \"Result Declared\");\r\n\r\n\r\n                addToHisNotification(\"\" + participantLists.get(x).getUi(), \"Result has been declared of a contest.Check your ranking now.\");\r\n\r\n                int finalX = x;\r\n                ref.child(mContext.getString(R.string.dbname_contests))\r\n                        .child(participantLists.get(finalX).getUi())\r\n                        .child(mContext.getString(R.string.field_contest_participated))\r\n                        .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if (snapshot.exists()) {\r\n                                    long l= (long) snapshot.getValue();\r\n                                    ref.child(mContext.getString(R.string.dbname_contests))\r\n                                            .child(participantLists.get(finalX).getUi())\r\n                                            .child(mContext.getString(R.string.field_contest_participated))\r\n                                            .setValue(l+ 1);\r\n                                    if (finalX==participantLists.size()-1){\r\n\r\n                                        progress.setVisibility(View.GONE);\r\n                                    }\r\n                                } else {\r\n                                    ref.child(mContext.getString(R.string.dbname_contests))\r\n                                            .child(participantLists.get(finalX).getUi())\r\n                                            .child(mContext.getString(R.string.field_contest_participated))\r\n                                            .setValue(1);\r\n                                    if (finalX==participantLists.size()-1){\r\n                                        progress.setVisibility(View.GONE);\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n            }\r\n        }else {\r\n            progress.setVisibility(View.GONE);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private void addToHisNotification(String hisUid, String notification) {\r\n\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n                String str_date = rawDate;\r\n                java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                Date date = null;\r\n                try {\r\n                    date = (Date) formatter.parse(str_date);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                Log.d(TAG, \"onCreateView: timestampyesss\" + date.getTime());\r\n                String timestamp = String.valueOf(date.getTime());\r\n\r\n\r\n\r\n//        data to put in notification\r\n                HashMap<Object,String> hashMap = new HashMap<>();\r\n                hashMap.put(\"pId\",\"false\");\r\n\r\n                hashMap.put(mContext.getString(R.string.field_timestamp),timestamp);\r\n\r\n                hashMap.put(\"pUid\",hisUid);\r\n\r\n                hashMap.put(mContext.getString(R.string.field_notification_message),notification);\r\n                hashMap.put(mContext.getString(R.string.field_if_seen),\"false\");\r\n\r\n                hashMap.put(\"sUid\",FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference(mContext.getString(R.string.dbname_users));\r\n                ref.child(hisUid).child(mContext.getString(R.string.field_Notifications)).child(timestamp).setValue(hashMap)\r\n                        .addOnSuccessListener(aVoid -> {\r\n\r\n                        }).addOnFailureListener(e -> {\r\n\r\n                });\r\n                Log.e(SNTPClient.TAG, rawDate);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception ex) {\r\n                Log.e(SNTPClient.TAG, ex.getMessage());\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n    public int getImageCount(DataSnapshot dataSnapshot) {\r\n\r\n        int count = 0;\r\n        for (DataSnapshot ds : dataSnapshot\r\n                .child(mContext.getString(R.string.dbname_user_photos))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .getChildren()) {\r\n            count++;\r\n        }\r\n        return count;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/util/FirebaseMethods.java	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/java/com/orion/orion/util/FirebaseMethods.java	(date 1605882374648)
-@@ -617,6 +617,7 @@
-                                                         if (snapshot.exists()) {
-                                                             long l = (long) snapshot.getValue();
-                                                             ref2.setValue(l+1);
-+                                                            Log.d(TAG, "onDataChange: cgy 1");
-                                                         }else{
-                                                             ref2.setValue(1);
-                                                         }
-@@ -726,8 +727,11 @@
- 
-                     }
-                 });
-+        Log.d(TAG, "onDataChange: cgy 3"+winnerList+" "+participantLists);
- 
-         if (winnerList.size() != 0) {
-+            Log.d(TAG, "onDataChange: cgy 2");
-+
- 
-             for (int x = 0; x < winnerList.size(); x++) {
-                 DatabaseReference ref3 = FirebaseDatabase.getInstance().getReference(mContext.getString(R.string.dbname_contests))
-@@ -741,15 +745,30 @@
-                     public void onDataChange(@NonNull DataSnapshot snapshot1) {
-                         if (snapshot1.exists()){
-                             long l= (long)snapshot1.getValue();
--                            ref3.setValue(l+1);
-+                            ref3.setValue(l+1)
-+                                    .addOnSuccessListener(new OnSuccessListener<Void>() {
-+                                        @Override
-+                                        public void onSuccess(Void aVoid) {
-+                                            if (finalX1 ==winnerList.size()){
-+                                                sendNotyToParticipants(participantLists,progress);
-+
-+                                            }
-+                                        }
-+                                    });
-                         }else{
--                            ref3.setValue(1);
--
--                        }
--                        if (finalX1 ==winnerList.size()){
--                            sendNotyToParticipants(participantLists,progress);
-+                            ref3.setValue(1)
-+                                    .addOnSuccessListener(new OnSuccessListener<Void>() {
-+                                        @Override
-+                                        public void onSuccess(Void aVoid) {
-+                                            if (finalX1 ==winnerList.size()){
-+                                                sendNotyToParticipants(participantLists,progress);
- 
-+                                            }
-+                                        }
-+;                                    });
-+
-                         }
-+
-                     }
- 
- 
-@@ -773,8 +792,11 @@
- 
-     private void sendNotyToParticipants(ArrayList<ParticipantList> participantLists, LinearLayout progress) {
-         DatabaseReference ref = FirebaseDatabase.getInstance().getReference();
-+        Log.d(TAG, "onDataChange: cgy 5");
- 
-         if (participantLists.size() != 0) {
-+            Log.d(TAG, "onDataChange: cgy 4");
-+
-             for (int x = 0; x < participantLists.size(); x++) {
- 
-                 sendNotification(participantLists.get(x).getUi(), "", "Result has been declared of a contest.Check your ranking now.", "Result Declared");
-@@ -796,6 +818,7 @@
-                                             .child(mContext.getString(R.string.field_contest_participated))
-                                             .setValue(l+ 1);
-                                     if (finalX==participantLists.size()-1){
-+                                        Log.d(TAG, "onDataChange: cgy 7");
- 
-                                         progress.setVisibility(View.GONE);
-                                     }
-@@ -805,6 +828,8 @@
-                                             .child(mContext.getString(R.string.field_contest_participated))
-                                             .setValue(1);
-                                     if (finalX==participantLists.size()-1){
-+                                        Log.d(TAG, "onDataChange: cgy 8");
-+
-                                         progress.setVisibility(View.GONE);
- 
-                                     }
-@@ -820,6 +845,8 @@
- 
-             }
-         }else {
-+            Log.d(TAG, "onDataChange: cgy 6");
-+
-             progress.setVisibility(View.GONE);
- 
-         }
-Index: gradle/wrapper/gradle-wrapper.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>#Sun Nov 15 19:02:25 IST 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-bin.zip\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>windows-1252
-===================================================================
---- gradle/wrapper/gradle-wrapper.properties	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ gradle/wrapper/gradle-wrapper.properties	(date 1605718346268)
-@@ -1,6 +1,6 @@
--#Sun Nov 15 19:02:25 IST 2020
-+#Wed Nov 18 18:50:53 IST 2020
- distributionBase=GRADLE_USER_HOME
- distributionPath=wrapper/dists
- zipStoreBase=GRADLE_USER_HOME
- zipStorePath=wrapper/dists
--distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
-+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-all.zip
-Index: app/src/main/java/com/orion/orion/profile/Account/EditProfile.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.orion.orion.profile.Account;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.annotation.TargetApi;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ContentUris;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.DocumentsContract;\r\nimport android.provider.MediaStore;\r\nimport android.text.InputType;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.login.login;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.PostPhotoActivity;\r\nimport com.orion.orion.profile.ProfileActivity;\r\nimport com.orion.orion.util.FilePaths;\r\nimport com.orion.orion.util.FirebaseMethods;\r\nimport com.orion.orion.util.ImageManager;\r\nimport com.orion.orion.util.Permissions;\r\n\r\nimport java.io.File;\r\nimport java.util.Collections;\r\nimport java.util.HashSet;\r\nimport java.util.Set;\r\nimport java.util.regex.Pattern;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\npublic class EditProfile extends AppCompatActivity {\r\n    private static final String TAG = \"EditProfile\";\r\n    private static final int VERIFY_PERMISSION_REQUEST = 1;\r\n\r\n    private DatabaseReference myRef;\r\n    private FirebaseAuth mAuth;\r\n    private String userID;\r\n    private Context mContext;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private FirebaseMethods mFirebaseMethods;\r\n\r\n    private ImageView backarrow;\r\n    private ImageView checkmark;\r\n    private ImageView mProfilephoto;\r\n    private TextView mchangeprofilephoto;\r\n\r\n    private String imgURL;\r\n    private boolean photoChanged = false;\r\n\r\n    private EditText mDisplayname;\r\n    private EditText mUsername;\r\n    private EditText mdescription;\r\n    private EditText mExternalLinks;\r\n    private ImageView mAddLink;\r\n    private RelativeLayout link1Container;\r\n    private RelativeLayout link2Container;\r\n    private RelativeLayout link3Container;\r\n    private TextView mLink1;\r\n    private ImageView mLink1delete;\r\n    private TextView mLink2;\r\n    private ImageView mLink2delete;\r\n    private TextView mLink3;\r\n    private ImageView mLink3delete;\r\n\r\n    private LinearLayout mGmailLink;\r\n    private LinearLayout mInstagramLink;\r\n    private LinearLayout mFacebookLink;\r\n    private LinearLayout mTwitterLink;\r\n    private LinearLayout mWhatsappLink;\r\n\r\n    private String gmail;\r\n    private String instagramProfile;\r\n    private String facebookProfile;\r\n    private String twitterProfile;\r\n    private String whatsappNo;\r\n    private String externalLink1;\r\n    private String externalLink2;\r\n    private String externalLink3;\r\n\r\n    //dialogBoxStuff\r\n    private AlertDialog dialogBuilder;\r\n    private View dialogView;\r\n    private TextView title;\r\n    private EditText editComment;\r\n    private Button buttonSubmit;\r\n    private Button buttonCancel;\r\n\r\n    private users setting;\r\n\r\n\r\n    @SuppressLint(\"InflateParams\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.fragment_editprofile);\r\n        mContext = EditProfile.this;\r\n\r\n        mFirebaseMethods=new FirebaseMethods(mContext);\r\n\r\n        backarrow = findViewById(R.id.backarrow);\r\n        checkmark = findViewById(R.id.saveChanges);\r\n\r\n        mProfilephoto = findViewById(R.id.profile_photo);\r\n        mchangeprofilephoto = findViewById(R.id.change_Profile_Photo);\r\n\r\n        mDisplayname = findViewById(R.id.display_name);\r\n        mdescription = findViewById(R.id.description);\r\n        mUsername = findViewById(R.id.username);\r\n        mExternalLinks = findViewById(R.id.externalLinks);\r\n        mAddLink = findViewById(R.id.addLink);\r\n        link1Container = findViewById(R.id.relLayout5);\r\n        link2Container = findViewById(R.id.relLayout6);\r\n        link3Container = findViewById(R.id.relLayout7);\r\n        mLink1 = findViewById(R.id.link1);\r\n        mLink1delete = findViewById(R.id.link1delete);\r\n        mLink2 = findViewById(R.id.link2);\r\n        mLink2delete = findViewById(R.id.link2delete);\r\n        mLink3 = findViewById(R.id.link3);\r\n        mLink3delete = findViewById(R.id.link3delete);\r\n\r\n        mGmailLink = findViewById(R.id.gmail_link);\r\n        mInstagramLink = findViewById(R.id.instagram_link);\r\n        mFacebookLink = findViewById(R.id.facebook_link);\r\n        mTwitterLink = findViewById(R.id.twitter_link);\r\n        mWhatsappLink = findViewById(R.id.whatsapp_link);\r\n\r\n\r\n        gmail = \"\";\r\n        instagramProfile = \"\";\r\n        facebookProfile = \"\";\r\n        twitterProfile = \"\";\r\n        whatsappNo = \"\";\r\n        externalLink1 = \"\";\r\n        externalLink2 = \"\";\r\n        externalLink3 = \"\";\r\n\r\n        dialogBuilder = new AlertDialog.Builder(this).create();\r\n        LayoutInflater inflater = this.getLayoutInflater();\r\n        dialogView = inflater.inflate(R.layout.dialog_profile_link, null);\r\n\r\n        title = dialogView.findViewById(R.id.textView);\r\n        editComment = dialogView.findViewById(R.id.edt_comment);\r\n        buttonSubmit = dialogView.findViewById(R.id.buttonSubmit);\r\n        buttonCancel = dialogView.findViewById(R.id.buttonCancel);\r\n\r\n//        FirebaseMethods mFirebaseMethods = new FirebaseMethods(this);\r\n\r\n\r\n        setupFirebaseAuth();\r\n        initOnClicks();\r\n    }\r\n\r\n    private void initOnClicks() {\r\n        mchangeprofilephoto.setOnClickListener(v -> {\r\n            if (checkPermissionArray(Permissions.PERMISSIONS)) {\r\n                Intent intent = new Intent();\r\n                intent.setType(\"image/*\");\r\n                intent.setAction(Intent.ACTION_GET_CONTENT);\r\n                startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), 1);\r\n            } else verifyPermission(Permissions.PERMISSIONS);\r\n\r\n        });\r\n        mGmailLink.setOnClickListener(v -> {\r\n            title.setText(\"Add/Edit your email address\");\r\n            editComment.setInputType(InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS);\r\n            if (gmail != null || !gmail.equals(\"\")) {\r\n                buttonSubmit.setText(\"EDIT\");\r\n                editComment.setText(gmail);\r\n            } else editComment.setHint(\"Enter email address to add\");\r\n            buttonSubmit.setOnClickListener(view -> {\r\n                String text = String.valueOf(editComment.getText());\r\n                gmail = text;\r\n                if (text.equals(\"\")) editComment.setError(\"Cant be empty\");\r\n                else {\r\n                    mGmailLink.setAlpha(1.0f);\r\n                    dialogBuilder.dismiss();\r\n                }\r\n            });\r\n            buttonCancel.setOnClickListener(view -> dialogBuilder.dismiss());\r\n            dialogBuilder.setView(dialogView);\r\n            dialogBuilder.show();\r\n        });\r\n        mInstagramLink.setOnClickListener(v -> {\r\n            title.setText(\"Add/Edit your Instagram username\");\r\n            editComment.setInputType(InputType.TYPE_CLASS_TEXT);\r\n            if (instagramProfile != null || !instagramProfile.equals(\"\")) {\r\n                buttonSubmit.setText(\"EDIT\");\r\n                editComment.setText(instagramProfile);\r\n            } else {\r\n                editComment.setText(instagramProfile);\r\n                editComment.setHint(\"Enter profile link to add\");\r\n            }\r\n            buttonSubmit.setOnClickListener(view -> {\r\n                String text = String.valueOf(editComment.getText());\r\n                instagramProfile = text;\r\n                if (text.equals(\"\")) editComment.setError(\"Cant be empty\");\r\n                else {\r\n                    mInstagramLink.setAlpha(1.0f);\r\n                    dialogBuilder.dismiss();\r\n                }\r\n            });\r\n            buttonCancel.setOnClickListener(view -> dialogBuilder.dismiss());\r\n            dialogBuilder.setView(dialogView);\r\n            dialogBuilder.show();\r\n        });\r\n        mFacebookLink.setOnClickListener(v -> {\r\n            title.setText(\"Add/Edit your Facebook unique id\");\r\n            editComment.setInputType(InputType.TYPE_CLASS_TEXT);\r\n            if (facebookProfile != null || !facebookProfile.equals(\"\")) {\r\n                buttonSubmit.setText(\"EDIT\");\r\n                editComment.setText(facebookProfile);\r\n            } else {\r\n                editComment.setText(facebookProfile);\r\n                editComment.setHint(\"Enter profile link to add\");\r\n            }\r\n            buttonSubmit.setOnClickListener(view -> {\r\n                String text = String.valueOf(editComment.getText());\r\n                facebookProfile = text;\r\n                if (text.equals(\"\")) editComment.setError(\"Cant be empty\");\r\n                else {\r\n                    mFacebookLink.setAlpha(1.0f);\r\n                    dialogBuilder.dismiss();\r\n                }\r\n            });\r\n            buttonCancel.setOnClickListener(view -> dialogBuilder.dismiss());\r\n            dialogBuilder.setView(dialogView);\r\n            dialogBuilder.show();\r\n        });\r\n        mTwitterLink.setOnClickListener(v -> {\r\n            title.setText(\"Add/Edit your Twitter id\");\r\n            editComment.setInputType(InputType.TYPE_CLASS_TEXT);\r\n            if (twitterProfile != null || !twitterProfile.equals(\"\")) {\r\n                buttonSubmit.setText(\"EDIT\");\r\n                editComment.setText(twitterProfile);\r\n            } else {\r\n                editComment.setText(twitterProfile);\r\n                editComment.setHint(\"Enter profile link to add\");\r\n            }\r\n            buttonSubmit.setOnClickListener(view -> {\r\n                String text = String.valueOf(editComment.getText());\r\n                twitterProfile = text;\r\n                if (text.equals(\"\")) editComment.setError(\"Cant be empty\");\r\n                else {\r\n                    mTwitterLink.setAlpha(1.0f);\r\n                    dialogBuilder.dismiss();\r\n                }\r\n            });\r\n            buttonCancel.setOnClickListener(view -> dialogBuilder.dismiss());\r\n            dialogBuilder.setView(dialogView);\r\n            dialogBuilder.show();\r\n        });\r\n        mWhatsappLink.setOnClickListener(v -> {\r\n            title.setText(\"Add/Edit your Whats app no\");\r\n            editComment.setInputType(InputType.TYPE_CLASS_PHONE);\r\n            if (whatsappNo != null || !whatsappNo.equals(\"\")) {\r\n                buttonSubmit.setText(\"EDIT\");\r\n                editComment.setText(whatsappNo);\r\n            } else {\r\n                editComment.setText(whatsappNo);\r\n                editComment.setHint(\"Enter contact no. to add\");\r\n            }\r\n            buttonSubmit.setOnClickListener(view -> {\r\n                String text = String.valueOf(editComment.getText());\r\n                whatsappNo = text;\r\n                if (text.equals(\"\")) editComment.setError(\"Cant be empty\");\r\n                else {\r\n                    mWhatsappLink.setAlpha(1.0f);\r\n                    dialogBuilder.dismiss();\r\n                }\r\n            });\r\n            buttonCancel.setOnClickListener(view -> dialogBuilder.dismiss());\r\n            dialogBuilder.setView(dialogView);\r\n            dialogBuilder.show();\r\n        });\r\n        mAddLink.setOnClickListener(v -> {\r\n            String link = String.valueOf(mExternalLinks.getText());\r\n            if (!link.equals(\"\")) {\r\n                if (link1Container.getVisibility() == View.VISIBLE && link2Container.getVisibility() == View.VISIBLE && link3Container.getVisibility() == View.VISIBLE) {\r\n                    Toast.makeText(mContext, \"You can add at the most 3 links\", Toast.LENGTH_LONG).show();\r\n                } else if (link1Container.getVisibility() == View.VISIBLE && link2Container.getVisibility() == View.VISIBLE && link3Container.getVisibility() != View.VISIBLE) {\r\n                    link3Container.setVisibility(View.VISIBLE);\r\n                    mLink3.setText(link);\r\n                    externalLink3 = link;\r\n                    mExternalLinks.setText(\"\");\r\n                } else if (link1Container.getVisibility() == View.VISIBLE && link2Container.getVisibility() != View.VISIBLE && link3Container.getVisibility() != View.VISIBLE) {\r\n                    link2Container.setVisibility(View.VISIBLE);\r\n                    mLink2.setText(link);\r\n                    externalLink2 = link;\r\n                    mExternalLinks.setText(\"\");\r\n                } else {\r\n                    link1Container.setVisibility(View.VISIBLE);\r\n                    mLink1.setText(link);\r\n                    externalLink1 = link;\r\n                    mExternalLinks.setText(\"\");\r\n                }\r\n            }\r\n        });\r\n        mLink1delete.setOnClickListener(v -> {\r\n            if (link1Container.getVisibility() == View.VISIBLE && link2Container.getVisibility() == View.VISIBLE) {\r\n                mLink1.setText(mLink2.getText());\r\n                mLink2.setText(mLink3.getText());\r\n                externalLink1 = externalLink2;\r\n                externalLink2 = externalLink3;\r\n                externalLink3 = \"\";\r\n                mLink3.setText(\"\");\r\n                link3Container.setVisibility(View.GONE);\r\n            } else if (link2Container.getVisibility() == View.VISIBLE && link3Container.getVisibility() != View.VISIBLE) {\r\n                mLink1.setText(mLink2.getText());\r\n                externalLink1 = externalLink2;\r\n                externalLink2 = \"\";\r\n                mLink2.setText(\"\");\r\n                link2Container.setVisibility(View.GONE);\r\n            } else if (link2Container.getVisibility() != View.VISIBLE && link3Container.getVisibility() == View.VISIBLE) {\r\n\r\n            } else {\r\n                externalLink1 = \"\";\r\n                mLink1.setText(\"\");\r\n                link1Container.setVisibility(View.GONE);\r\n            }\r\n        });\r\n        mLink2delete.setOnClickListener(v -> {\r\n            if (link3Container.getVisibility() == View.VISIBLE) {\r\n                mLink2.setText(mLink3.getText());\r\n                externalLink2 = externalLink3;\r\n                externalLink3 = \"\";\r\n                mLink3.setText(\"\");\r\n                link3Container.setVisibility(View.GONE);\r\n            } else {\r\n                externalLink1 = \"\";\r\n                mLink2.setText(\"\");\r\n                link2Container.setVisibility(View.GONE);\r\n            }\r\n        });\r\n        mLink3delete.setOnClickListener(v -> {\r\n            externalLink3 = \"\";\r\n            mLink3.setText(\"\");\r\n            link3Container.setVisibility(View.GONE);\r\n        });\r\n        backarrow.setOnClickListener(v -> {\r\n            androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(this);\r\n            builder.setTitle(\"Are you sure\")\r\n                    .setMessage(\"You will discard all the changes you made?\")\r\n                    .setCancelable(false)\r\n                    .setPositiveButton(\"Yes\", (dialog, id) -> finish())\r\n                    .setNegativeButton(\"No\", (dialog, id) -> dialog.cancel())\r\n                    .show();\r\n        });\r\n        checkmark.setOnClickListener(v -> {\r\n            androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(this);\r\n            builder.setTitle(\"Are you sure\")\r\n                    .setMessage(\"Would you not like to check changes once again?\")\r\n                    .setCancelable(false)\r\n                    .setPositiveButton(\"Yes\", (dialog, id) -> dialog.cancel())\r\n                    .setNegativeButton(\"No\", (dialog, id) -> saveProfileSetting())\r\n                    .show();\r\n        });\r\n    }\r\n\r\n    public void verifyPermission(String[] permissions) {\r\n        ActivityCompat.requestPermissions(this, permissions, VERIFY_PERMISSION_REQUEST);\r\n    }\r\n\r\n    @SuppressLint(\"DefaultLocale\")\r\n    private void saveProfileSetting() {\r\n        final String displayName = mDisplayname.getText().toString();\r\n        final String username = mUsername.getText().toString();\r\n        final String description = mdescription.getText().toString();\r\n        //if user made a change to username\r\n        if (!setting.getU().equals(username))\r\n            checkifuserexist(username);\r\n\r\n        if (!displayName.equals(\"\") && !setting.getDn().equals(displayName))\r\n            myRef.child(getString(R.string.dbname_users)).child(userID).child(getString(R.string.field_display_name)).setValue(displayName);\r\n        if (!setting.getDes().equals(description))\r\n            myRef.child(getString(R.string.dbname_users)).child(userID).child(getString(R.string.field_description)).setValue(description);\r\n\r\n        if (!gmail.equals(\"\") && (setting.getE() == null || !setting.getE().equals(gmail)))\r\n            myRef.child(getString(R.string.dbname_users)).child(userID).child(getString(R.string.field_email)).setValue(gmail);\r\n        if (!instagramProfile.equals(\"\") && (setting.getIn() == null || !setting.getIn().equals(instagramProfile)))\r\n            myRef.child(getString(R.string.dbname_users)).child(userID).child(getString(R.string.field_instagram)).setValue(instagramProfile);\r\n        if (!facebookProfile.equals(\"\") && (setting.getFb() == null || !setting.getFb().equals(facebookProfile)))\r\n            myRef.child(getString(R.string.dbname_users)).child(userID).child(getString(R.string.field_facebook)).setValue(facebookProfile);\r\n        if (!twitterProfile.equals(\"\") && (setting.getTw() == null || !setting.getTw().equals(twitterProfile)))\r\n            myRef.child(getString(R.string.dbname_users)).child(userID).child(getString(R.string.field_twitter)).setValue(twitterProfile);\r\n        if (!whatsappNo.equals(\"\") && (setting.getWa() == null || !setting.getWa().equals(whatsappNo)))\r\n            myRef.child(getString(R.string.dbname_users)).child(userID).child(getString(R.string.field_whatsapp)).setValue(whatsappNo);\r\n\r\n        myRef.child(getString(R.string.dbname_users)).child(userID).child(getString(R.string.field_link1)).setValue(externalLink1);\r\n        myRef.child(getString(R.string.dbname_users)).child(userID).child(getString(R.string.field_link2)).setValue(externalLink2);\r\n        myRef.child(getString(R.string.dbname_users)).child(userID).child(getString(R.string.field_link3)).setValue(externalLink3);\r\n\r\n        if (photoChanged) {\r\n            Log.d(TAG, \"uploadNewPhoto: uploading new PROFILE photo\" + (mContext.getString(R.string.profile_photo)));\r\n            ProgressDialog dialog = ProgressDialog.show(mContext, \"\", \"Uploading... - \", true);\r\n            FilePaths filepaths = new FilePaths();\r\n            String user_id = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n            final StorageReference storageReference = FirebaseStorage.getInstance().getReference().child(filepaths.FIREBASE_IMAGE_STORAGE + \"/\" + user_id + \"/profile_photo\");\r\n\r\n\r\n            String imgUrl2= mFirebaseMethods.compressImage(imgURL);\r\n\r\n            Bitmap bm = ImageManager.getBitmap(imgUrl2);\r\n\r\n\r\n            byte[] bytes;\r\n\r\n            bytes = ImageManager.getBytesFromBitmap(bm, 100);\r\n\r\n\r\n            UploadTask uploadTask = storageReference.putBytes(bytes);\r\n            uploadTask.addOnSuccessListener(taskSnapshot -> {\r\n                dialog.dismiss();\r\n                storageReference.getDownloadUrl().addOnSuccessListener(uri -> {\r\n                    myRef.child(mContext.getString(R.string.dbname_users)).child(userID).child(mContext.getString(R.string.profile_photo)).setValue(uri.toString());\r\n                    Toast.makeText(mContext, \"Photo Upload success\", Toast.LENGTH_SHORT).show();\r\n                });\r\n                mContext.startActivity(new Intent(mContext, ProfileActivity.class));\r\n            }).addOnFailureListener(e -> {\r\n                dialog.dismiss();\r\n                Log.d(TAG, \"onFailure: Photo Upload Failed\");\r\n                Toast.makeText(mContext, \"Photo Upload failed\", Toast.LENGTH_SHORT).show();\r\n                mContext.startActivity(new Intent(mContext, PostPhotoActivity.class));\r\n            }).addOnProgressListener(taskSnapshot -> {\r\n                double progress = (100 * taskSnapshot.getBytesTransferred()) / taskSnapshot.getTotalByteCount();\r\n                ProgressDialog.show(mContext, \"\", \"Uploading... - \" + String.format(\"%.0f\", progress) + \"%\", true);\r\n                Toast.makeText(mContext, \"Photo Upload Progress\" + String.format(\"%.0f\", progress) + \"%\", Toast.LENGTH_SHORT).show();\r\n                Log.d(TAG, \"onProgress: upload progress\" + progress + \"% done\");\r\n            });\r\n        } else mContext.startActivity(new Intent(mContext, ProfileActivity.class));\r\n    }\r\n\r\n    private void checkifuserexist(final String username) {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_users))\r\n                .child(username);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (!dataSnapshot.exists()) {\r\n//                    add the username\r\n                    myRef.child(mContext.getString(R.string.dbname_users)).child(userID).child(mContext.getString(R.string.field_username)).setValue(username);\r\n                    Toast.makeText(EditProfile.this, \"saved username\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                for (DataSnapshot singleSnapshot : dataSnapshot.getChildren()) {\r\n                    if (singleSnapshot.exists()) {\r\n                        Toast.makeText(EditProfile.this, \"That Username already exist\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public boolean checkPermissionArray(String[] permissions) {\r\n        for (String check : permissions) if (!checkPermissions(check)) return false;\r\n        return true;\r\n    }\r\n\r\n    public boolean checkPermissions(String permission) {\r\n        int permissionRequest = ActivityCompat.checkSelfPermission(this, permission);\r\n        return permissionRequest == PackageManager.PERMISSION_GRANTED;\r\n    }\r\n\r\n    //    private void setProfileimage(){\r\n//        Log.d(TAG,\"setProfileimage: setting profile image\");\r\n//        String imgURL=\"https://www.pngmart.com/files/7/Red-Smoke-Transparent-Images-PNG.png\";\r\n//        UniversalImageLoader.setImage(imgURL, mProfilephoto,null,\"\");\r\n//    }\r\n    private void setProfileWidgets(users userSetting) {\r\n        setting = userSetting;\r\n\r\n        Glide.with(EditProfile.this)\r\n                .load(setting.getPp())\r\n                .placeholder(R.drawable.load)\r\n                .error(R.drawable.default_image2)\r\n                .placeholder(R.drawable.load)\r\n                .thumbnail(0.2f)\r\n                .into(mProfilephoto);\r\n\r\n        mDisplayname.setText(setting.getDn());\r\n        mUsername.setText(setting.getU());\r\n        mdescription.setText(setting.getDes());\r\n\r\n        if (userSetting.getl1() == null || userSetting.getl1().equals(\"\"))\r\n            link1Container.setVisibility(View.GONE);\r\n        else mLink1.setText(userSetting.getl1());\r\n        if (userSetting.getl2() == null || userSetting.getl2().equals(\"\"))\r\n            link2Container.setVisibility(View.GONE);\r\n        else mLink2.setText(userSetting.getl2());\r\n        if (userSetting.getl3() == null || userSetting.getl3().equals(\"\"))\r\n            link3Container.setVisibility(View.GONE);\r\n        else mLink3.setText(userSetting.getl3());\r\n\r\n        if (userSetting.getE() == null || userSetting.getE().equals(\"\"))\r\n            mGmailLink.setAlpha(0.5f);\r\n        else gmail = userSetting.getE();\r\n\r\n        if (userSetting.getIn() == null || userSetting.getIn().equals(\"\"))\r\n            mInstagramLink.setAlpha(0.5f);\r\n        else instagramProfile = userSetting.getIn();\r\n\r\n        if (userSetting.getFb() == null || userSetting.getFb().equals(\"\"))\r\n            mFacebookLink.setAlpha(0.5f);\r\n        else facebookProfile = userSetting.getFb();\r\n\r\n        if (userSetting.getTw() == null || userSetting.getTw().equals(\"\"))\r\n            mTwitterLink.setAlpha(0.5f);\r\n        else twitterProfile = userSetting.getTw();\r\n\r\n        if (userSetting.getWa() == null || userSetting.getWa().equals(\"\"))\r\n            mWhatsappLink.setAlpha(0.5f);\r\n        else whatsappNo = userSetting.getWa();\r\n    }\r\n\r\n    @TargetApi(19)\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        String imgPath = \"\";\r\n        if (data != null && data.getData() != null && resultCode == RESULT_OK) {\r\n            Uri uri = data.getData();\r\n            if (DocumentsContract.isDocumentUri(this, uri)) {\r\n                if (\"com.android.externalstorage.documents\".equals(uri.getAuthority())) {\r\n                    String docId = DocumentsContract.getDocumentId(uri);\r\n                    String[] split = docId.split(\":\");\r\n                    String type = split[0];\r\n                    if (\"primary\".equalsIgnoreCase(type)) {\r\n                        imgPath = Environment.getExternalStorageDirectory() + \"/\" + split[1];\r\n                        setImage(imgPath);\r\n                    } else {\r\n                        Pattern DIR_SEPORATOR = Pattern.compile(\"/\");\r\n                        Set<String> rv = new HashSet<>();\r\n                        String rawExternalStorage = System.getenv(\"EXTERNAL_STORAGE\");\r\n                        String rawSecondaryStoragesStr = System.getenv(\"SECONDARY_STORAGE\");\r\n                        String rawEmulatedStorageTarget = System.getenv(\"EMULATED_STORAGE_TARGET\");\r\n                        if (TextUtils.isEmpty(rawEmulatedStorageTarget))\r\n                            if (TextUtils.isEmpty(rawExternalStorage)) rv.add(\"/storage/sdcard0\");\r\n                            else rv.add(rawExternalStorage);\r\n                        else {\r\n                            String rawUserId;\r\n                            String path = Environment.getExternalStorageDirectory().getAbsolutePath();\r\n                            String[] folders = DIR_SEPORATOR.split(path);\r\n                            String lastFolder = folders[folders.length - 1];\r\n                            boolean isDigit = false;\r\n                            try {\r\n                                Integer.valueOf(lastFolder);\r\n                                isDigit = true;\r\n                            } catch (NumberFormatException ignored) {\r\n                            }\r\n                            rawUserId = isDigit ? lastFolder : \"\";\r\n                            if (TextUtils.isEmpty(rawUserId)) rv.add(rawEmulatedStorageTarget);\r\n                            else rv.add(rawEmulatedStorageTarget + File.separator + rawUserId);\r\n                        }\r\n                        if (!TextUtils.isEmpty(rawSecondaryStoragesStr)) {\r\n                            String[] rawSecondaryStorages = rawSecondaryStoragesStr.split(File.pathSeparator);\r\n                            Collections.addAll(rv, rawSecondaryStorages);\r\n                        }\r\n                        String[] temp = rv.toArray(new String[0]);\r\n                        for (String s : temp) {\r\n                            File tempf = new File(s + \"/\" + split[1]);\r\n                            if (tempf.exists()) {\r\n                                imgPath = s + \"/\" + split[1];\r\n                                setImage(imgPath);\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (\"com.android.providers.downloads.documents\".equals(uri.getAuthority())) {\r\n                    String id = DocumentsContract.getDocumentId(uri);\r\n                    Uri contentUri = ContentUris.withAppendedId(Uri.parse(\"content://downloads/public_downloads\"), Long.parseLong(id));\r\n                    Cursor cursor = null;\r\n                    String column = \"_data\";\r\n                    String[] projection = {column};\r\n                    try {\r\n                        cursor = this.getContentResolver().query(contentUri, projection, null, null, null);\r\n                        if (cursor != null && cursor.moveToFirst()) {\r\n                            int column_index = cursor.getColumnIndexOrThrow(column);\r\n                            imgPath = cursor.getString(column_index);\r\n                            setImage(imgPath);\r\n                        }\r\n                    } finally {\r\n                        if (cursor != null) cursor.close();\r\n                    }\r\n                } else if (\"com.android.providers.media.documents\".equals(uri.getAuthority())) {\r\n                    String docId = DocumentsContract.getDocumentId(uri);\r\n                    String[] split = docId.split(\":\");\r\n                    String type = split[0];\r\n                    Uri contentUri = null;\r\n                    if (\"image\".equals(type))\r\n                        contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;\r\n                    else if (\"video\".equals(type))\r\n                        contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;\r\n                    else if (\"audio\".equals(type))\r\n                        contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\r\n                    String selection = \"_id=?\";\r\n                    String[] selectionArgs = new String[]{split[1]};\r\n                    Cursor cursor = null;\r\n                    String column = \"_data\";\r\n                    String[] projection = {column};\r\n                    try {\r\n                        assert contentUri != null;\r\n                        cursor = this.getContentResolver().query(contentUri, projection, selection, selectionArgs, null);\r\n                        if (cursor != null && cursor.moveToFirst()) {\r\n                            int column_index = cursor.getColumnIndexOrThrow(column);\r\n                            imgPath = cursor.getString(column_index);\r\n                            setImage(imgPath);\r\n                        }\r\n                    } finally {\r\n                        if (cursor != null) cursor.close();\r\n                    }\r\n                } else if (\"com.google.android.apps.docs.storage\".equals(uri.getAuthority()))\r\n                    setImage(imgPath);\r\n            } else if (\"content\".equalsIgnoreCase(uri.getScheme())) {\r\n                Cursor cursor = null;\r\n                String column = \"_data\";\r\n                String[] projection = {column};\r\n                try {\r\n                    cursor = this.getContentResolver().query(uri, projection, null, null, null);\r\n                    if (cursor != null && cursor.moveToFirst()) setImage(imgPath);\r\n                } finally {\r\n                    if (cursor != null) cursor.close();\r\n                }\r\n            } else if (\"file\".equalsIgnoreCase(uri.getScheme())) {\r\n                imgPath = uri.getPath();\r\n                setImage(imgPath);\r\n            }\r\n        }\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n\r\n    private void setImage(String imgPath) {\r\n        Log.d(TAG, \"setImage next \" + imgPath);\r\n        imgURL = imgPath;\r\n        String mAppend = \"file:/\";\r\n        Glide.with(EditProfile.this)\r\n                .load(imgURL)\r\n                .placeholder(R.drawable.load)\r\n                .error(R.drawable.default_image2)\r\n                .placeholder(R.drawable.load)\r\n                .thumbnail(0.2f)\r\n                .into(mProfilephoto);\r\n        photoChanged = true;\r\n    }\r\n\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        FirebaseDatabase mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        userID = mAuth.getCurrentUser().getUid();\r\n\r\n        mAuthListener = firebaseAuth -> {\r\n            FirebaseUser user = firebaseAuth.getCurrentUser();\r\n            if (user == null) {\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                Log.d(TAG, \"onAuthStateChanged: navigating to login\");\r\n                SharedPreferences settings = getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n                new AlertDialog.Builder(mContext)\r\n                        .setTitle(\"No user logon found\")\r\n                        .setMessage(\"We will be logging u out. \\n Please try to log in again\")\r\n                        .setPositiveButton(android.R.string.ok, (dialog, which) -> {\r\n                            Intent intent = new Intent(mContext, login.class);\r\n                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                            settings.edit().clear().apply();\r\n                            startActivity(intent);\r\n                        })\r\n                        .show();\r\n            } else Log.d(TAG, \"onAuthStateChanged: signed_in:\" + user.getUid());\r\n        };\r\n        myRef.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                //retrieve user information from the database\r\n                setProfileWidgets(dataSnapshot.child(getString(R.string.dbname_users)).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).getValue(users.class));\r\n                //retrieve image for the user in question\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(this);\r\n        builder.setTitle(\"Are you sure\")\r\n                .setMessage(\"You will discard all the changes you made?\")\r\n                .setCancelable(false)\r\n                .setPositiveButton(\"Yes\", (dialog, id) -> finish())\r\n                .setNegativeButton(\"No\", (dialog, id) -> dialog.cancel())\r\n                .show();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/com/orion/orion/profile/Account/EditProfile.java	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/java/com/orion/orion/profile/Account/EditProfile.java	(date 1605863672980)
-@@ -374,17 +374,17 @@
-             builder.setTitle("Are you sure")
-                     .setMessage("You will discard all the changes you made?")
-                     .setCancelable(false)
--                    .setPositiveButton("Yes", (dialog, id) -> finish())
-+                    .setPositiveButton("Go back", (dialog, id) -> finish())
-                     .setNegativeButton("No", (dialog, id) -> dialog.cancel())
-                     .show();
-         });
-         checkmark.setOnClickListener(v -> {
-             androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(this);
-             builder.setTitle("Are you sure")
--                    .setMessage("Would you not like to check changes once again?")
-+                    .setMessage("Save changes you made?")
-                     .setCancelable(false)
--                    .setPositiveButton("Yes", (dialog, id) -> dialog.cancel())
--                    .setNegativeButton("No", (dialog, id) -> saveProfileSetting())
-+                    .setPositiveButton("Save", (dialog, id) -> saveProfileSetting())
-+                    .setNegativeButton("No", (dialog, id) -> dialog.cancel())
-                     .show();
-         });
-     }
-Index: app/src/main/res/layout-v21/activity_explore.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:background=\"@color/white\">\r\n\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/relLayout1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@drawable/pink_round_button\"\r\n        android:padding=\"10dp\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/explore\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginBottom=\"15dp\"\r\n            android:text=\"Explore\"\r\n\r\n            android:textAllCaps=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:textSize=\"20sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/explore\">\r\n\r\n            <include layout=\"@layout/snippet_searchbar\" />\r\n        </RelativeLayout>\r\n\r\n    </RelativeLayout>\r\n\r\n    <ListView\r\n        android:id=\"@+id/listview\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"10dp\"\r\n        android:layout_below=\"@+id/relLayout1\"\r\n        android:visibility=\"visible\" />\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/listview\"\r\n        android:nestedScrollingEnabled=\"false\">\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/contellation\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:nestedScrollingEnabled=\"false\">\r\n\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/collapse\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_alignParentStart=\"true\"\r\n                android:layout_alignParentEnd=\"true\"\r\n                android:nestedScrollingEnabled=\"false\">\r\n\r\n                <include layout=\"@layout/layout_constellation\" />\r\n\r\n\r\n            </RelativeLayout>\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@id/collapse\"\r\n                android:layout_margin=\"5dp\">\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/up\"\r\n                    android:layout_width=\"20dp\"\r\n                    android:layout_height=\"20dp\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:src=\"@drawable/ic_arrow_up\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/down\"\r\n                    android:layout_width=\"20dp\"\r\n                    android:layout_height=\"20dp\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:src=\"@drawable/ic_arrow_down\"\r\n                    android:visibility=\"gone\" />\r\n\r\n            </RelativeLayout>\r\n        </RelativeLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/contellation\"\r\n            android:nestedScrollingEnabled=\"false\">\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/topBox\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:nestedScrollingEnabled=\"false\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingStart=\"10dp\"\r\n                    android:paddingTop=\"5dp\"\r\n                    android:paddingEnd=\"10dp\"\r\n                    android:paddingBottom=\"5dp\"\r\n                    android:weightSum=\"2\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/overall\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical|start\"\r\n                        android:layout_weight=\"1\"\r\n                        android:text=\"Overall\"\r\n                        android:textColor=\"@color/scheme8\"\r\n                        android:textSize=\"24sp\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/domain\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_weight=\"1\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:gravity=\"end\"\r\n                        android:entries=\"@array/domain2\"\r\n                        android:text=\"Domain\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"24sp\" />\r\n\r\n                </LinearLayout>\r\n            </RelativeLayout>\r\n\r\n            <TextView\r\n                android:layout_below=\"@+id/topBar\"\r\n                android:layout_alignParentBottom=\"true\"\r\n                android:id=\"@+id/noPost\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:gravity=\"center\"\r\n                android:text=\"NO POSTS TO SHOW ¯\\\\_(ツ)_/¯\"\r\n                android:textStyle=\"bold\"\r\n                android:textColor=\"@color/scheme8\"\r\n                android:textSize=\"18sp\"\r\n                android:visibility=\"gone\" />\r\n\r\n            <androidx.swiperefreshlayout.widget.SwipeRefreshLayout\r\n                android:id=\"@+id/swiperefresh\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginBottom=\"50dp\"\r\n                android:layout_below=\"@id/topBox\"\r\n                android:background=\"@drawable/circular_corner_rectangle\"\r\n                android:backgroundTint=\"@color/white\">\r\n\r\n                <androidx.recyclerview.widget.RecyclerView\r\n                    android:id=\"@+id/exploreRv\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:layout_marginBottom=\"50dp\"\r\n                    android:nestedScrollingEnabled=\"false\"\r\n                    android:visibility=\"visible\"\r\n                    app:layoutManager=\"androidx.recyclerview.widget.GridLayoutManager\"\r\n                    app:spanCount=\"3\" />\r\n            </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>\r\n        </RelativeLayout>\r\n    </RelativeLayout>\r\n\r\n    <include layout=\"@layout/layout_bottom_navigation_view\" />\r\n\r\n</RelativeLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout-v21/activity_explore.xml	(revision 5e83f58689bec79d1fa2a94eb2a36d3d32a2176e)
-+++ app/src/main/res/layout-v21/activity_explore.xml	(date 1605880254305)
-@@ -39,7 +39,7 @@
-     <ListView
-         android:id="@+id/listview"
-         android:layout_width="match_parent"
--        android:layout_height="10dp"
-+        android:layout_height="wrap_content"
-         android:layout_below="@+id/relLayout1"
-         android:visibility="visible" />
- 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_22-11-2020_12_08__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_22-11-2020_12_08__Default_Changelist_.xml	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_22-11-2020_12_08__Default_Changelist_.xml	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_22-11-2020_12_08_[Default_Changelist]" date="1606027099032" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22-11-2020_12_08_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 22-11-2020 12:08 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_22-11-2020_12_08_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_22-11-2020_12_08_[Default_Changelist]/shelved.patch	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_22-11-2020_12_08_[Default_Changelist]/shelved.patch	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
@@ -1,49 +0,0 @@
-Index: app/proguard-rules.pro
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+># Add project specific ProGuard rules here.\r\n# You can control the set of applied configuration files using the\r\n# proguardFiles setting in build.gradle.\r\n#\r\n# For more details, see\r\n#   http://developer.android.com/guide/developing/tools/proguard.html\r\n\r\n# If your project uses WebView with JS, uncomment the following\r\n# and specify the fully qualified class name to the JavaScript interface\r\n# class:\r\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\r\n#   public *;\r\n#}\r\n\r\n# Uncomment this to preserve the line number information for\r\n# debugging stack traces.\r\n#-keepattributes SourceFile,LineNumberTable\r\n\r\n# If you keep the line number information, uncomment this to\r\n# hide the original source file name.\r\n#-renamesourcefileattribute SourceFile\r\n-keep public class * implements com.bumptech.glide.module.GlideModule\r\n-keep class * extends com.bumptech.glide.module.AppGlideModule {\r\n <init>(...);\r\n}\r\n-keep public enum com.bumptech.glide.load.ImageHeaderParser$** {\r\n  **[] $VALUES;\r\n  public *;\r\n}\r\n-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {\r\n  *** rewind();\r\n}\r\n-keepclassmembers,allowobfuscation class * {\r\n    @com.google.gson.annotations.SerializedName <fields>;\r\n  }\r\n-keep,allowobfuscation interface com.google.gson.annotations.SerializedName\r\n\r\n-dontwarn com.squareup.okhttp.**\r\n\r\n-keep class com.orion.orion** { *; }\r\n-keep class package.model.* { *; }\r\n-keepattributes Annotation,Signature
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/proguard-rules.pro	(revision 23f7c8ec5b4a31738a801654069f3d7af477ae7d)
-+++ app/proguard-rules.pro	(date 1605976513856)
-@@ -39,4 +39,15 @@
- 
- -keep class com.orion.orion** { *; }
- -keep class package.model.* { *; }
---keepattributes Annotation,Signature
-\ No newline at end of file
-+-keepattributes Annotation,Signature
-+
-+-keepclassmembers,allowshrinking,allowobfuscation class com.android.volley.NetworkDispatcher {
-+    void processRequest();
-+}
-+-keepclassmembers,allowshrinking,allowobfuscation class com.android.volley.CacheDispatcher {
-+    void processRequest();
-+}
-+-assumenosideeffects class android.util.Log {
-+    public static *** d(...);
-+    public static *** v(...);
-+}
-\ No newline at end of file
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\napply plugin: 'com.google.firebase.firebase-perf'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion '30.0.2'\r\n    defaultConfig {\r\n        applicationId \"com.orion.orion\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        multiDexEnabled true\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        debug {\r\n            shrinkResources true\r\n            minifyEnabled true\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.1'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    def multidex_version = \"2.0.1\"\r\n    implementation \"androidx.multidex:multidex:$multidex_version\"\r\n\r\n\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n\r\n    implementation 'com.google.firebase:firebase-database:19.5.1'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.0'\r\n    implementation 'com.google.firebase:firebase-messaging:21.0.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'\r\n    implementation 'com.google.firebase:firebase-analytics:18.0.0'\r\n    implementation 'com.google.firebase:firebase-perf:19.0.10'\r\n    testImplementation 'junit:junit:4.13.1'\r\n    androidTestImplementation 'androidx.test:runner:1.3.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.google.android.gms:play-services-location:17.1.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n    //animations\r\n    implementation 'com.daimajia.easing:library:2.4@aar'\r\n    implementation 'com.daimajia.androidanimations:library:2.4@aar'\r\n\r\n\r\n//exoplayer\r\n    implementation 'com.google.android.exoplayer:exoplayer:2.11.7'\r\n    implementation 'com.danikula:videocache:2.7.1'\r\n\r\n    //VideoCompressor + kotlin\r\n    implementation 'com.github.AbedElazizShe:LightCompressor:0.7.5'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'\r\n\r\n    implementation 'androidx.preference:preference:1.1.1'\r\n\r\n    //    update\r\n    implementation 'com.google.android.play:core:1.8.3'\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/build.gradle	(revision 23f7c8ec5b4a31738a801654069f3d7af477ae7d)
-+++ app/build.gradle	(date 1606020884736)
-@@ -17,6 +17,11 @@
-     }
-     buildTypes {
-         debug {
-+            shrinkResources false
-+            minifyEnabled false
-+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
-+        }
-+        release {
-             shrinkResources true
-             minifyEnabled true
-             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
Index: .idea/shelf/Uncommitted_changes_before_Update_at_23-11-2020_10_12__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_23-11-2020_10_12__Default_Changelist_.xml	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_23-11-2020_10_12__Default_Changelist_.xml	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_23-11-2020_10_12_[Default_Changelist]" date="1606106697702" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23-11-2020_10_12_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23-11-2020 10:12 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/res/layout/snippet_searchbar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><merge xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/profileToolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"40dp\"\r\n        android:background=\"@drawable/rectangular_border\">\r\n\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:gravity=\"center\"\r\n            android:orientation=\"horizontal\"\r\n            android:weightSum=\"3\">\r\n            <ImageView\r\n                android:id=\"@+id/searchicon\"\r\n                android:layout_width=\"22dp\"\r\n                android:layout_height=\"22dp\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:layout_weight=\"0.25\"\r\n                android:src=\"@drawable/ic_search_logo\" />\r\n            <EditText\r\n                android:id=\"@+id/search\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:layout_marginLeft=\"5dp\"\r\n                android:layout_toRightOf=\"@id/searchicon\"\r\n\r\n                android:layout_weight=\"2.5\"\r\n                android:background=\"@null\"\r\n                android:gravity=\"center\"\r\n\r\n                android:hint=\"search username...\"\r\n                android:maxLines=\"1\"\r\n\r\n                android:textColor=\"#000000\"\r\n                android:textSize=\"18sp\" />\r\n\r\n\r\n\r\n\r\n            <ImageView\r\n                android:id=\"@+id/cross\"\r\n                android:layout_width=\"22dp\"\r\n                android:layout_height=\"22dp\"\r\n                android:layout_centerVertical=\"true\"\r\n                android:layout_toRightOf=\"@id/search\"\r\n                android:layout_weight=\"0.25\"\r\n                android:src=\"@drawable/ic_cross_black\"\r\n                android:visibility=\"gone\" />\r\n\r\n\r\n        </LinearLayout>\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n\r\n</merge>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/snippet_searchbar.xml	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/src/main/res/layout/snippet_searchbar.xml	(date 1610347097392)
@@ -41,8 +41,6 @@
                 android:textSize="18sp" />
 
 
-
-
             <ImageView
                 android:id="@+id/cross"
                 android:layout_width="22dp"
Index: app/src/main/java/com/orion/orion/home/Chat_Activity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.home;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.InputFilter;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.Adapters.AdapterChat;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.models.Chat;\r\nimport com.orion.orion.util.FirebaseMethods;\r\nimport com.orion.orion.util.SNTPClient;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.TimeZone;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\npublic class\r\nChat_Activity extends AppCompatActivity {\r\n    private static final String TAG = \"Chat_Activity\";\r\n\r\n\r\n    RecyclerView recyclerView;\r\n    ImageView mprofileImage;\r\n    TextView mUsername, accept, decline, sendReqBtn, cancelReqBtn;\r\n    EditText mMessages, reqMessage;\r\n    int x = 0;\r\n    private int mResults;\r\n    private LinearLayout reqLayout, chatLayout;\r\n    ImageButton mSendBtn;\r\n\r\n    private FirebaseAuth mAuth;\r\n    Boolean activity = true;\r\n    private FirebaseMethods mFirebaseMethods;\r\n    private List<Chat> paginatedchatlist;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private DatabaseReference myRef;\r\n    private DatabaseReference myRefUser;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n\r\n    String hisUID;\r\n    String myUID;\r\n    String request;\r\n    public String newMessageKey = \"\";\r\n    Context context = Chat_Activity.this;\r\n    public String timeStamp, timestamp2;\r\n\r\n    ValueEventListener seenListener;\r\n    ValueEventListener recievelistener;\r\n    DatabaseReference userRefForSeen;\r\n    DatabaseReference DbRef;\r\n    private Query queryr1, queryr2;\r\n    LinearLayout sendRequestLayout;\r\n\r\n    List<Chat> chatlist;\r\n    List<Chat> chatList2;\r\n    AdapterChat adapterchat1;\r\n    AdapterChat adapterchat2;\r\n\r\n    private RequestQueue requestQueue;\r\n\r\n\r\n    private boolean notifyChat;\r\n\r\n    private void disableEmojiInTitle() {\r\n        InputFilter emojiFilter = (source, start, end, dest, dstart, dend) -> {\r\n            for (int index = start; index < end - 1; index++) {\r\n                int type = Character.getType(source.charAt(index));\r\n                if (type == Character.SURROGATE) return \"\";\r\n            }\r\n            return null;\r\n        };\r\n        mMessages.setFilters(new InputFilter[]{emojiFilter});\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_chat);\r\n\r\n        mUsername = findViewById(R.id.username);\r\n        accept = findViewById(R.id.accept);\r\n\r\n        decline = findViewById(R.id.decline);\r\n        reqLayout = findViewById(R.id.requestLayout);\r\n        chatLayout = findViewById(R.id.chatLayout);\r\n\r\n\r\n        sendRequestLayout = findViewById(R.id.pro);\r\n        reqMessage = findViewById(R.id.msgReq);\r\n        sendReqBtn = findViewById(R.id.sendReq);\r\n        cancelReqBtn = findViewById(R.id.cancelReq);\r\n\r\n\r\n        mSendBtn = findViewById(R.id.sendBtn);\r\n        mMessages = findViewById(R.id.messageEt);\r\n        mprofileImage = findViewById(R.id.profile_image);\r\n        recyclerView = findViewById(R.id.chat_recyclerView);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(context));\r\n        requestQueue = Volley.newRequestQueue(getApplicationContext());\r\n        mFirebaseMethods = new FirebaseMethods(Chat_Activity.this);\r\n\r\n\r\n//        Linear layout for recycler view\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);\r\n        linearLayoutManager.setItemPrefetchEnabled(true);\r\n        linearLayoutManager.setInitialPrefetchItemCount(20);\r\n        recyclerView.setItemViewCacheSize(9);\r\n        recyclerView.setDrawingCacheEnabled(true);\r\n        recyclerView.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n        linearLayoutManager.setStackFromEnd(true);\r\n        linearLayoutManager.setReverseLayout(true);\r\n\r\n        disableEmojiInTitle();\r\n\r\n//        recycler properties\r\n\r\n        recyclerView.setHasFixedSize(true);\r\n        recyclerView.setLayoutManager(linearLayoutManager);\r\n        if (x != 0) {\r\n            recyclerView.smoothScrollToPosition(0);\r\n        }\r\n\r\n        notifyChat = false;\r\n        recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\r\n                super.onScrollStateChanged(recyclerView, newState);\r\n\r\n                if (!recyclerView.canScrollVertically(1) && newState == RecyclerView.SCROLL_STATE_IDLE) {\r\n\r\n                    displayMoreChat();\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        Intent intent = getIntent();\r\n        hisUID = intent.getStringExtra(getString(R.string.his_uid));\r\n        request = intent.getStringExtra(\"request\");\r\n\r\n        DatabaseReference refer1 = FirebaseDatabase.getInstance().getReference();\r\n\r\n        refer1.child(getString(R.string.dbname_Chats))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(hisUID)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (!snapshot.exists()) {\r\n                            if (!request.equals(\"yes\")) {\r\n                                sendRequestLayout.setVisibility(View.VISIBLE);\r\n\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n\r\n                });\r\n\r\n        cancelReqBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                finish();\r\n            }\r\n        });\r\n        sendReqBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                sendRequestMessage(reqMessage.getText().toString());\r\n            }\r\n        });\r\n        mSendBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                String message = mMessages.getText().toString().trim();\r\n\r\n                if (TextUtils.isEmpty(message)) {\r\n                    Toast.makeText(context, \"Type something please\", Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    sendMessage(message);\r\n                }\r\n\r\n            }\r\n        });\r\n        if (request.equals(\"yes\")) {\r\n            reqLayout.setVisibility(View.VISIBLE);\r\n            chatLayout.setVisibility(View.GONE);\r\n            readRequestMessage();\r\n        } else {\r\n            reqLayout.setVisibility(View.GONE);\r\n            chatLayout.setVisibility(View.VISIBLE);\r\n            readMessage();\r\n\r\n        }\r\n\r\n        decline.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(context);\r\n                builder.setTitle(\"Decline\");\r\n                builder.setMessage(\"Are you sure, you want to Decline this message?\");\r\n\r\n//                set buttons\r\n                builder.setPositiveButton(\"Decline\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        Log.d(TAG, \"Declining: \");\r\n\r\n                        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                        ref.child(context.getString(R.string.dbname_request))\r\n                                .child(context.getString(R.string.dbname_Chats))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(hisUID)\r\n                                .removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                finish();\r\n                            }\r\n                        });\r\n\r\n\r\n                    }\r\n                });\r\n\r\n\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                ref.child(context.getString(R.string.dbname_request))\r\n                        .child(context.getString(R.string.dbname_Chats))\r\n                        .child(hisUID)\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                        .removeValue();\r\n\r\n\r\n                builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                builder.create().show();\r\n\r\n\r\n            }\r\n        });\r\n        accept.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(context);\r\n                builder.setTitle(\"Accept\");\r\n                builder.setMessage(\"Are you sure, you want to Accept this message?\");\r\n\r\n//                set buttons\r\n                builder.setPositiveButton(\"Accept\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        Log.d(TAG, \"Accepting: \");\r\n\r\n\r\n                        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                        String key = ref.child(getString(R.string.dbname_users)).push().getKey();\r\n                        ref.child(context.getString(R.string.dbname_request))\r\n                                .child(context.getString(R.string.dbname_Chats))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(hisUID)\r\n                                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                                        ArrayList<Chat> chat1 = new ArrayList<>((int) dataSnapshot.getChildrenCount());\r\n\r\n                                        int x = 0;\r\n                                        for (DataSnapshot ds : dataSnapshot.getChildren()) {\r\n\r\n                                            x++;\r\n                                            Chat chat = ds.getValue(Chat.class);\r\n                                            chat1.add(chat);\r\n                                            if (x == dataSnapshot.getChildrenCount()) {\r\n                                                DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n\r\n                                                int i = 0;\r\n                                                for (Chat c : chat1) {\r\n                                                    i++;\r\n                                                    int finalI = i;\r\n                                                    ref.child(context.getString(R.string.dbname_ChatList))\r\n                                                            .child(key)\r\n                                                            .child(c.getMid())\r\n                                                            .setValue(c)\r\n                                                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                                @Override\r\n                                                                public void onSuccess(Void aVoid) {\r\n                                                                    if (finalI == chat1.size()) {\r\n\r\n                                                                        ref.child(getString(R.string.dbname_Chats))\r\n                                                                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                                                .child(hisUID)\r\n                                                                                .setValue(key);\r\n\r\n                                                                        ref.child(getString(R.string.dbname_Chats))\r\n                                                                                .child(hisUID)\r\n                                                                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                                                .setValue(key)\r\n                                                                                .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                                                                    @Override\r\n                                                                                    public void onComplete(@NonNull Task<Void> task) {\r\n                                                                                        if (task.isSuccessful()) {\r\n\r\n                                                                                            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                                                                                            ref.child(context.getString(R.string.dbname_request))\r\n                                                                                                    .child(context.getString(R.string.dbname_Chats))\r\n                                                                                                    .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                                                                    .child(hisUID)\r\n                                                                                                    .removeValue()\r\n                                                                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                                                                        @Override\r\n                                                                                                        public void onSuccess(Void aVoid) {\r\n                                                                                                            finish();\r\n                                                                                                        }\r\n                                                                                                    });\r\n\r\n                                                                                        }\r\n                                                                                    }\r\n                                                                                });\r\n                                                                    }\r\n                                                                }\r\n                                                            });\r\n\r\n                                                }\r\n                                            }\r\n\r\n\r\n                                        }\r\n\r\n\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                                    }\r\n\r\n                                });\r\n\r\n\r\n                    }\r\n                });\r\n\r\n                builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                builder.create().show();\r\n\r\n\r\n            }\r\n        });\r\n        seenMessage();\r\n    }\r\n\r\n    private void sendRequestMessage(String message) {\r\n        if (message == null || message.equals(\"\")) {\r\n            Toast.makeText(context, \"Type something Please!\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n\r\n\r\n            SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n                @Override\r\n                public void onTimeReceived(String rawDate) {\r\n                    // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n\r\n                    String str_date = rawDate;\r\n                    java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                    Date date = null;\r\n                    try {\r\n                        date = formatter.parse(str_date);\r\n                    } catch (ParseException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    timeStamp = String.valueOf(date.getTime());\r\n\r\n\r\n                    DatabaseReference refer1 = FirebaseDatabase.getInstance().getReference();\r\n                    newMessageKey = refer1.child(getString(R.string.dbname_Chats)).push().getKey();\r\n                    HashMap<String, Object> hashMap = new HashMap<>();\r\n                    hashMap.put(getString(R.string.field_sender_ID), FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                    hashMap.put(getString(R.string.field_receiver_ID), hisUID);\r\n                    hashMap.put(getString(R.string.field_message), message);\r\n                    hashMap.put(getString(R.string.field_timestamp), timeStamp);\r\n                    hashMap.put(getString(R.string.field_if_seen), false);\r\n                    hashMap.put(getString(R.string.field_message_ID), newMessageKey);\r\n\r\n                    DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                    db.child(getString(R.string.dbname_request))\r\n                            .child(getString(R.string.dbname_Chats))\r\n                            .child(hisUID)\r\n                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                            .child(newMessageKey)\r\n                            .setValue(hashMap).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            reqMessage.setText(\"\");\r\n                            Toast.makeText(context, \"Message Request Sent!\", Toast.LENGTH_SHORT).show();\r\n                            finish();\r\n\r\n                        }\r\n                    });\r\n\r\n\r\n                    Log.e(SNTPClient.TAG, rawDate);\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onError(Exception ex) {\r\n                    Log.e(SNTPClient.TAG, ex.getMessage());\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    private void readRequestMessage() {\r\n\r\n\r\n        chatlist = new ArrayList<>();\r\n\r\n\r\n        DatabaseReference DbRef = FirebaseDatabase.getInstance().getReference();\r\n        queryr1 = DbRef.child(getString(R.string.dbname_request))\r\n                .child(getString(R.string.dbname_Chats))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(hisUID);\r\n\r\n        recievelistener = queryr1.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                chatlist.clear();\r\n                int x = 0;\r\n                for (DataSnapshot ds : dataSnapshot.getChildren()) {\r\n                    x++;\r\n                    Chat chat = ds.getValue(Chat.class);\r\n\r\n\r\n                    assert chat != null;\r\n                    chatlist.add(chat);\r\n                    if (x == dataSnapshot.getChildrenCount()) {\r\n                        Collections.sort(chatlist);\r\n                        Collections.reverse(chatlist);\r\n                        displayChat();\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n//\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    //\r\n//\r\n    private void seenMessage() {\r\n\r\n\r\n        userRefForSeen = FirebaseDatabase.getInstance().getReference();\r\n        seenListener = userRefForSeen.child(getString(R.string.dbname_Chats))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(hisUID)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                        if (snapshot.exists()) {\r\n                            String key = snapshot.getValue().toString();\r\n\r\n                            DatabaseReference DbRef = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n                            DbRef.child(getString(R.string.dbname_ChatList))\r\n                                    .child(key)\r\n                                    .orderByChild(getString(R.string.field_if_seen)).equalTo(false)\r\n                                    .addValueEventListener(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                                            if (dataSnapshot.exists()) {\r\n                                                int p = 0;\r\n\r\n                                                for (DataSnapshot ds : dataSnapshot.getChildren()) {\r\n                                                    p++;\r\n                                                    if (ds.child(getString(R.string.field_receiver_ID))\r\n                                                            .getValue().toString()\r\n                                                            .equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                                                        if (activity) {\r\n                                                            DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                                                            db.child(getString(R.string.dbname_ChatList))\r\n                                                                    .child(key)\r\n                                                                    .child(ds.getKey())\r\n                                                                    .child(getString(R.string.field_if_seen))\r\n                                                                    .setValue(true)\r\n                                                                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                                        @Override\r\n                                                                        public void onSuccess(Void aVoid) {\r\n                                                                            userRefForSeen.removeEventListener(seenListener);\r\n\r\n                                                                        }\r\n                                                                    });\r\n                                                        }\r\n                                                    }\r\n                                                    if (p == dataSnapshot.getChildrenCount()) {\r\n\r\n                                                    }\r\n                                                }\r\n                                            }\r\n\r\n\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n    private void readMessage() {\r\n\r\n        chatlist = new ArrayList<>();\r\n        DatabaseReference DbRef1 = FirebaseDatabase.getInstance().getReference();\r\n        DbRef1.child(getString(R.string.dbname_Chats))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(hisUID)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                        if (snapshot.exists()) {\r\n                            DatabaseReference DbRef = FirebaseDatabase.getInstance().getReference();\r\n                            queryr1 = DbRef.child(getString(R.string.dbname_ChatList))\r\n                                    .child(snapshot.getValue().toString());\r\n                            SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n                                @Override\r\n                                public void onTimeReceived(String rawDate) {\r\n                                    // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n\r\n                                    String str_date = rawDate;\r\n                                    java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                                    Date date = null;\r\n                                    try {\r\n                                        date = formatter.parse(str_date);\r\n                                    } catch (ParseException e) {\r\n                                        e.printStackTrace();\r\n                                    }\r\n\r\n                                    long current = date.getTime();\r\n\r\n                                    long sevenDayEarlier = current - 604800000;\r\n                                    recievelistener = queryr1.addValueEventListener(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                                            chatlist.clear();\r\n                                            long x = 0;\r\n                                            for (DataSnapshot ds : dataSnapshot.getChildren()) {\r\n                                                x++;\r\n                                                Chat chat = ds.getValue(Chat.class);\r\n                                                if (Long.parseLong(chat.getTim()) < sevenDayEarlier) {\r\n                                                    DatabaseReference DbRef2 = FirebaseDatabase.getInstance().getReference();\r\n                                                    DbRef2.child(getString(R.string.dbname_ChatList))\r\n                                                            .child(snapshot.getValue().toString())\r\n                                                            .child(chat.getMid())\r\n                                                            .removeValue();\r\n                                                } else {\r\n                                                    assert chat != null;\r\n                                                    chatlist.add(chat);\r\n                                                    if (x == 10) {\r\n                                                        Collections.sort(chatlist);\r\n\r\n                                                        Collections.reverse(chatlist);\r\n\r\n                                                        displayChat();\r\n                                                    } else if (x == dataSnapshot.getChildrenCount()) {\r\n                                                        Collections.sort(chatlist);\r\n\r\n                                                        Collections.reverse(chatlist);\r\n\r\n                                                        displayChat();\r\n                                                    }\r\n                                                }\r\n                                            }\r\n\r\n\r\n                                        }\r\n//\r\n\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                                        }\r\n                                    });\r\n                                    Log.e(SNTPClient.TAG, rawDate);\r\n\r\n                                }\r\n\r\n                                @Override\r\n                                public void onError(Exception ex) {\r\n                                    Log.e(SNTPClient.TAG, ex.getMessage());\r\n                                }\r\n                            });\r\n\r\n\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n\r\n    private void sendMessage(String message) {\r\n        notifyChat=true;\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n\r\n                String str_date = rawDate;\r\n                java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                Date date = null;\r\n                try {\r\n                    date = formatter.parse(str_date);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                timeStamp = String.valueOf(date.getTime());\r\n\r\n\r\n                DatabaseReference refer1 = FirebaseDatabase.getInstance().getReference();\r\n                newMessageKey = refer1.child(getString(R.string.dbname_Chats)).push().getKey();\r\n                HashMap<String, Object> hashMap = new HashMap<>();\r\n                hashMap.put(getString(R.string.field_sender_ID), FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                hashMap.put(getString(R.string.field_receiver_ID), hisUID);\r\n                hashMap.put(getString(R.string.field_message), message);\r\n                hashMap.put(getString(R.string.field_timestamp), timeStamp);\r\n                hashMap.put(getString(R.string.field_if_seen), false);\r\n                hashMap.put(getString(R.string.field_message_ID), newMessageKey);\r\n                refer1.child(getString(R.string.dbname_Chats))\r\n                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                        .child(hisUID)\r\n                        .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if (snapshot.exists()) {\r\n                                    String key = snapshot.getValue().toString();\r\n\r\n\r\n                                    DatabaseReference refer = FirebaseDatabase.getInstance().getReference();\r\n                                    refer.child(getString(R.string.dbname_ChatList))\r\n                                            .child(key)\r\n                                            .child(newMessageKey)\r\n                                            .setValue(hashMap);\r\n\r\n                                    mMessages.setText(\"\");\r\n\r\n\r\n\r\n                                } else {\r\n                                    DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                                    db.child(getString(R.string.dbname_request))\r\n                                            .child(getString(R.string.dbname_Chats))\r\n                                            .child(hisUID)\r\n                                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                            .child(newMessageKey)\r\n                                            .setValue(hashMap);\r\n\r\n                                    mMessages.setText(\"\");\r\n                                }\r\n                            }\r\n\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n                Log.e(SNTPClient.TAG, rawDate);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception ex) {\r\n                Log.e(SNTPClient.TAG, ex.getMessage());\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void displayChat() {\r\n        Log.d(TAG, \"display first 10 chat\");\r\n        x++;\r\n\r\n        paginatedchatlist = new ArrayList<>();\r\n        if (chatlist != null) {\r\n            try {\r\n                int iteration = chatlist.size();\r\n                if (iteration > 10) {\r\n                    iteration = 10;\r\n                }\r\n                mResults = 10;\r\n                for (int i = 0; i < iteration; i++) {\r\n                    paginatedchatlist.add(chatlist.get(i));\r\n                }\r\n                Log.d(TAG, \"displaychat: sss\" + paginatedchatlist.size());\r\n                adapterchat1 = new AdapterChat(Chat_Activity.this, paginatedchatlist);\r\n                adapterchat1.setHasStableIds(true);\r\n//                    set adapter to recycler view\r\n                recyclerView.setAdapter(adapterchat1);\r\n                recyclerView.smoothScrollToPosition(0);\r\n            } catch (NullPointerException e) {\r\n                Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n            } catch (IndexOutOfBoundsException e) {\r\n                Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public void displayMoreChat() {\r\n        Log.d(TAG, \"display next 20 chat\");\r\n        try {\r\n            if (chatlist.size() > mResults && chatlist.size() > 0) {\r\n\r\n                int iterations;\r\n                if (chatlist.size() > (mResults + 20)) {\r\n                    Log.d(TAG, \"display next 20 chat\");\r\n                    iterations = 20;\r\n                } else {\r\n                    Log.d(TAG, \"display less tha 20 chat\");\r\n                    iterations = chatlist.size() - mResults;\r\n                }\r\n                for (int i = mResults; i < mResults + iterations; i++) {\r\n                    paginatedchatlist.add(chatlist.get(i));\r\n\r\n                }\r\n                recyclerView.post(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        adapterchat1.notifyItemRangeInserted(mResults, iterations);\r\n                    }\r\n                });\r\n                mResults = mResults + iterations;\r\n\r\n\r\n            }\r\n\r\n        } catch (NullPointerException e) {\r\n            Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n        } catch (IndexOutOfBoundsException e) {\r\n            Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mAuthListener = new FirebaseAuth.AuthStateListener() {\r\n            @Override\r\n            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\r\n                FirebaseUser user = firebaseAuth.getCurrentUser();\r\n                myUID = user.getUid();\r\n\r\n                if (user != null) {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n                } else {\r\n                    Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                }\r\n            }\r\n        };\r\n        Query query = myRef.child(getString(R.string.dbname_users)).child(hisUID);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot singleSnapshot) {\r\n\r\n                Glide.with(getApplicationContext())\r\n                        .load(singleSnapshot.child(getString(R.string.profile_photo)).getValue().toString())\r\n                        .placeholder(R.drawable.load)\r\n                        .error(R.drawable.default_image2)\r\n                        .placeholder(R.drawable.load)\r\n                        .thumbnail(0.2f)\r\n                        .into(mprofileImage);\r\n\r\n                mUsername.setText(singleSnapshot.child(getString(R.string.field_username)).getValue().toString());\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        if (x != 0) recyclerView.smoothScrollToPosition(0);\r\n        setupFirebaseAuth();\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        userRefForSeen.removeEventListener(seenListener);\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        if (x != 0) recyclerView.smoothScrollToPosition(0);\r\n        activity = true;\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        activity = false;\r\n        userRefForSeen.removeEventListener(seenListener);\r\n        if (mAuthListener != null) mAuth.removeAuthStateListener(mAuthListener);\r\n        if(notifyChat){\r\n            final DatabaseReference data = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users))\r\n                    .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                    .child(getString(R.string.field_username));\r\n            data.addValueEventListener(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    String user = dataSnapshot.getValue().toString();\r\n                    mFirebaseMethods.sendNotification(hisUID, user, getString(R.string.chat_message), getString(R.string.message_string));\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/home/Chat_Activity.java	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/src/main/java/com/orion/orion/home/Chat_Activity.java	(date 1608806284523)
@@ -53,8 +53,7 @@
 public class
 Chat_Activity extends AppCompatActivity {
     private static final String TAG = "Chat_Activity";
-
-
+    
     RecyclerView recyclerView;
     ImageView mprofileImage;
     TextView mUsername, accept, decline, sendReqBtn, cancelReqBtn;
Index: app/src/main/java/com/orion/orion/login/login.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.login;\r\n\r\nimport android.app.Activity;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.text.method.HideReturnsTransformationMethod;\r\nimport android.text.method.PasswordTransformationMethod;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.daimajia.androidanimations.library.Techniques;\r\nimport com.daimajia.androidanimations.library.YoYo;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.gson.Gson;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.home.MainActivity;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\npublic class login extends AppCompatActivity {\r\n    private static final String TAG = \"activity_login\";\r\n    private static final int ANIMATION_DURATION = 1000;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private Context mContext;\r\n    private RelativeLayout rootView;\r\n    private ProgressBar mProgressBar;\r\n    private ImageView appIcon;\r\n    private TextView appTitle;\r\n    private RelativeLayout afterAnimationView;\r\n    private EditText mEmail;\r\n    private EditText mPassword;\r\n    private Button btnLogin;\r\n    private TextView linkSignup;\r\n    private TextView forgotPassword;\r\n    private final String cameFromSignup = \"2\";\r\n    Intent intent;\r\n    String justRegistered;\r\n\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        Log.d(TAG, \"onCreate: started.\");\r\n\r\n//          Initialize SharedPreference variables\r\n        sp = getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n        justRegistered = sp.getString(\"yes\", \"\");\r\n\r\n        Log.d(TAG, \"onCreate: 333\" + justRegistered);\r\n\r\n        initializeWidgets();\r\n        setupFirebaseAuth();\r\n        if (!justRegistered.equals(\"yes\")) {\r\n            if (mAuth.getCurrentUser() != null) {\r\n                Intent intent = new Intent(login.this, MainActivity.class);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        }\r\n        init();\r\n\r\n    }\r\n\r\n\r\n    private void initializeWidgets() {\r\n        Log.d(TAG, \"initializeWidgets: \");\r\n        appIcon = findViewById(R.id.appIcon);\r\n        rootView = findViewById(R.id.rootView);\r\n        afterAnimationView = findViewById(R.id.afterAnimationView);\r\n        mProgressBar = findViewById(R.id.loginrequestloadingprogressbar);\r\n        mProgressBar.setVisibility(View.GONE);\r\n        mEmail = findViewById(R.id.input_email);\r\n        mPassword = findViewById(R.id.input_password);\r\n        btnLogin = findViewById(R.id.btn_login);\r\n        linkSignup = findViewById(R.id.link_signup);\r\n        forgotPassword = findViewById(R.id.forgotPassword);\r\n        mContext = login.this;\r\n    }\r\n\r\n\r\n    private void init() {\r\n        rootView.setOnClickListener(v -> {\r\n            InputMethodManager imm = (InputMethodManager) mContext.getSystemService(Activity.INPUT_METHOD_SERVICE);\r\n            assert imm != null;\r\n            imm.hideSoftInputFromWindow(rootView.getWindowToken(), 0);\r\n        });\r\n\r\n\r\n\r\n        btnLogin.setOnClickListener(v -> {\r\n            mProgressBar.setVisibility(View.VISIBLE);\r\n            String email = mEmail.getText().toString();\r\n            String password = mPassword.getText().toString();\r\n            if (email.equals(\"\")) {\r\n                mProgressBar.setVisibility(View.GONE);\r\n                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mEmail);\r\n                mEmail.setText(\"\");\r\n                mEmail.setError(\"Please enter a email-id\");\r\n                mEmail.requestFocus();\r\n            } else if (password.equals(\"\")) {\r\n                mProgressBar.setVisibility(View.GONE);\r\n                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n                mPassword.setText(\"\");\r\n                mPassword.setError(\"Please enter a password\");\r\n                mPassword.requestFocus();\r\n            } else {\r\n                mProgressBar.setVisibility(View.VISIBLE);\r\n                mEmail.setFocusable(false);\r\n                mPassword.setFocusable(false);\r\n                mAuth.signInWithEmailAndPassword(email, password).addOnCompleteListener(login.this, task -> {\r\n                    FirebaseUser user = mAuth.getCurrentUser();\r\n                    if (task.isSuccessful()) {\r\n                        // Sign in success, update UI with the signed-in user's information\r\n                        Log.d(TAG, \"signInWithEmail:success\");\r\n                        ProgressDialog progressDialog = new ProgressDialog(mContext);\r\n                        progressDialog.setMessage(\"Authenticating\");\r\n                        progressDialog.show();\r\n                        mProgressBar.setVisibility(View.GONE);\r\n                        try {\r\n                            assert user != null;\r\n                            Log.d(TAG, \"init: \" + user);\r\n                            if (user.isEmailVerified()) {\r\n                                Log.d(TAG, \"onComplete:email is verified.\");\r\n                                SharedPreferences.Editor editor = sp.edit();\r\n                                editor.putString(\"yes\", \"no\");\r\n                                editor.apply();\r\n                                progressDialog.dismiss();\r\n                                Intent intent = new Intent(login.this, MainActivity.class);\r\n                                startActivity(intent);\r\n                            } else {\r\n                                new AlertDialog.Builder(mContext)\r\n                                        .setTitle(\"Sorry\")\r\n                                        .setMessage(\"Email is not verified \\n Check your email inbox\")\r\n                                        .setPositiveButton(android.R.string.ok, (dialog, which) -> {\r\n                                            dialog.dismiss();\r\n                                            mEmail.setFocusableInTouchMode(true);\r\n                                            mPassword.setFocusableInTouchMode(true);\r\n                                        })\r\n                                        .show();\r\n                                mProgressBar.setVisibility(View.GONE);\r\n                                mAuth.signOut();\r\n                            }\r\n\r\n                        } catch (NullPointerException e) {\r\n                            Log.e(TAG, \"NullPointerException\" + e.getMessage());\r\n                        }\r\n\r\n                    } else {\r\n                        // If sign in fails, display a message to the user.\r\n                        Log.w(TAG, \"signInWithEmail:failure\", task.getException());\r\n                        new AlertDialog.Builder(mContext)\r\n                                .setTitle(\"Sorry\")\r\n                                .setMessage(\"We ran into an error \\n Please try again later\")\r\n                                .setPositiveButton(android.R.string.ok, (dialog, which) -> {\r\n                                    dialog.dismiss();\r\n                                    mEmail.setFocusableInTouchMode(true);\r\n                                    mPassword.setFocusableInTouchMode(true);\r\n                                })\r\n                                .show();\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mEmail);\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n                        mEmail.setText(\"\");\r\n                        mPassword.setText(\"\");\r\n                        mProgressBar.setVisibility(View.GONE);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        forgotPassword.setOnClickListener(v -> {\r\n            // get prompts.xml view\r\n            LayoutInflater li = LayoutInflater.from(mContext);\r\n            View promptsView = li.inflate(R.layout.dialog_find_your_account, null);\r\n\r\n            AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(mContext);\r\n\r\n            // set prompts.xml to alertdialog builder\r\n            alertDialogBuilder.setView(promptsView);\r\n\r\n            final EditText userInput = (EditText) promptsView.findViewById(R.id.input_email);\r\n\r\n            // set dialog message\r\n            alertDialogBuilder\r\n                    .setCancelable(false)\r\n                    .setPositiveButton(\"OK\",\r\n                            (dialog, id) -> {\r\n                                // get user input and set it to result\r\n                                // edit text\r\n                                if (userInput.getText() != null && userInput.getText().length() != 0) {\r\n                                    FirebaseAuth.getInstance().setLanguageCode(\"en\"); // Set to English\r\n                                    FirebaseAuth.getInstance().sendPasswordResetEmail(String.valueOf(userInput.getText()))\r\n                                            .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                                @Override\r\n                                                public void onComplete(@NonNull Task<Void> task) {\r\n\r\n                                                }\r\n                                            })\r\n                                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                @Override\r\n                                                public void onSuccess(Void aVoid) {\r\n                                                    Toast.makeText(mContext, \"We have sent and email to \" + userInput.getText() + \" please confirm to reset password\", Toast.LENGTH_LONG).show();\r\n                                                }\r\n                                            })\r\n                                            .addOnFailureListener(new OnFailureListener() {\r\n                                                @Override\r\n                                                public void onFailure(@NonNull Exception e) {\r\n                                                    Toast.makeText(mContext, \"Reset password request is failed\", Toast.LENGTH_LONG).show();\r\n\r\n\r\n                                                }\r\n                                            });\r\n                                } else {\r\n                                    Toast.makeText(mContext, \"Please enter Something!\", Toast.LENGTH_LONG).show();\r\n\r\n                                }\r\n\r\n\r\n                            });\r\n\r\n            // create alert dialog\r\n            AlertDialog alertDialog = alertDialogBuilder.create();\r\n\r\n            // show it\r\n            alertDialog.show();\r\n        });\r\n\r\n        linkSignup.setOnClickListener(v -> {\r\n            Log.d(TAG, \"on Click:navigating to register screen\");\r\n            Intent intent = new Intent(login.this, register.class);\r\n            startActivity(intent);\r\n        });\r\n\r\n        Log.d(TAG, \"init: mAuth.getCurrentUser()\" + mAuth.getCurrentUser());\r\n\r\n    }\r\n\r\n    //    *********************FIREBASE***************************\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mAuthListener = firebaseAuth -> {\r\n            FirebaseUser user = firebaseAuth.getCurrentUser();\r\n            if (user != null) {\r\n                Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n            } else {\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n            }\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        moveTaskToBack(true);\r\n    }\r\n    //   ************************FIREBASE****************************\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/login/login.java	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/src/main/java/com/orion/orion/login/login.java	(date 1608810651073)
@@ -55,8 +55,6 @@
     private Button btnLogin;
     private TextView linkSignup;
     private TextView forgotPassword;
-    private final String cameFromSignup = "2";
-    Intent intent;
     String justRegistered;
 
     //    SP
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\napply plugin: 'com.google.firebase.firebase-perf'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion '30.0.2'\r\n    defaultConfig {\r\n        applicationId \"com.orion.orion\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        multiDexEnabled true\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        debug {\r\n            shrinkResources true\r\n            minifyEnabled true\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n        release {\r\n            shrinkResources true\r\n            minifyEnabled true\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.1'\r\n    implementation 'androidx.recyclerview:recyclerview:1.1.0'\r\n    def multidex_version = \"2.0.1\"\r\n    implementation \"androidx.multidex:multidex:$multidex_version\"\r\n\r\n\r\n    implementation \"androidx.cardview:cardview:1.0.0\"\r\n    implementation 'com.android.volley:volley:1.1.1'\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n\r\n    implementation 'com.google.firebase:firebase-database:19.5.1'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.0'\r\n    implementation 'com.google.firebase:firebase-messaging:21.0.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'\r\n    implementation 'com.google.firebase:firebase-analytics:18.0.0'\r\n    implementation 'com.google.firebase:firebase-perf:19.0.10'\r\n    testImplementation 'junit:junit:4.13.1'\r\n    androidTestImplementation 'androidx.test:runner:1.3.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.google.android.gms:play-services-location:17.1.0'\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n    //animations\r\n    implementation 'com.daimajia.easing:library:2.4@aar'\r\n    implementation 'com.daimajia.androidanimations:library:2.4@aar'\r\n\r\n\r\n    //exoplayer\r\n    implementation 'com.google.android.exoplayer:exoplayer:2.11.7'\r\n    implementation 'com.danikula:videocache:2.7.1'\r\n\r\n    //VideoCompressor + kotlin\r\n    implementation 'com.github.AbedElazizShe:LightCompressor:0.7.5'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'\r\n\r\n    implementation 'androidx.preference:preference:1.1.1'\r\n\r\n    //    update\r\n    implementation 'com.google.android.play:core:1.8.3'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/build.gradle	(date 1608807931877)
@@ -10,17 +10,17 @@
         applicationId "com.orion.orion"
         minSdkVersion 21
         targetSdkVersion 30
-        versionCode 1
+        versionCode 2
         multiDexEnabled true
-        versionName "1.0"
+        versionName "1.1"
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
     }
     buildTypes {
-        debug {
-            shrinkResources true
-            minifyEnabled true
-            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
-        }
+//        debug {
+//            shrinkResources false
+//            minifyEnabled false
+//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
+//        }
         release {
             shrinkResources true
             minifyEnabled true
@@ -46,17 +46,18 @@
 
 
     implementation "androidx.cardview:cardview:1.0.0"
+
     implementation 'com.android.volley:volley:1.1.1'
     implementation 'com.google.code.gson:gson:2.8.6'
 
 
-    implementation 'com.google.firebase:firebase-database:19.5.1'
-    implementation 'com.google.firebase:firebase-storage:19.2.0'
-    implementation 'com.google.firebase:firebase-messaging:21.0.0'
+    implementation 'com.google.firebase:firebase-database:19.6.0'
+    implementation 'com.google.firebase:firebase-storage:19.2.1'
+    implementation 'com.google.firebase:firebase-messaging:21.0.1'
     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
     implementation 'com.google.firebase:firebase-crashlytics:17.3.0'
     implementation 'com.google.firebase:firebase-analytics:18.0.0'
-    implementation 'com.google.firebase:firebase-perf:19.0.10'
+    implementation 'com.google.firebase:firebase-perf:19.0.11'
     testImplementation 'junit:junit:4.13.1'
     androidTestImplementation 'androidx.test:runner:1.3.0'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
@@ -64,6 +65,7 @@
     implementation 'com.github.ittianyu:BottomNavigationViewEx:2.0.4'
     implementation 'de.hdodenhof:circleimageview:3.1.0'
     implementation 'com.google.android.gms:play-services-location:17.1.0'
+
     implementation 'com.github.bumptech.glide:glide:4.11.0'
     annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
     //animations
@@ -83,5 +85,5 @@
     implementation 'androidx.preference:preference:1.1.1'
 
     //    update
-    implementation 'com.google.android.play:core:1.8.3'
+    implementation 'com.google.android.play:core:1.9.0'
 }
Index: app/src/main/java/com/orion/orion/contest/joined/fragment_marks_and_votes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.contest.joined;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TableLayout;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\n\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.Adapters.AdapterVoterList;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.models.juryMarks;\r\nimport com.orion.orion.models.users;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport static com.android.volley.VolleyLog.TAG;\r\n\r\npublic class fragment_marks_and_votes extends Fragment {\r\n\r\n    private TableLayout juryTable, juryTable2;\r\n    private int participants = 0;\r\n    String joiningKey = \"\";\r\n    RecyclerView votesRv;\r\n    private ArrayList<String> votingLists;\r\n    private ArrayList<String> paginatedVotingList;\r\n    int mResults;\r\n    users user = new users();\r\n\r\n\r\n    private AdapterVoterList voterList;\r\n\r\n    String Conteskey;\r\n\r\n\r\n    public fragment_marks_and_votes() {\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_marks_and_votes, container, false);\r\n\r\n        juryTable = view.findViewById(R.id.jurytable);\r\n\r\n        juryTable.setStretchAllColumns(true);\r\n        Bundle b = getActivity().getIntent().getExtras();\r\n        Conteskey = b.getString(\"contestId\");\r\n        joiningKey = b.getString(\"joiningKey\");\r\n\r\n        juryMarksTable(Conteskey, joiningKey);\r\n\r\n\r\n        votesRv = view.findViewById(R.id.votelistRv);\r\n        votesRv.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());\r\n        votesRv.setLayoutManager(linearLayoutManager);\r\n\r\n\r\n        votesRv.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\r\n                super.onScrollStateChanged(recyclerView, newState);\r\n\r\n                if (!recyclerView.canScrollVertically(1) && newState == RecyclerView.SCROLL_STATE_IDLE) {\r\n\r\n                    displayMoreVoterList();\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        votingLists = new ArrayList<>();\r\n\r\n        getRank(Conteskey, joiningKey);\r\n\r\n\r\n        return view;\r\n\r\n    }\r\n\r\n    private void juryMarksTable(String conteskey, String joiningKey) {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        ref.child(getString(R.string.dbname_participantList))\r\n                .child(conteskey)\r\n                .child(joiningKey)\r\n                .child(getString(R.string.juryMarks))\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        juryMarks juryMarks = dataSnapshot.getValue(juryMarks.class);\r\n                        Log.d(TAG, \"onDataChange: kkk\" + juryMarks.toString());\r\n                        TableRow row1 = (TableRow) juryTable.getChildAt(1);\r\n                        TableRow row2 = (TableRow) juryTable.getChildAt(2);\r\n                        TableRow row3 = (TableRow) juryTable.getChildAt(3);\r\n                        TextView t1 = (TextView) row1.getChildAt(1);\r\n                        TextView t2 = (TextView) row1.getChildAt(2);\r\n                        TextView t3 = (TextView) row2.getChildAt(1);\r\n                        TextView t4 = (TextView) row2.getChildAt(2);\r\n                        TextView t5 = (TextView) row3.getChildAt(1);\r\n                        TextView t6 = (TextView) row3.getChildAt(2);\r\n                        t1.setText(juryMarks.getJ1());\r\n                        if(juryMarks.getJ1().equals(\"\")) t1.setText(\"-\");\r\n                        t3.setText(juryMarks.getJ2());\r\n                        if(juryMarks.getJ2().equals(\"\")) t3.setText(\"-\");\r\n                        t5.setText(juryMarks.getJ3());\r\n                        if(juryMarks.getJ3().equals(\"\")) t5.setText(\"-\");\r\n\r\n\r\n                        t2.setText(juryMarks.getC1());\r\n                        t4.setText(juryMarks.getC2());\r\n                        t6.setText(juryMarks.getC3());\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n\r\n    private void getRank(String contestkey, String joiningKey) {\r\n\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        reference.child(getString(R.string.dbname_participantList))\r\n                .child(contestkey)\r\n                .child(joiningKey)\r\n                .child(getString(R.string.voting_list))\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        votingLists.clear();\r\n                        int x = 0;\r\n                        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                            x++;\r\n                            String votingList = snapshot.getKey();\r\n\r\n\r\n                            votingLists.add(votingList);\r\n                            if (x == dataSnapshot.getChildrenCount()) {\r\n                                Collections.reverse(votingLists);\r\n\r\n                                displayVoterList();\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void displayVoterList() {\r\n        paginatedVotingList = new ArrayList<>();\r\n        if (votingLists != null) {\r\n\r\n            try {\r\n\r\n\r\n                int iteration = votingLists.size();\r\n                if (iteration > 20) {\r\n                    iteration = 20;\r\n                }\r\n                mResults = 20;\r\n                for (int i = 0; i < iteration; i++) {\r\n                    paginatedVotingList.add(votingLists.get(i));\r\n                }\r\n                voterList = new AdapterVoterList(getContext(), votingLists);\r\n                voterList.setHasStableIds(true);\r\n                votesRv.setAdapter(voterList);\r\n\r\n\r\n            } catch (NullPointerException e) {\r\n                Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n            } catch (IndexOutOfBoundsException e) {\r\n                Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public void displayMoreVoterList() {\r\n\r\n        try {\r\n            if (votingLists.size() > mResults && votingLists.size() > 0) {\r\n\r\n                int iterations;\r\n                if (votingLists.size() > (mResults + 20)) {\r\n                    iterations = 20;\r\n                } else {\r\n                    iterations = votingLists.size() - mResults;\r\n                }\r\n                for (int i = mResults; i < mResults + iterations; i++) {\r\n                    paginatedVotingList.add(votingLists.get(i));\r\n\r\n                }\r\n                int positionStart = mResults;\r\n                votesRv.post(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        voterList.notifyItemRangeInserted(positionStart, iterations);\r\n                    }\r\n                });\r\n\r\n                mResults = mResults + iterations;\r\n\r\n\r\n            }\r\n\r\n        } catch (NullPointerException e) {\r\n            Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n        } catch (IndexOutOfBoundsException e) {\r\n            Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n        }\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/contest/joined/fragment_marks_and_votes.java	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/src/main/java/com/orion/orion/contest/joined/fragment_marks_and_votes.java	(date 1608185786405)
@@ -103,7 +103,6 @@
                     @Override
                     public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                         juryMarks juryMarks = dataSnapshot.getValue(juryMarks.class);
-                        Log.d(TAG, "onDataChange: kkk" + juryMarks.toString());
                         TableRow row1 = (TableRow) juryTable.getChildAt(1);
                         TableRow row2 = (TableRow) juryTable.getChildAt(2);
                         TableRow row3 = (TableRow) juryTable.getChildAt(3);
Index: app/src/main/java/com/orion/orion/ViewPostActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.media.AudioManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.PopupMenu;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\n\r\nimport com.android.volley.VolleyLog;\r\nimport com.bumptech.glide.Glide;\r\nimport com.danikula.videocache.HttpProxyCacheServer;\r\nimport com.google.android.exoplayer2.DefaultLoadControl;\r\nimport com.google.android.exoplayer2.ExoPlaybackException;\r\nimport com.google.android.exoplayer2.ExoPlayerFactory;\r\nimport com.google.android.exoplayer2.LoadControl;\r\nimport com.google.android.exoplayer2.PlaybackParameters;\r\nimport com.google.android.exoplayer2.Player;\r\nimport com.google.android.exoplayer2.SimpleExoPlayer;\r\nimport com.google.android.exoplayer2.Timeline;\r\nimport com.google.android.exoplayer2.source.ExtractorMediaSource;\r\nimport com.google.android.exoplayer2.source.MediaSource;\r\nimport com.google.android.exoplayer2.source.TrackGroupArray;\r\nimport com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;\r\nimport com.google.android.exoplayer2.trackselection.DefaultTrackSelector;\r\nimport com.google.android.exoplayer2.trackselection.TrackSelectionArray;\r\nimport com.google.android.exoplayer2.trackselection.TrackSelector;\r\nimport com.google.android.exoplayer2.ui.PlayerView;\r\nimport com.google.android.exoplayer2.upstream.BandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DataSource;\r\nimport com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;\r\nimport com.google.android.exoplayer2.upstream.DefaultDataSourceFactory;\r\nimport com.google.android.exoplayer2.util.Util;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.Adapters.AdapterComment;\r\nimport com.orion.orion.login.login;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.Photo;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.profile;\r\nimport com.orion.orion.util.FirebaseMethods;\r\nimport com.orion.orion.util.SNTPClient;\r\nimport com.orion.orion.util.SquareImageView;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.TimeZone;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport static android.view.View.GONE;\r\nimport static com.orion.orion.util.MyApplication.getProxy;\r\n\r\npublic class ViewPostActivity extends AppCompatActivity {\r\n    private static final String TAG = \"ViewPostFragment\";\r\n\r\n    private Context mContext;\r\n\r\n    //firebase\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private FirebaseUser mUser;\r\n    FirebaseMethods firebaseMethods;\r\n    private DatabaseReference myRef;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n    String currentUsername = \"\";\r\n\r\n    private Photo mphoto;\r\n    PlayerView playerView;\r\n    ProgressBar progressBar;\r\n    boolean play = true;\r\n    long currentPosition = 0;\r\n    SimpleExoPlayer simpleExoPlayer;\r\n\r\n    private final String mLikesString = \"\";\r\n    private String numberoflike = \"0\";\r\n    ArrayList<Comment> comments = new ArrayList<>();\r\n\r\n\r\n    private SquareImageView mPostImage, thumbnail, progress2;\r\n    private BottomNavigationViewEx bottomNavigationView;\r\n    private TextView mBackLabel;\r\n    private TextView duration;\r\n    private TextView mCaption;\r\n    private TextView mUsername;\r\n    private TextView mTimestamp;\r\n    private TextView mLikes;\r\n    private TextView mCommentnumber;\r\n    private TextView mcredit;\r\n    private TextView domain;\r\n    private TextView promoteNum;\r\n    private ImageView mBackArrow;\r\n    private ImageView mEllipses;\r\n    private ImageView mStarYellow;\r\n    private ImageView mStarWhite;\r\n    private ImageView mProfileImage;\r\n    private ImageView mComment;\r\n    private ImageView promote;\r\n    private ImageView promoted;\r\n    private ImageView play2;\r\n    private ImageView mute;\r\n    private ImageView unmute;\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n    LinearLayout progress;\r\n    private users mCurrentUser;\r\n    private boolean likeByCurrentsUser2;\r\n    RecyclerView commentRv;\r\n    private ArrayList<Comment> comment2;\r\n    private ArrayList<String> commentID;\r\n    private AdapterComment adapterComment;\r\n\r\n    private boolean notifyLike;\r\n    private boolean notifyPromote;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_view_post);\r\n\r\n        mContext = this;\r\n        mPostImage = findViewById(R.id.post_image);\r\n        bottomNavigationView = findViewById(R.id.BottomNavViewBar);\r\n        mBackArrow = findViewById(R.id.backarrow);\r\n        mEllipses = findViewById(R.id.ivEllipses);\r\n        mStarWhite = findViewById(R.id.image_star);\r\n        mStarYellow = findViewById(R.id.image_star_yellow);\r\n        mProfileImage = findViewById(R.id.profile_photo1);\r\n        mBackLabel = findViewById(R.id.tvbacklabel1);\r\n        mCaption = findViewById(R.id.image_caption);\r\n        mUsername = findViewById(R.id.username1);\r\n        mTimestamp = findViewById(R.id.images_time);\r\n        mLikes = findViewById(R.id.likes_number);\r\n        mComment = findViewById(R.id.image_shoutout);\r\n        mCommentnumber = findViewById(R.id.comments_number);\r\n        mcredit = findViewById(R.id.credit);\r\n        promote = findViewById(R.id.promote);\r\n        promoted = findViewById(R.id.promoted);\r\n//        domain = findViewById(R.id.domain12);\r\n        promoteNum = findViewById(R.id.promote_number);\r\n\r\n        progress = findViewById(R.id.pro);\r\n\r\n\r\n        play2 = findViewById(R.id.play);\r\n        mute = findViewById(R.id.mute);\r\n        unmute = findViewById(R.id.unmute);\r\n        playerView = findViewById(R.id.player_view);\r\n        progressBar = findViewById(R.id.progress_bar);\r\n        duration = findViewById(R.id.duration);\r\n        thumbnail = findViewById(R.id.thumbnail);\r\n\r\n//          Initialize SharedPreference variables\r\n        sp = getApplicationContext().getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n\r\n\r\n        Intent i = getIntent();\r\n        mphoto = i.getParcelableExtra(\"photo\");\r\n        comments = i.getParcelableArrayListExtra(\"comments\");\r\n\r\n        duration.setVisibility(View.GONE);\r\n\r\n\r\n        commentRv = findViewById(R.id.recyclerComment);\r\n        commentRv.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);\r\n        commentRv.setItemViewCacheSize(9);\r\n        commentRv.setDrawingCacheEnabled(true);\r\n        commentRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n        linearLayoutManager.setItemPrefetchEnabled(true);\r\n        linearLayoutManager.setInitialPrefetchItemCount(20);\r\n        commentRv.setLayoutManager(linearLayoutManager);\r\n\r\n        comments = new ArrayList<>();\r\n        commentID = new ArrayList<>();\r\n        adapterComment = new AdapterComment(this, comments, commentID, mphoto.getPi(), mphoto.getUi());\r\n        adapterComment.setHasStableIds(true);\r\n        commentRv.setAdapter(adapterComment);\r\n\r\n        getComments(mphoto.getPi(), mphoto.getUi());\r\n\r\n        notifyLike = false;\r\n        notifyPromote = false;\r\n\r\n        mEllipses.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                PopupMenu popupMenu = new PopupMenu(ViewPostActivity.this, mEllipses);\r\n                if (mphoto.getUi().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                    popupMenu.getMenuInflater().inflate(R.menu.post_menu, popupMenu.getMenu());\r\n                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                        @Override\r\n                        public boolean onMenuItemClick(MenuItem item) {\r\n                            AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);\r\n                            builder.setTitle(\"Delete\");\r\n                            builder.setMessage(\"Are you sure, you want to delete this Post?\");\r\n\r\n//                set buttons\r\n                            builder.setPositiveButton(\"Delete\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    Log.d(TAG, \"DeleteMessage: deleteing message\");\r\n                                    DeletePost();\r\n\r\n                                }\r\n                            });\r\n                            builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    dialog.dismiss();\r\n                                }\r\n                            });\r\n                            builder.create().show();\r\n\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    popupMenu.show();\r\n\r\n\r\n                } else {\r\n                    popupMenu.getMenuInflater().inflate(R.menu.post_menu_all, popupMenu.getMenu());\r\n                    popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                        @Override\r\n                        public boolean onMenuItemClick(MenuItem item) {\r\n                            AlertDialog.Builder builder = new AlertDialog.Builder(ViewPostActivity.this);\r\n                            builder.setTitle(\"Report\");\r\n                            builder.setMessage(\"Are you sure, you want to Report this Post?\");\r\n\r\n//                set buttons\r\n                            builder.setPositiveButton(\"Report\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    Log.d(TAG, \"DeleteMessage: deleteing message\");\r\n                                    ReportPost();\r\n\r\n                                }\r\n                            });\r\n                            builder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(DialogInterface dialog, int which) {\r\n                                    dialog.dismiss();\r\n                                }\r\n                            });\r\n                            builder.create().show();\r\n\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    popupMenu.show();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        if (mphoto.getTy().equals(\"photo\")) {\r\n            mPostImage.setVisibility(View.VISIBLE);\r\n            play2.setVisibility(View.GONE);\r\n            Glide.with(getApplicationContext())\r\n                    .load(mphoto.getIp())\r\n                    .placeholder(R.drawable.load)\r\n                    .error(R.drawable.default_image2)\r\n                    .placeholder(R.drawable.load)\r\n                    .into(mPostImage);\r\n            playerView.setVisibility(GONE);\r\n            thumbnail.setVisibility(GONE);\r\n\r\n        } else {\r\n            unmute.setVisibility(View.VISIBLE);\r\n            play2.setVisibility(View.VISIBLE);\r\n            mPostImage.setVisibility(View.GONE);\r\n            thumbnail.setVisibility(View.VISIBLE);\r\n            playerView.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n//                   ***********get Video***********\r\n\r\n\r\n        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n//                    get thumbnail\r\n        reference2.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.thumbnail))\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            Glide.with(getApplicationContext())\r\n                                    .load(mphoto.getT())\r\n                                    .placeholder(R.drawable.load)\r\n                                    .error(R.drawable.default_image2)\r\n                                    .placeholder(R.drawable.load)\r\n                                    .thumbnail(0.25f)\r\n                                    .into(thumbnail);\r\n                        }\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n//                     play/pause video\r\n\r\n        final Handler[] mHandler = new Handler[1];\r\n        final Runnable[] updateProgressAction = new Runnable[1];\r\n        mUsername.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent i = new Intent(ViewPostActivity.this, profile.class);\r\n                i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                i.putExtra(getString(R.string.intent_user), mphoto.getUi());\r\n                startActivity(i);\r\n            }\r\n        });\r\n        mProfileImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent i = new Intent(ViewPostActivity.this, profile.class);\r\n                i.putExtra(getString(R.string.calling_activity), getString(R.string.home));\r\n\r\n                i.putExtra(getString(R.string.intent_user), mphoto.getUi());\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        playerView.getVideoSurfaceView().setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                progressBar.setVisibility(View.VISIBLE);\r\n//                if paused\r\n                if (play) {\r\n\r\n                    play = false;\r\n                    play2.setVisibility(View.INVISIBLE);\r\n\r\n                    LoadControl loadControl = new DefaultLoadControl();\r\n                    BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter();\r\n                    TrackSelector trackSelector = new DefaultTrackSelector(new AdaptiveTrackSelection.Factory(bandwidthMeter));\r\n                    if (simpleExoPlayer != null) {\r\n\r\n                        simpleExoPlayer.release();\r\n                    }\r\n\r\n                    simpleExoPlayer = ExoPlayerFactory.newSimpleInstance(ViewPostActivity.this, trackSelector, loadControl);\r\n\r\n                    DataSource.Factory dataSourceFactory = new DefaultDataSourceFactory(\r\n                            ViewPostActivity.this, Util.getUserAgent(ViewPostActivity.this, \"RecyclerView VideoPlayer\"));\r\n                    String mediaUrl = mphoto.getIp();\r\n                    HttpProxyCacheServer proxy = getProxy(ViewPostActivity.this);\r\n                    String proxyUrl = proxy.getProxyUrl(mediaUrl);\r\n\r\n\r\n                    playerView.setPlayer(simpleExoPlayer);\r\n\r\n\r\n                    playerView.setKeepScreenOn(true);\r\n                    playerView.setKeepScreenOn(true);\r\n\r\n\r\n                    MediaSource videoSource = new ExtractorMediaSource.Factory(dataSourceFactory)\r\n                            .createMediaSource(Uri.parse(proxyUrl));\r\n//                    set Volume\r\n                    if (mute.getVisibility() == View.VISIBLE) {\r\n                        simpleExoPlayer.setVolume(0f);\r\n                    } else if (unmute.getVisibility() == View.VISIBLE) {\r\n                        simpleExoPlayer.setVolume(AudioManager.STREAM_MUSIC);\r\n                    }\r\n\r\n                    simpleExoPlayer.prepare(videoSource);\r\n                    simpleExoPlayer.seekTo(currentPosition);\r\n                    simpleExoPlayer.setPlayWhenReady(true);\r\n                    simpleExoPlayer.getPlaybackState();\r\n\r\n\r\n                    simpleExoPlayer.addListener(new Player.EventListener() {\r\n                        @Override\r\n                        public void onTimelineChanged(Timeline timeline, Object manifest, int reason) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onTracksChanged(TrackGroupArray trackGroups, TrackSelectionArray trackSelections) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onLoadingChanged(boolean isLoading) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlayerStateChanged(boolean playWhenReady, int playbackState) {\r\n\r\n                            if (playbackState == Player.STATE_BUFFERING) {\r\n\r\n                                progressBar.setVisibility(View.VISIBLE);\r\n\r\n                            } else if (playbackState == Player.STATE_READY) {\r\n\r\n                                duration.setVisibility(View.VISIBLE);\r\n                                thumbnail.setVisibility(GONE);\r\n                                progressBar.setVisibility(View.GONE);\r\n\r\n//                                display duration\r\n                                updateProgressAction[0] = new Runnable() {\r\n                                    @Override\r\n                                    public void run() {\r\n                                        updateProgress();\r\n                                    }\r\n\r\n                                    private void updateProgress() {\r\n\r\n                                        long delayMs = TimeUnit.SECONDS.toMillis(1);\r\n                                        mHandler[0].postDelayed(updateProgressAction[0], delayMs);\r\n                                        duration.setText(String.valueOf((int) (simpleExoPlayer.getDuration() - simpleExoPlayer.getCurrentPosition()) / 1000));\r\n\r\n                                    }\r\n\r\n                                };\r\n                                mHandler[0] = new Handler();\r\n                                mHandler[0].post(updateProgressAction[0]);\r\n\r\n\r\n                            } else if (playbackState == Player.STATE_ENDED) {\r\n\r\n                                play2.setVisibility(View.VISIBLE);\r\n                                play = true;\r\n                                thumbnail.setVisibility(View.VISIBLE);\r\n                                simpleExoPlayer.seekTo(0);\r\n                                simpleExoPlayer.setPlayWhenReady(false);\r\n                                simpleExoPlayer.release();\r\n\r\n                            } else if (playbackState == Player.STATE_IDLE) {\r\n                                play2.setVisibility(View.VISIBLE);\r\n\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onRepeatModeChanged(int repeatMode) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onShuffleModeEnabledChanged(boolean shuffleModeEnabled) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlayerError(ExoPlaybackException error) {\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPositionDiscontinuity(int reason) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onPlaybackParametersChanged(PlaybackParameters playbackParameters) {\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onSeekProcessed() {\r\n\r\n                        }\r\n                    });\r\n                } else {\r\n//                    if playing\r\n                    play = true;\r\n                    play2.setVisibility(View.VISIBLE);\r\n                    currentPosition = simpleExoPlayer.getCurrentPosition();\r\n                    simpleExoPlayer.setPlayWhenReady(false);\r\n                    simpleExoPlayer.getPlaybackState();\r\n                    simpleExoPlayer.release();\r\n\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n//        toggle volume\r\n        mute.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                mute.setVisibility(View.GONE);\r\n                unmute.setVisibility(View.VISIBLE);\r\n                if (simpleExoPlayer != null) {\r\n                    simpleExoPlayer.setVolume(AudioManager.STREAM_MUSIC);\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n        unmute.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                mute.setVisibility(View.VISIBLE);\r\n                unmute.setVisibility(View.GONE);\r\n                if (simpleExoPlayer != null) {\r\n                    simpleExoPlayer.setVolume(0f);\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        setupFirebaseAuth();\r\n        getCurrentUser();\r\n        ifCurrentUserLiked();\r\n        ifCurrentUserPromoted();\r\n        numberofPromote();\r\n        getPhototDetail();\r\n        setupWidgets();\r\n\r\n        mStarWhite.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"whitestar clicked\");\r\n\r\n                mStarWhite.setVisibility(View.GONE);\r\n                mStarYellow.setVisibility(View.VISIBLE);\r\n                notifyLike = true;\r\n                addlike();\r\n                NumberOfLikes();\r\n            }\r\n        });\r\n        mStarYellow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Log.d(TAG, \"yellowstar clicked\");\r\n                mStarWhite.setVisibility(View.VISIBLE);\r\n                mStarYellow.setVisibility(View.GONE);\r\n                removeLike();\r\n                NumberOfLikes();\r\n                notifyLike = false;\r\n                if (!mphoto.getUi().equals(mAuth.getCurrentUser().getUid()))\r\n                    Log.d(TAG, \"onClick: preparing to remove like\");\r\n                myRef.child(getString(R.string.dbname_users))\r\n                        .child(mphoto.getUi())\r\n                        .child(getString(R.string.field_Notifications))\r\n                        .orderByKey()\r\n                        .limitToLast(3)\r\n                        .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if (snapshot.exists()) {\r\n                                    for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n                                        if (dataSnapshot.exists()\r\n                                                && dataSnapshot.child(getString(R.string.field_notification_message)).getValue().equals(\"Liked your post\")\r\n                                                && dataSnapshot.child(\"sUid\").getValue().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                && dataSnapshot.child(\"pUid\").getValue().equals(mphoto.getUi())\r\n                                                && dataSnapshot.child(\"pId\").getValue().equals(mphoto.getPi())) {\r\n                                            Log.d(TAG, \"onDataChange: \" + dataSnapshot);\r\n                                            Log.d(TAG, \"onDataChange: \" + (dataSnapshot.exists()\r\n                                                    && dataSnapshot.child(getString(R.string.field_notification_message)).getValue().equals(\"Liked your post\")\r\n                                                    && dataSnapshot.child(\"sUid\").getValue().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                    && dataSnapshot.child(\"pUid\").getValue().equals(mphoto.getUi())\r\n                                                    && dataSnapshot.child(\"pId\").getValue().equals(mphoto.getPi())\r\n                                            ));\r\n                                            myRef.child(getString(R.string.dbname_users))\r\n                                                    .child(mphoto.getUi())\r\n                                                    .child(getString(R.string.field_Notifications))\r\n                                                    .child(dataSnapshot.getKey()).removeValue()\r\n                                                    .addOnSuccessListener(aVoid -> Log.d(TAG, \"onDataChange: Notification Deleted\"))\r\n                                                    .addOnFailureListener(e -> Log.d(TAG, \"onDataChange: Notification not Deleted\"));\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n            }\r\n        });\r\n        promote.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                promotePost();\r\n            }\r\n        });\r\n\r\n\r\n        promoted.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                unPromotePost();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void ReportPost() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        reference.child(getString(R.string.dbname_reports))\r\n                .child(getString(R.string.field_post))\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_user_id))\r\n                .setValue(mphoto.getUi());\r\n    }\r\n\r\n    private void unPromotePost() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(\"Remove Promotion\");\r\n        builder.setMessage(\"Are you sure, you want to remove this Promotion?\");\r\n//                set buttons\r\n        builder.setPositiveButton(\"Remove\", (dialog, which) -> {\r\n            Log.d(VolleyLog.TAG, \"Rejecting: rejected \");\r\n            promote.setVisibility(View.VISIBLE);\r\n            promoted.setVisibility(View.GONE);\r\n            DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n            db.child(getString(R.string.dbname_promote))\r\n                    .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                    .child(mphoto.getPi())\r\n                    .removeValue();\r\n            DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n            reference.child(getString(R.string.dbname_user_photos))\r\n                    .child(mphoto.getUi())\r\n                    .child(mphoto.getPi())\r\n                    .child(getString(R.string.field_promotes))\r\n                    .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                    .removeValue();\r\n            notifyPromote = false;\r\n            if(!mphoto.getUi().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                removeNotfication();\r\n            }\r\n        });\r\n        builder.setNegativeButton(\"No\", (dialog, which) -> dialog.dismiss());\r\n        builder.create().show();\r\n    }\r\n\r\n    private void removeNotfication() {\r\n        myRef.child(getString(R.string.dbname_users))\r\n                .child(mphoto.getUi())\r\n                .child(getString(R.string.field_Notifications))\r\n                .orderByKey()\r\n                .limitToLast(3)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n                                if (dataSnapshot.exists()\r\n                                        && dataSnapshot.child(getString(R.string.field_notification_message)).getValue().equals(getString(R.string.promote_message))\r\n                                        && dataSnapshot.child(\"sUid\").getValue().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        && dataSnapshot.child(\"pUid\").getValue().equals(mphoto.getUi())\r\n                                        && dataSnapshot.child(\"pId\").getValue().equals(mphoto.getPi())) {\r\n                                    myRef.child(getString(R.string.dbname_users))\r\n                                            .child(mphoto.getUi())\r\n                                            .child(getString(R.string.field_Notifications))\r\n                                            .child(dataSnapshot.getKey()).removeValue()\r\n                                            .addOnSuccessListener(aVoid -> Log.d(TAG, \"onDataChange: Notification Deleted\"))\r\n                                            .addOnFailureListener(e -> Log.d(TAG, \"onDataChange: Notification not Deleted\"));\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void getComments(String photoId, String userId) {\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_user_photos))\r\n                .child(userId)\r\n                .child(photoId)\r\n                .child(getString(R.string.field_comment))\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        comments.clear();\r\n                        if (snapshot.exists()) {\r\n                            mCommentnumber.setText(String.valueOf(snapshot.getChildrenCount()));\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                Comment comment = snapshot1.getValue(Comment.class);\r\n                                comments.add(comment);\r\n                                commentID.add(snapshot1.getKey());\r\n                            }\r\n                        }\r\n                        adapterComment.notifyDataSetChanged();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void numberofPromote() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_promotes));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                String num = String.valueOf(dataSnapshot.getChildrenCount());\r\n                promoteNum.setText(num);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void promotePost() {\r\n        BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(this, R.style.BottomSheetDialogTheme);\r\n\r\n        View bottomSheetView = this.getLayoutInflater()\r\n                .inflate(R.layout.layout_bottom_sheet_promote, bottomSheetDialog.findViewById(R.id.layout_bottom_sheet_container));\r\n        TextView username = bottomSheetView.findViewById(R.id.usernameBs);\r\n        TextView cancel = bottomSheetView.findViewById(R.id.cancel);\r\n        TextView promote1 = bottomSheetView.findViewById(R.id.promote);\r\n        ImageView post = bottomSheetView.findViewById(R.id.postBs);\r\n        Glide.with(getApplicationContext())\r\n                .load(mphoto.getIp())\r\n                .placeholder(R.drawable.load)\r\n                .error(R.drawable.default_image2)\r\n                .placeholder(R.drawable.load)\r\n                .thumbnail(0.5f)\r\n                .into(post);\r\n        username.setText(currentUsername);\r\n        cancel.setOnClickListener(v -> bottomSheetDialog.dismiss());\r\n\r\n        promote1.setOnClickListener(v -> {\r\n            promote.setVisibility(View.GONE);\r\n            promoted.setVisibility(View.VISIBLE);\r\n\r\n\r\n            SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n                @Override\r\n                public void onTimeReceived(String rawDate) {\r\n                    // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n                    @SuppressLint(\"SimpleDateFormat\")\r\n                    java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                    Date date = null;\r\n                    try {\r\n                        date = formatter.parse(rawDate);\r\n                    } catch (ParseException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    Long timeStart = date.getTime();\r\n                    Long timeEnd = date.getTime() + 84600000;\r\n\r\n\r\n                    DatabaseReference db1 = FirebaseDatabase.getInstance().getReference();\r\n\r\n                    HashMap<String, Object> hashMap = new HashMap<>();\r\n                    hashMap.put(getString(R.string.field_photo_id), mphoto.getPi());\r\n                    hashMap.put(getString(R.string.field_user_id), mphoto.getUi());\r\n                    hashMap.put(getString(R.string.field_image_path), mphoto.getIp());\r\n                    hashMap.put(getString(R.string.field_story_ID), mphoto.getPi());\r\n                    hashMap.put(getString(R.string.field_promotion_time_end), String.valueOf(timeEnd));\r\n                    hashMap.put(getString(R.string.field_promotion_time_start), String.valueOf(timeStart));\r\n                    hashMap.put(getString(R.string.field_promoter_ID), FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n\r\n                    db1.child(getString(R.string.dbname_promote))\r\n                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                            .child(mphoto.getPi())\r\n                            .setValue(hashMap);\r\n\r\n                    DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n                    reference.child(getString(R.string.dbname_user_photos))\r\n                            .child(mphoto.getUi())\r\n                            .child(mphoto.getPi())\r\n                            .child(getString(R.string.field_promotes))\r\n                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                            .setValue(\"true\");\r\n                    if(!mphoto.getUi().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                        notifyPromote = true;\r\n                        addToHisNotification(\"\" + mphoto.getUi(), mphoto.getPi(), getString(R.string.promote_message));\r\n                    }\r\n                    bottomSheetDialog.dismiss();\r\n                    Log.e(SNTPClient.TAG, rawDate);\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onError(Exception ex) {\r\n                    Log.e(SNTPClient.TAG, ex.getMessage());\r\n                }\r\n            });\r\n\r\n\r\n        });\r\n\r\n\r\n        bottomSheetDialog.setContentView(bottomSheetView);\r\n        bottomSheetDialog.show();\r\n\r\n\r\n    }\r\n\r\n    private void DeletePost() {\r\n\r\n        progress.setVisibility(View.VISIBLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE,\r\n                WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n        final int[] x = {0};\r\n        DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();\r\n        reference3.child(getString(R.string.dbname_follower))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                x[0]++;\r\n                                DatabaseReference reference3 = FirebaseDatabase.getInstance().getReference();\r\n                                reference3.child(getString(R.string.dbname_users))\r\n                                        .child(snapshot1.getKey())\r\n                                        .child(getString(R.string.post_updates))\r\n                                        .child(mphoto.getPi())\r\n                                        .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                                if (x[0] == snapshot.getChildrenCount()) {\r\n                                    deleteFurther();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            deleteFurther();\r\n\r\n                        }\r\n                    }\r\n\r\n                    private void deleteFurther() {\r\n\r\n                        if (!mphoto.getTy().equals(\"photo\")) {\r\n                            StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getT());\r\n                            photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n\r\n                                }\r\n                            });\r\n                        }\r\n                        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n                        reference2.child(getString(R.string.dbname_user_photos))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(mphoto.getPi())\r\n                                .removeValue().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                StorageReference photoRef = FirebaseStorage.getInstance().getReferenceFromUrl(mphoto.getIp());\r\n                                photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        // File deleted successfully\r\n\r\n                                        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n                                        reference2.child(getString(R.string.explore_update))\r\n                                                .child(mphoto.getPi())\r\n                                                .setValue(true)\r\n                                                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(Void aVoid) {\r\n                                                        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Kolkata\"), new SNTPClient.Listener() {\r\n                                                            @Override\r\n                                                            public void onTimeReceived(String currentTimeStamp) {\r\n                                                                reference2.child(getString(R.string.explore_update)).child(getString(R.string.field_last_updated)).setValue(currentTimeStamp);\r\n                                                            }\r\n\r\n                                                            @Override\r\n                                                            public void onError(Exception ex) {\r\n\r\n                                                            }\r\n                                                        });\r\n                                                        String json = sp.getString(\"pl\", null);\r\n                                                        String json2 = sp.getString(\"myMedia\", null);\r\n\r\n                                                        Type type = new TypeToken<ArrayList<Photo>>() {\r\n                                                        }.getType();\r\n                                                        ArrayList<Photo> photoList = new ArrayList<>();\r\n                                                        ArrayList<Photo> mymediaList = new ArrayList<>();\r\n\r\n                                                        photoList = gson.fromJson(json, type);\r\n                                                        mymediaList = gson.fromJson(json2, type);\r\n                                                        ArrayList<Photo> photoList2 = new ArrayList<>();\r\n                                                        ArrayList<Photo> mymediaList2 = new ArrayList<>();\r\n                                                        if (photoList != null) {\r\n                                                            photoList2 = new ArrayList<>(photoList);\r\n                                                        }\r\n                                                        if (mymediaList != null) {\r\n                                                            mymediaList2 = new ArrayList<>(mymediaList);\r\n                                                        }\r\n\r\n\r\n                                                        if (photoList2.size() == 0) {                 //    if no arrayList is present\r\n\r\n\r\n                                                        } else {\r\n\r\n                                                            for (Photo a : photoList) {\r\n                                                                if (a.getPi().equals(mphoto.getPi()))\r\n                                                                    photoList2.remove(a);\r\n\r\n                                                            }\r\n                                                        }\r\n\r\n\r\n                                                        if (mymediaList2.size() == 0) {                 //    if no arrayList is present\r\n\r\n\r\n                                                        } else {\r\n\r\n                                                            for (Photo a : mymediaList) {\r\n                                                                if (a.getPi().equals(mphoto.getPi()))\r\n                                                                    mymediaList2.remove(a);\r\n\r\n                                                            }\r\n                                                        }\r\n\r\n\r\n                                                        //  delete from post list and save updated list\r\n                                                        SharedPreferences.Editor editor = sp.edit();\r\n                                                        json = gson.toJson(photoList2);\r\n                                                        json2 = gson.toJson(mymediaList2);\r\n\r\n                                                        editor.putString(\"pl\", json);\r\n                                                        editor.putString(\"myMedia\", json2);\r\n\r\n                                                        editor.apply();\r\n\r\n\r\n                                                        progress.setVisibility(GONE);\r\n                                                        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                                        finish();\r\n                                                    }\r\n                                                });\r\n\r\n\r\n                                    }\r\n\r\n                                }).\r\n\r\n                                        addOnFailureListener(new OnFailureListener() {\r\n                                            @Override\r\n                                            public void onFailure(@NonNull Exception exception) {\r\n                                                // Uh-oh, an error occurred!\r\n                                                Log.d(VolleyLog.TAG, \"onFailure: did not delete file\");\r\n                                            }\r\n                                        });\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n\r\n\r\n    private void getCurrentUser() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                mCurrentUser = dataSnapshot.getValue(users.class);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void NumberOfLikes() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_likes));\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                numberoflike = String.valueOf(dataSnapshot.getChildrenCount());\r\n                mLikes.setText(numberoflike);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void ifCurrentUserLiked() {\r\n        Log.d(TAG, \" checking current user liked or not\");\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_likes))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    Log.d(TAG, \" checking current user liked or not: Already liked\");\r\n                    mStarWhite.setVisibility(View.GONE);\r\n                    mStarYellow.setVisibility(View.VISIBLE);\r\n                    NumberOfLikes();\r\n                    likeByCurrentsUser2 = true;\r\n\r\n                } else {\r\n                    Log.d(TAG, \" checking current user liked or not: not liked\");\r\n                    mStarWhite.setVisibility(View.VISIBLE);\r\n                    mStarYellow.setVisibility(View.GONE);\r\n                    NumberOfLikes();\r\n                    likeByCurrentsUser2 = false;\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void addToHisNotification(String hisUid, String pId, String notification) {\r\n\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n                String str_date = rawDate;\r\n                java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                Date date = null;\r\n                try {\r\n                    date = formatter.parse(str_date);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                Log.d(TAG, \"onCreateView: timestampyesss\" + date.getTime());\r\n                String timestamp = String.valueOf(date.getTime());\r\n//        data to put in notification\r\n                HashMap<Object, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"pId\", pId);\r\n                hashMap.put(getString(R.string.field_timestamp), timestamp);\r\n                hashMap.put(\"pUid\", hisUid);\r\n                hashMap.put(getString(R.string.field_notification_message), notification);\r\n                hashMap.put(getString(R.string.field_if_seen), \"false\");\r\n                hashMap.put(\"sUid\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_users));\r\n                ref.child(hisUid).child(getString(R.string.field_Notifications)).child(timestamp).setValue(hashMap)\r\n                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n\r\n                            }\r\n                        }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n\r\n                    }\r\n                });\r\n                Log.e(SNTPClient.TAG, rawDate);\r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception ex) {\r\n                Log.e(SNTPClient.TAG, ex.getMessage());\r\n            }\r\n        });\r\n    }\r\n\r\n    private void addlike() {\r\n        Log.d(TAG, \" like add\");\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        reference1.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_likes))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(getString(R.string.field_user_id))\r\n                .setValue(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        NumberOfLikes();\r\n        if (!mphoto.getUi().equals(mAuth.getCurrentUser().getUid()))\r\n            addToHisNotification(mphoto.getUi(), mphoto.getPi(), getString(R.string.liked_message));\r\n    }\r\n\r\n    private void removeLike() {\r\n        Log.d(TAG, \" like removed\");\r\n        DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n        reference1.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_likes))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .removeValue();\r\n        NumberOfLikes();\r\n    }\r\n\r\n    private void ifCurrentUserPromoted() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos))\r\n                .child(mphoto.getUi())\r\n                .child(mphoto.getPi())\r\n                .child(getString(R.string.field_promotes))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    Log.d(TAG, \" checking current user liked or not: Already liked\");\r\n                    promote.setVisibility(View.GONE);\r\n                    promoted.setVisibility(View.VISIBLE);\r\n\r\n                } else {\r\n                    Log.d(TAG, \" checking current user liked or not: not liked\");\r\n                    promote.setVisibility(View.VISIBLE);\r\n                    promoted.setVisibility(View.GONE);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getPhototDetail() {\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(getString(R.string.dbname_users))\r\n                .child(mphoto.getUi());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                users user = dataSnapshot.getValue(users.class);\r\n                mUsername.setText(user.getU());\r\n                currentUsername = user.getU();\r\n                Glide.with(ViewPostActivity.this)\r\n                        .load(user.getPp())\r\n                        .placeholder(R.drawable.load)\r\n                        .error(R.drawable.default_image2)\r\n                        .placeholder(R.drawable.load)\r\n                        .into(mProfileImage);\r\n                mcredit.setText(\"© \" + user.getU());\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    private void setupWidgets() {\r\n        mTimestamp.setText(mphoto.getDc().substring(0, 10));\r\n\r\n        mBackArrow.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n\r\n\r\n        mComment.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//\r\n                Intent i = new Intent(ViewPostActivity.this, CommentActivity.class);\r\n                i.putExtra(\"photoId\", mphoto.getPi());\r\n                i.putExtra(\"userId\", mphoto.getUi());\r\n                startActivity(i);\r\n\r\n            }\r\n        });\r\n        mCommentnumber.setText(String.valueOf(comments.size()));\r\n        mCaption.setText(mphoto.getCap());\r\n        mLikes.setText(mLikesString);\r\n\r\n\r\n    }\r\n\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setupFirebaseAuth: started\");\r\n        myRef = FirebaseDatabase.getInstance().getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        firebaseMethods = new FirebaseMethods(mContext);\r\n        mAuthListener = firebaseAuth -> {\r\n            if (firebaseAuth.getCurrentUser() != null)\r\n                Log.d(TAG, \"onAuthStateChanged: signed_in:\" + firebaseAuth.getCurrentUser().getUid());\r\n            else {\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                Log.d(TAG, \"onAuthStateChanged: navigating to login\");\r\n                SharedPreferences settings = getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n                new AlertDialog.Builder(mContext)\r\n                        .setTitle(\"No user logon found\")\r\n                        .setMessage(\"We will be logging you out. \\n Please try to log in again\")\r\n                        .setPositiveButton(android.R.string.ok, (dialog, which) -> {\r\n                            Intent intent = new Intent(mContext, login.class);\r\n                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                            settings.edit().clear().apply();\r\n                            startActivity(intent);\r\n                        })\r\n                        .show();\r\n            }\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) mAuth.removeAuthStateListener(mAuthListener);\r\n        if (simpleExoPlayer != null) simpleExoPlayer.release();\r\n        if (notifyLike || notifyPromote) {\r\n            final DatabaseReference data = myRef.child(getString(R.string.dbname_users)).child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n            data.addValueEventListener(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    users user = dataSnapshot.getValue(users.class);\r\n                    Log.d(TAG, \"onDataChange: user.getU()\" + user.getU());\r\n                    if (notifyLike)\r\n                        firebaseMethods.sendNotification(mphoto.getUi(), user.getU(), getString(R.string.liked_message), getString(R.string.like_string));\r\n                    if (notifyPromote)\r\n                        firebaseMethods.sendNotification(mphoto.getUi(), user.getU(), getString(R.string.promote_message), getString(R.string.promote_string));\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        if (simpleExoPlayer != null) simpleExoPlayer.release();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        if (simpleExoPlayer != null) simpleExoPlayer.release();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/ViewPostActivity.java	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/src/main/java/com/orion/orion/ViewPostActivity.java	(date 1608185786693)
@@ -296,6 +296,7 @@
         });
 
         if (mphoto.getTy().equals("photo")) {
+
             mPostImage.setVisibility(View.VISIBLE);
             play2.setVisibility(View.GONE);
             Glide.with(getApplicationContext())
@@ -322,7 +323,8 @@
 
 
 //                    get thumbnail
-        reference2.child(getString(R.string.dbname_user_photos))
+        reference2
+                .child(getString(R.string.dbname_user_photos))
                 .child(mphoto.getUi())
                 .child(mphoto.getPi())
                 .child(getString(R.string.thumbnail))
@@ -632,6 +634,7 @@
             @Override
             public void onClick(View v) {
                 promotePost();
+
             }
         });
 
@@ -659,64 +662,74 @@
         builder.setTitle("Remove Promotion");
         builder.setMessage("Are you sure, you want to remove this Promotion?");
 //                set buttons
-        builder.setPositiveButton("Remove", (dialog, which) -> {
-            Log.d(VolleyLog.TAG, "Rejecting: rejected ");
-            promote.setVisibility(View.VISIBLE);
-            promoted.setVisibility(View.GONE);
-            DatabaseReference db = FirebaseDatabase.getInstance().getReference();
-            db.child(getString(R.string.dbname_promote))
-                    .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                    .child(mphoto.getPi())
-                    .removeValue();
-            DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
-            reference.child(getString(R.string.dbname_user_photos))
-                    .child(mphoto.getUi())
-                    .child(mphoto.getPi())
-                    .child(getString(R.string.field_promotes))
-                    .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                    .removeValue();
-            notifyPromote = false;
-            if(!mphoto.getUi().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {
-                removeNotfication();
-            }
-        });
-        builder.setNegativeButton("No", (dialog, which) -> dialog.dismiss());
-        builder.create().show();
-    }
-
-    private void removeNotfication() {
-        myRef.child(getString(R.string.dbname_users))
-                .child(mphoto.getUi())
-                .child(getString(R.string.field_Notifications))
-                .orderByKey()
-                .limitToLast(3)
-                .addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                        if (snapshot.exists()) {
-                            for (DataSnapshot dataSnapshot : snapshot.getChildren()) {
-                                if (dataSnapshot.exists()
-                                        && dataSnapshot.child(getString(R.string.field_notification_message)).getValue().equals(getString(R.string.promote_message))
-                                        && dataSnapshot.child("sUid").getValue().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                                        && dataSnapshot.child("pUid").getValue().equals(mphoto.getUi())
-                                        && dataSnapshot.child("pId").getValue().equals(mphoto.getPi())) {
-                                    myRef.child(getString(R.string.dbname_users))
-                                            .child(mphoto.getUi())
-                                            .child(getString(R.string.field_Notifications))
-                                            .child(dataSnapshot.getKey()).removeValue()
-                                            .addOnSuccessListener(aVoid -> Log.d(TAG, "onDataChange: Notification Deleted"))
-                                            .addOnFailureListener(e -> Log.d(TAG, "onDataChange: Notification not Deleted"));
-                                    break;
-                                }
-                            }
-                        }
-                    }
+        builder.setPositiveButton("Remove", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                Log.d(VolleyLog.TAG, "Rejecting: rejected ");
+
+                promote.setVisibility(View.VISIBLE);
+                promoted.setVisibility(View.GONE);
+
+
+                DatabaseReference db = FirebaseDatabase.getInstance().getReference();
+                db.child(getString(R.string.dbname_promote))
+                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
+                        .child(mphoto.getPi())
+                        .removeValue();
+
+                DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
+                reference.child(getString(R.string.dbname_user_photos))
+                        .child(mphoto.getUi())
+                        .child(mphoto.getPi())
+                        .child(getString(R.string.field_promotes))
+                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
+                        .removeValue();
+
+                notifyPromote = false;
+                myRef.child(getString(R.string.dbname_users))
+                        .child(mphoto.getUi())
+                        .child(getString(R.string.field_Notifications))
+                        .orderByKey()
+                        .limitToLast(3)
+                        .addListenerForSingleValueEvent(new ValueEventListener() {
+                            @Override
+                            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                if (snapshot.exists()) {
+                                    for (DataSnapshot dataSnapshot : snapshot.getChildren()) {
+                                        if (dataSnapshot.exists()
+                                                && dataSnapshot.child(getString(R.string.field_notification_message)).getValue().equals(getString(R.string.promote_message))
+                                                && dataSnapshot.child("sUid").getValue().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())
+                                                && dataSnapshot.child("pUid").getValue().equals(mphoto.getUi())
+                                                && dataSnapshot.child("pId").getValue().equals(mphoto.getPi())) {
+
+                                            myRef.child(getString(R.string.dbname_users))
+                                                    .child(mphoto.getUi())
+                                                    .child(getString(R.string.field_Notifications))
+                                                    .child(dataSnapshot.getKey()).removeValue()
+                                                    .addOnSuccessListener(aVoid -> Log.d(TAG, "onDataChange: Notification Deleted"))
+                                                    .addOnFailureListener(e -> Log.d(TAG, "onDataChange: Notification not Deleted"));
+                                            break;
+                                        }
+                                    }
+                                }
+                            }
 
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
+                            @Override
+                            public void onCancelled(@NonNull DatabaseError error) {
 
-                    }
-                });
+                            }
+                        });
+
+            }
+        });
+        builder.setNegativeButton("No", new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                dialog.dismiss();
+            }
+        });
+        builder.create().show();
+
     }
 
     private void getComments(String photoId, String userId) {
@@ -770,6 +783,7 @@
 
     }
 
+
     private void promotePost() {
         BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(this, R.style.BottomSheetDialogTheme);
 
@@ -787,70 +801,81 @@
                 .thumbnail(0.5f)
                 .into(post);
         username.setText(currentUsername);
-        cancel.setOnClickListener(v -> bottomSheetDialog.dismiss());
+        cancel.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                bottomSheetDialog.dismiss();
+            }
+        });
 
-        promote1.setOnClickListener(v -> {
-            promote.setVisibility(View.GONE);
-            promoted.setVisibility(View.VISIBLE);
+        promote1.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+                promote.setVisibility(View.GONE);
+                promoted.setVisibility(View.VISIBLE);
 
 
-            SNTPClient.getDate(TimeZone.getTimeZone("Asia/Colombo"), new SNTPClient.Listener() {
-                @Override
-                public void onTimeReceived(String rawDate) {
-                    // rawDate -> 2019-11-05T17:51:01+0530
+                SNTPClient.getDate(TimeZone.getTimeZone("Asia/Colombo"), new SNTPClient.Listener() {
+                    @Override
+                    public void onTimeReceived(String rawDate) {
+                        // rawDate -> 2019-11-05T17:51:01+0530
 
-                    @SuppressLint("SimpleDateFormat")
-                    java.text.DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ");
-                    Date date = null;
-                    try {
-                        date = formatter.parse(rawDate);
-                    } catch (ParseException e) {
-                        e.printStackTrace();
-                    }
-                    Long timeStart = date.getTime();
-                    Long timeEnd = date.getTime() + 84600000;
+
+                        String str_date = rawDate;
+                        java.text.DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ");
+                        Date date = null;
+                        try {
+                            date = formatter.parse(str_date);
+                        } catch (ParseException e) {
+                            e.printStackTrace();
+                        }
+                        Long timeStart = date.getTime();
+                        Long timeEnd = date.getTime() + 84600000;
 
 
-                    DatabaseReference db1 = FirebaseDatabase.getInstance().getReference();
+                        DatabaseReference db1 = FirebaseDatabase.getInstance().getReference();
 
-                    HashMap<String, Object> hashMap = new HashMap<>();
-                    hashMap.put(getString(R.string.field_photo_id), mphoto.getPi());
-                    hashMap.put(getString(R.string.field_user_id), mphoto.getUi());
-                    hashMap.put(getString(R.string.field_image_path), mphoto.getIp());
-                    hashMap.put(getString(R.string.field_story_ID), mphoto.getPi());
-                    hashMap.put(getString(R.string.field_promotion_time_end), String.valueOf(timeEnd));
-                    hashMap.put(getString(R.string.field_promotion_time_start), String.valueOf(timeStart));
-                    hashMap.put(getString(R.string.field_promoter_ID), FirebaseAuth.getInstance().getCurrentUser().getUid());
+                        HashMap<String, Object> hashMap = new HashMap<>();
+                        hashMap.put(getString(R.string.field_photo_id), mphoto.getPi());
+                        hashMap.put(getString(R.string.field_user_id), mphoto.getUi());
+                        hashMap.put(getString(R.string.field_image_path), mphoto.getIp());
+                        hashMap.put(getString(R.string.field_story_ID), mphoto.getPi());
+                        hashMap.put(getString(R.string.field_promotion_time_end), String.valueOf(timeEnd));
+                        hashMap.put(getString(R.string.field_promotion_time_start), String.valueOf(timeStart));
+                        hashMap.put(getString(R.string.field_promoter_ID), FirebaseAuth.getInstance().getCurrentUser().getUid());
 
 
-                    db1.child(getString(R.string.dbname_promote))
-                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                            .child(mphoto.getPi())
-                            .setValue(hashMap);
+                        db1.child(getString(R.string.dbname_promote))
+                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
+                                .child(mphoto.getPi())
+                                .setValue(hashMap);
 
-                    DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
-                    reference.child(getString(R.string.dbname_user_photos))
-                            .child(mphoto.getUi())
-                            .child(mphoto.getPi())
-                            .child(getString(R.string.field_promotes))
-                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                            .setValue("true");
-                    if(!mphoto.getUi().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {
+                        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
+                        reference.child(getString(R.string.dbname_user_photos))
+                                .child(mphoto.getUi())
+                                .child(mphoto.getPi())
+                                .child(getString(R.string.field_promotes))
+                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
+                                .setValue("true");
                         notifyPromote = true;
                         addToHisNotification("" + mphoto.getUi(), mphoto.getPi(), getString(R.string.promote_message));
-                    }
-                    bottomSheetDialog.dismiss();
-                    Log.e(SNTPClient.TAG, rawDate);
+
+
+                        bottomSheetDialog.dismiss();
+
+                        Log.e(SNTPClient.TAG, rawDate);
 
-                }
+                    }
 
-                @Override
-                public void onError(Exception ex) {
-                    Log.e(SNTPClient.TAG, ex.getMessage());
-                }
-            });
+                    @Override
+                    public void onError(Exception ex) {
+                        Log.e(SNTPClient.TAG, ex.getMessage());
+                    }
+                });
 
 
+            }
         });
 
 
Index: app/src/main/java/com/orion/orion/profile/ProfileActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.profile;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.annotation.TargetApi;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.ContentUris;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.DocumentsContract;\r\nimport android.provider.MediaStore;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewTreeObserver;\r\nimport android.webkit.URLUtil;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.daimajia.androidanimations.library.Techniques;\r\nimport com.daimajia.androidanimations.library.YoYo;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.Adapters.AdapterGridImage;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.dialogs.DialogPostSelection;\r\nimport com.orion.orion.login.login;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.Like;\r\nimport com.orion.orion.models.Photo;\r\nimport com.orion.orion.models.users;\r\nimport com.orion.orion.profile.Account.AccountSettingActivity;\r\nimport com.orion.orion.util.BottomNaavigationViewHelper;\r\nimport com.orion.orion.util.Permissions;\r\n\r\nimport java.io.File;\r\nimport java.lang.reflect.Type;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.HashSet;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.Objects;\r\nimport java.util.Set;\r\nimport java.util.regex.Pattern;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\n\r\npublic class ProfileActivity extends AppCompatActivity {\r\n\r\n    public static final int VERIFY_PERMISSION_REQUEST = 1;\r\n    private static final String TAG = \"ProfileFragment\";\r\n    private static final int ACTIVITY_NUM = 4;\r\n    FirebaseUser user;\r\n    int rank = 1;\r\n    int mResults;\r\n    private Context mContext;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private DatabaseReference myRef;\r\n    ScrollView scrollView;\r\n    private ArrayList<Photo> imgURLsList;\r\n    private ArrayList<Photo> paginatedimgURLsList;\r\n    boolean isKitKat;\r\n    //    Profile Widgets\r\n    private ImageView menu;\r\n    private TextView mUsername;\r\n    private TextView mDomain;\r\n    private CircleImageView mProfilePhoto;\r\n    private ProgressDialog dialog;\r\n\r\n    private ImageView mGmailLink;\r\n    private ImageView mInstagramLink;\r\n    private ImageView mFacebookLink;\r\n    private ImageView mTwitterLink;\r\n    private ImageView mWhatsappLink;\r\n\r\n    private String gmail;\r\n    private String instagramProfile;\r\n    private String facebookProfile;\r\n    private String twitterProfile;\r\n\r\n    private TextView mPosts;\r\n    private TextView mFans;\r\n    private TextView mWins;\r\n    private TextView mCreations;\r\n    private TextView mParticipation;\r\n    private TextView mRank;\r\n\r\n    private TextView judges;\r\n    private TextView gp;\r\n\r\n    private TextView noPost;\r\n\r\n    private TextView mDisplayName;\r\n    private TextView mDescription;\r\n    private TextView mLink1;\r\n    private TextView mLink2;\r\n    private TextView mLink3;\r\n    //    private TextView mWebsite;\r\n    private String whatsappNo;\r\n    private LinearLayout share_btn;\r\n    private RecyclerView gridRv;\r\n    private BottomNavigationViewEx bottomNavigationView;\r\n    private AdapterGridImage adapterGridImage;\r\n    int c = 0;\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n\r\n    //firebase\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.fragment_profile);\r\n\r\n        dialog = ProgressDialog.show(this, \"\", \"Loading Profile...\", true);\r\n        mContext = ProfileActivity.this;\r\n        noPost = findViewById(R.id.noPost);\r\n        scrollView = findViewById(R.id.scroll);\r\n        menu = findViewById(R.id.menu);\r\n        mUsername = findViewById(R.id.username);\r\n        mDomain = findViewById(R.id.domain);\r\n        mProfilePhoto = findViewById(R.id.profile_photo);\r\n\r\n        mGmailLink = findViewById(R.id.gmail_link);\r\n        mInstagramLink = findViewById(R.id.instagram_link);\r\n        mFacebookLink = findViewById(R.id.facebook_link);\r\n        mTwitterLink = findViewById(R.id.twitter_link);\r\n        mWhatsappLink = findViewById(R.id.whatsapp_link);\r\n\r\n\r\n        mPosts = findViewById(R.id.posts);\r\n        mFans = findViewById(R.id.fans);\r\n        mWins = findViewById(R.id.win);\r\n        mCreations = findViewById(R.id.creations);\r\n        mParticipation = findViewById(R.id.participations);\r\n        mRank = findViewById(R.id.rank);\r\n\r\n        judges = findViewById(R.id.judge);\r\n        gp = findViewById(R.id.gp);\r\n\r\n        mDisplayName = findViewById(R.id.display_name);\r\n        mDescription = findViewById(R.id.description);\r\n        mLink1 = findViewById(R.id.link1);\r\n        mLink2 = findViewById(R.id.link2);\r\n        mLink3 = findViewById(R.id.link3);\r\n\r\n        share_btn = findViewById(R.id.share_skill_btn);\r\n\r\n        gridRv = findViewById(R.id.gridRv);\r\n\r\n        bottomNavigationView = findViewById(R.id.BottomNavViewBar);\r\n\r\n\r\n        gridRv.setHasFixedSize(true);\r\n        GridLayoutManager linearLayoutManager = new GridLayoutManager(this, 3);\r\n        gridRv.setLayoutManager(linearLayoutManager);\r\n        gridRv.setDrawingCacheEnabled(true);\r\n        gridRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n        linearLayoutManager.setItemPrefetchEnabled(true);\r\n        linearLayoutManager.setInitialPrefetchItemCount(20);\r\n        gridRv.setItemViewCacheSize(9);\r\n        gridRv.setDrawingCacheEnabled(true);\r\n        gridRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n        gridRv.setLayoutManager(linearLayoutManager);\r\n\r\n        imgURLsList = new ArrayList<>();\r\n\r\n\r\n//          Initialize SharedPreference variables\r\n        sp = getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n        setupBottomNavigationView();\r\n        setupFirebaseAuth();\r\n        fetchPhotosFromSp();\r\n//        SetupGridView();\r\n        scrollView.getViewTreeObserver()\r\n                .addOnScrollChangedListener(new ViewTreeObserver.OnScrollChangedListener() {\r\n                    @Override\r\n                    public void onScrollChanged() {\r\n\r\n                        if (scrollView.getChildAt(0).getBottom()\r\n                                == (scrollView.getHeight() + scrollView.getScrollY()) && c != 0) {\r\n\r\n\r\n                            //scroll view is at bottom\r\n\r\n                            Log.d(TAG, \"onScrollChanged: j\");\r\n                            displayMorePhotos();\r\n//                            checkLoading();\r\n\r\n                        } else {\r\n//                            bottomProgress.setVisibility(View.GONE);\r\n\r\n                            //scroll view is not at bottom\r\n                        }\r\n                        c++;\r\n                    }\r\n\r\n\r\n                });\r\n\r\n        mGmailLink.setOnClickListener(v -> {\r\n            if (gmail != null && !gmail.equals(\"\")) {\r\n                Intent i = new Intent(Intent.ACTION_SEND);\r\n                i.setPackage(\"com.google.android.gm\");\r\n                i.setType(\"message/rfc822\");\r\n                i.putExtra(Intent.EXTRA_EMAIL, new String[]{gmail});\r\n                i.putExtra(Intent.EXTRA_SUBJECT, \"Orion\");\r\n                i.putExtra(Intent.EXTRA_TEXT, \"We from Orion would like to help and connect u with others out there\");\r\n                try {\r\n                    startActivity(Intent.createChooser(i, \"Send mail...\"));\r\n                } catch (android.content.ActivityNotFoundException ex) {\r\n                    Toast.makeText(mContext, \"There are no email clients installed.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n        mInstagramLink.setOnClickListener(v -> {\r\n            Uri uri = Uri.parse(\"http://instagram.com/_u/\" + instagramProfile);\r\n            Intent likeIng = new Intent(Intent.ACTION_VIEW, uri);\r\n            likeIng.setPackage(\"com.instagram.android\");\r\n            try {\r\n                startActivity(likeIng);\r\n            } catch (ActivityNotFoundException e) {\r\n                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"http://instagram.com/xxx\")));\r\n            }\r\n        });\r\n        mFacebookLink.setOnClickListener(v -> {\r\n            try {\r\n                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"fb://profile/426253597411506\"));\r\n                startActivity(intent);\r\n            } catch (Exception e) {\r\n                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"http://www.facebook.com/appetizerandroid\")));\r\n            }\r\n        });\r\n        mTwitterLink.setOnClickListener(v -> {\r\n            Intent intent;\r\n            try {\r\n                this.getPackageManager().getPackageInfo(\"com.twitter.android\", 0);\r\n                intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"twitter://user?screen_name=\" + twitterProfile));\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n            } catch (Exception e) {\r\n                intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://twitter.com/USERID_OR_PROFILENAME\"));\r\n            }\r\n            this.startActivity(intent);\r\n        });\r\n        mWhatsappLink.setOnClickListener(v -> {\r\n            if (whatsappNo != null && !whatsappNo.equals(\"\")) {\r\n                String url = \"https://api.whatsapp.com/send?phone=\" + whatsappNo;\r\n                Intent i = new Intent(Intent.ACTION_VIEW);\r\n                i.setData(Uri.parse(url));\r\n                startActivity(i);\r\n            }\r\n        });\r\n        mLink1.setOnClickListener(v -> {\r\n            try {\r\n                Uri uri = Uri.parse(String.valueOf(mLink1.getText()));\r\n                if (!URLUtil.isValidUrl(String.valueOf(mLink1.getText()))) {\r\n                    Toast.makeText(mContext, \" This is not a valid link\", Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                    intent.setData(uri);\r\n                    mContext.startActivity(intent);\r\n                }\r\n            } catch (ActivityNotFoundException e) {\r\n                Toast.makeText(mContext, \" You don't have any browser to open web page\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n        mLink2.setOnClickListener(v -> {\r\n            try {\r\n                Uri uri = Uri.parse(String.valueOf(mLink2.getText()));\r\n                if (!URLUtil.isValidUrl(String.valueOf(mLink2.getText()))) {\r\n                    Toast.makeText(mContext, \" This is not a valid link\", Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                    intent.setData(uri);\r\n                    mContext.startActivity(intent);\r\n                }\r\n            } catch (ActivityNotFoundException e) {\r\n                Toast.makeText(mContext, \" You don't have any browser to open web page\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n        mLink3.setOnClickListener(v -> {\r\n            try {\r\n                Uri uri = Uri.parse(String.valueOf(mLink3.getText()));\r\n                if (!URLUtil.isValidUrl(String.valueOf(mLink3.getText()))) {\r\n                    Toast.makeText(mContext, \" This is not a valid link\", Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                    intent.setData(uri);\r\n                    mContext.startActivity(intent);\r\n                }\r\n            } catch (ActivityNotFoundException e) {\r\n                Toast.makeText(mContext, \" You don't have any browser to open web page\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n        share_btn.setOnClickListener(v -> {\r\n            YoYo.with(Techniques.FadeIn).duration(500).playOn(share_btn);\r\n            if (checkPermissionArray(Permissions.PERMISSIONS)) {\r\n\r\n                DialogPostSelection dialogPostSelection = new DialogPostSelection(ProfileActivity.this);\r\n                dialogPostSelection.show();\r\n            } else verifyPermission(Permissions.PERMISSIONS);\r\n        });\r\n        menu.setOnClickListener(v -> {\r\n            Intent intent = new Intent(this, AccountSettingActivity.class);\r\n            startActivity(intent);\r\n            overridePendingTransition(R.anim.fade_in, R.anim.fade_out);\r\n        });\r\n    }\r\n\r\n    private void setUpInfoBox() {\r\n        getFans();\r\n        getPosts();\r\n        getWins();\r\n        getCreations();\r\n        getParticipation();\r\n        getGP();\r\n        getJudges();\r\n        mRank.setText(String.valueOf(rank));\r\n        getRank();\r\n        dialog.dismiss();\r\n    }\r\n\r\n    private void getJudges() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests))\r\n                .child(mAuth.getCurrentUser().getUid())\r\n                .child(getString(R.string.field_contest_judged));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n//                mCreations.setText((int) size);\r\n                    judges.setText(String.valueOf(size));\r\n                } else {\r\n                    judges.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mCreations.setText(\"?\");\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getGP() {\r\n        Query query = myRef.child(mContext.getString(R.string.dbname_contests))\r\n                .child(mAuth.getCurrentUser().getUid())\r\n                .child(getString(R.string.field_contest_completed));\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @SuppressLint(\"SetTextI18n\")\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long y = (long) snapshot.getValue();\r\n                    myRef.child(mContext.getString(R.string.dbname_contests))\r\n                            .child(mAuth.getCurrentUser().getUid())\r\n                            .child(getString(R.string.field_contest_reports))\r\n                            .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                    if (snapshot.exists()) {\r\n                                        long x = (long) snapshot.getValue();\r\n                                        gp.setText((100 - (((x * 100) / y))) + \"%\");\r\n                                    } else gp.setText(\"100%\");\r\n                                }\r\n\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError error) {\r\n                                    gp.setText(\"100%\");\r\n                                }\r\n                            });\r\n\r\n                } else gp.setText(\"100%\");\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getFans() {\r\n        Query query = myRef.child(getString(R.string.dbname_follower)).child(user.getUid());\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    int size = (int) snapshot.getChildrenCount();\r\n                    Log.d(TAG, \"setUpInfoBox: fansCount\" + size);\r\n                    if (size == 0) mFans.setText(\"0\");\r\n                    else mFans.setText(String.valueOf(size));\r\n                } else {\r\n                    mFans.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mFans.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getPosts() {\r\n        Query query = myRef.child(getString(R.string.dbname_user_photos)).child(user.getUid());\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    int size = (int) snapshot.getChildrenCount();\r\n                    Log.d(TAG, \"setUpInfoBox: postsCount\" + size);\r\n                    if (size == 0) mPosts.setText(\"0\");\r\n                    else mPosts.setText(String.valueOf(size));\r\n                } else {\r\n                    mPosts.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mPosts.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getWins() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests)).child(user.getUid()).child(getString(R.string.field_contest_wins));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n                    Log.d(TAG, \"setUpInfoBox: creations\" + size);\r\n//                mCreations.setText((int) size);\r\n                    mWins.setText(String.valueOf(size));\r\n                } else {\r\n                    mWins.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mCreations.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getCreations() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests)).child(user.getUid()).child(getString(R.string.field_contest_completed));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n                    Log.d(TAG, \"setUpInfoBox: creations\" + size);\r\n//                mCreations.setText((int) size);\r\n                    mCreations.setText(String.valueOf(size));\r\n                } else {\r\n                    mCreations.setText(\"0\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mCreations.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getParticipation() {\r\n        Query query = myRef.child(getString(R.string.dbname_contests)).child(user.getUid()).child(getString(R.string.field_contest_participated));\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    long size = (long) snapshot.getValue();\r\n                    Log.d(TAG, \"setUpInfoBox: participationsCount\" + size);\r\n//                mParticipation.setText((int) size);\r\n                    mParticipation.setText(String.valueOf(size));\r\n                } else {\r\n                    mParticipation.setText(\"0\");\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mParticipation.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getRank() {\r\n        Query query = myRef.child(getString(R.string.dbname_leaderboard)).child(user.getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                int userRating = (int) (long) snapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_post)).getValue()\r\n                        + (int) (long) snapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_followers)).getValue()\r\n                        + (int) (long) snapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_contest)).getValue();\r\n                Query query1 = myRef.child(getString(R.string.dbname_leaderboard));\r\n                query1.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        for (DataSnapshot singleSnapshot : snapshot.getChildren()) {\r\n                            int rating = (int) (long) singleSnapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_post)).getValue()\r\n                                    + (int) (long) singleSnapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_followers)).getValue()\r\n                                    + (int) (long) singleSnapshot.child(getString(R.string.field_all_time)).child(getString(R.string.field_contest)).getValue();\r\n                            if (rating > userRating && !user.getUid().equals(singleSnapshot.getKey()) && !singleSnapshot.getKey().equals(getString(R.string.orion_team_user_id)))\r\n                                updateRank();\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                        mRank.setText(\"?\");\r\n                    }\r\n                });\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                mRank.setText(\"?\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateRank() {\r\n        rank += 1;\r\n        mRank.setText(String.valueOf(rank));\r\n    }\r\n\r\n    private void fetchPhotosFromSp() {\r\n        String json = sp.getString(\"myMedia\", null);\r\n        Type type = new TypeToken<ArrayList<Photo>>() {\r\n        }.getType();\r\n        imgURLsList = gson.fromJson(json, type);\r\n//        Log.d(TAG, \"fetchPhotosFromSp: \"+imgURLsList.size());\r\n        if (imgURLsList == null || imgURLsList.size() == 0) {\r\n            Log.d(TAG, \"fetchPhotosFromSp: 1\");\r\n            imgURLsList = new ArrayList<>();\r\n            SetupGridView();\r\n        } else {\r\n            Log.d(TAG, \"fetchPhotosFromSp: 2\");\r\n\r\n            checkUpdate();\r\n        }\r\n    }\r\n\r\n    private void checkUpdate() {\r\n        noPost.setVisibility(View.GONE);\r\n\r\n        Log.d(TAG, \"checkUpdate: started\");\r\n        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n        assert user != null;\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_user_photos)).child(user.getUid());\r\n\r\n        Log.d(TAG, \"checkUpdate: user\" + user.getUid());\r\n        Query query = reference.limitToLast(1);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n                    if (imgURLsList.get(0).getPi().equals(dataSnapshot.getKey())) {\r\n\r\n                        reference.addValueEventListener(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if (snapshot.getChildrenCount() == imgURLsList.size()) {\r\n\r\n                                    if (imgURLsList != null && imgURLsList.size() != 0) {\r\n                                        displayPhotos();\r\n                                    } else {\r\n                                        noPost.setVisibility(View.VISIBLE);\r\n                                    }\r\n                                } else {\r\n                                    SetupGridView();\r\n\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n\r\n                    } else {\r\n                        SetupGridView();\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void verifyPermission(String[] permissions) {\r\n        ActivityCompat.requestPermissions(this, permissions, VERIFY_PERMISSION_REQUEST);\r\n    }\r\n\r\n    public boolean checkPermissionArray(String[] permissions) {\r\n        for (String check : permissions) if (!checkPermissions(check)) return false;\r\n        return true;\r\n    }\r\n\r\n    public boolean checkPermissions(String permission) {\r\n        int permissionRequest = ActivityCompat.checkSelfPermission(this, permission);\r\n        return permissionRequest == PackageManager.PERMISSION_GRANTED;\r\n    }\r\n\r\n    @TargetApi(19)\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        String imgPath = \"\";\r\n        if (data != null && data.getData() != null && resultCode == RESULT_OK) {\r\n            Uri uri = data.getData();\r\n            if (isKitKat && DocumentsContract.isDocumentUri(this, uri)) {\r\n                if (\"com.android.externalstorage.documents\".equals(uri.getAuthority())) {\r\n                    String docId = DocumentsContract.getDocumentId(uri);\r\n                    String[] split = docId.split(\":\");\r\n                    String type = split[0];\r\n                    if (\"primary\".equalsIgnoreCase(type)) {\r\n                        imgPath = Environment.getExternalStorageDirectory() + \"/\" + split[1];\r\n                        Intent intent = new Intent(this, PostPhotoActivity.class);\r\n                        intent.putExtra(getString(R.string.selected_image), imgPath);\r\n                        startActivity(intent);\r\n                    } else {\r\n                        Pattern DIR_SEPORATOR = Pattern.compile(\"/\");\r\n                        Set<String> rv = new HashSet<>();\r\n                        String rawExternalStorage = System.getenv(\"EXTERNAL_STORAGE\");\r\n                        String rawSecondaryStoragesStr = System.getenv(\"SECONDARY_STORAGE\");\r\n                        String rawEmulatedStorageTarget = System.getenv(\"EMULATED_STORAGE_TARGET\");\r\n                        if (TextUtils.isEmpty(rawEmulatedStorageTarget)) {\r\n                            if (TextUtils.isEmpty(rawExternalStorage)) {\r\n                                rv.add(\"/storage/sdcard0\");\r\n                            } else {\r\n                                rv.add(rawExternalStorage);\r\n                            }\r\n                        } else {\r\n                            String rawUserId;\r\n                            String path = Environment.getExternalStorageDirectory().getAbsolutePath();\r\n                            String[] folders = DIR_SEPORATOR.split(path);\r\n                            String lastFolder = folders[folders.length - 1];\r\n                            boolean isDigit = false;\r\n                            try {\r\n                                Integer.valueOf(lastFolder);\r\n                                isDigit = true;\r\n                            } catch (NumberFormatException ignored) {\r\n                            }\r\n                            rawUserId = isDigit ? lastFolder : \"\";\r\n                            if (TextUtils.isEmpty(rawUserId)) {\r\n                                rv.add(rawEmulatedStorageTarget);\r\n                            } else {\r\n                                rv.add(rawEmulatedStorageTarget + File.separator + rawUserId);\r\n                            }\r\n                        }\r\n                        if (!TextUtils.isEmpty(rawSecondaryStoragesStr)) {\r\n                            assert rawSecondaryStoragesStr != null;\r\n                            String[] rawSecondaryStorages = rawSecondaryStoragesStr.split(File.pathSeparator);\r\n                            Collections.addAll(rv, rawSecondaryStorages);\r\n                        }\r\n                        String[] temp = rv.toArray(new String[0]);\r\n                        for (String s : temp) {\r\n                            File tempf = new File(s + \"/\" + split[1]);\r\n                            if (tempf.exists()) {\r\n                                imgPath = s + \"/\" + split[1];\r\n                                Intent intent = new Intent(this, PostPhotoActivity.class);\r\n                                intent.putExtra(getString(R.string.selected_image), imgPath);\r\n                                startActivity(intent);\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (\"com.android.providers.downloads.documents\".equals(uri.getAuthority())) {\r\n                    String id = DocumentsContract.getDocumentId(uri);\r\n                    Uri contentUri = ContentUris.withAppendedId(Uri.parse(\"content://downloads/public_downloads\"), Long.parseLong(id));\r\n                    Cursor cursor = null;\r\n                    String column = \"_data\";\r\n                    String[] projection = {column};\r\n                    try {\r\n                        cursor = this.getContentResolver().query(contentUri, projection, null, null,\r\n                                null);\r\n                        if (cursor != null && cursor.moveToFirst()) {\r\n                            int column_index = cursor.getColumnIndexOrThrow(column);\r\n                            imgPath = cursor.getString(column_index);\r\n                        }\r\n                    } finally {\r\n                        if (cursor != null)\r\n                            cursor.close();\r\n                    }\r\n                } else if (\"com.android.providers.media.documents\".equals(uri.getAuthority())) {\r\n                    String docId = DocumentsContract.getDocumentId(uri);\r\n                    String[] split = docId.split(\":\");\r\n                    String type = split[0];\r\n\r\n                    Uri contentUri = null;\r\n                    if (\"image\".equals(type)) {\r\n                        contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;\r\n                    } else if (\"video\".equals(type)) {\r\n                        contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;\r\n                    } else if (\"audio\".equals(type)) {\r\n                        contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\r\n                    }\r\n\r\n                    String selection = \"_id=?\";\r\n                    String[] selectionArgs = new String[]{split[1]};\r\n\r\n                    Cursor cursor = null;\r\n                    String column = \"_data\";\r\n                    String[] projection = {column};\r\n\r\n                    try {\r\n                        assert contentUri != null;\r\n                        cursor = this.getContentResolver().query(contentUri, projection, selection, selectionArgs, null);\r\n                        if (cursor != null && cursor.moveToFirst()) {\r\n                            int column_index = cursor.getColumnIndexOrThrow(column);\r\n                            imgPath = cursor.getString(column_index);\r\n                            Intent intent = new Intent(this, PostPhotoActivity.class);\r\n                            intent.putExtra(getString(R.string.selected_image), imgPath);\r\n                            startActivity(intent);\r\n                        }\r\n                    } finally {\r\n                        if (cursor != null)\r\n                            cursor.close();\r\n                    }\r\n                } else if (\"com.google.android.apps.docs.storage\".equals(uri.getAuthority())) {\r\n                    Intent intent = new Intent(this, PostPhotoActivity.class);\r\n                    intent.putExtra(getString(R.string.selected_image), imgPath);\r\n                    startActivity(intent);\r\n                }\r\n            } else if (\"content\".equalsIgnoreCase(uri.getScheme())) {\r\n                Cursor cursor = null;\r\n                String column = \"_data\";\r\n                String[] projection = {column};\r\n\r\n                try {\r\n                    cursor = this.getContentResolver().query(uri, projection, null, null, null);\r\n                    if (cursor != null && cursor.moveToFirst()) {\r\n                        int column_index = cursor.getColumnIndexOrThrow(column);\r\n                        imgPath = cursor.getString(column_index);\r\n                        Intent intent = new Intent(this, PostPhotoActivity.class);\r\n                        intent.putExtra(getString(R.string.selected_image), imgPath);\r\n                        startActivity(intent);\r\n                    }\r\n                } finally {\r\n                    if (cursor != null)\r\n                        cursor.close();\r\n                }\r\n            } else if (\"file\".equalsIgnoreCase(uri.getScheme())) {\r\n                imgPath = uri.getPath();\r\n                Intent intent = new Intent(this, PostPhotoActivity.class);\r\n                intent.putExtra(getString(R.string.selected_image), imgPath);\r\n                startActivity(intent);\r\n            }\r\n        }\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n\r\n    private void SetupGridView() {\r\n        noPost.setVisibility(View.GONE);\r\n\r\n        final ArrayList<Photo> photos = new ArrayList<>();\r\n        imgURLsList = new ArrayList<>();\r\n\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference.child(getString(R.string.dbname_user_photos)).child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                for (DataSnapshot singleSnapshot : dataSnapshot.getChildren()) {\r\n                    Photo photo = new Photo();\r\n                    Map<String, Object> objectMap = (Map<String, Object>) singleSnapshot.getValue();\r\n\r\n                    photo.setCap(objectMap.get(getString(R.string.field_caption)).toString());\r\n                    photo.setTg(objectMap.get(getString(R.string.field_tags)).toString());\r\n                    photo.setPi(objectMap.get(getString(R.string.field_photo_id)).toString());\r\n                    photo.setUi(objectMap.get(getString(R.string.field_user_id)).toString());\r\n                    photo.setDc(objectMap.get(getString(R.string.field_date_createdr)).toString());\r\n                    photo.setIp(objectMap.get(getString(R.string.field_image_path)).toString());\r\n                    if (objectMap.get(getString(R.string.thumbnail)) != null)\r\n                        photo.setT(objectMap.get(getString(R.string.thumbnail)).toString());\r\n                    photo.setTy(objectMap.get(getString(R.string.type)).toString());\r\n                    ArrayList<Comment> comments = new ArrayList<>();\r\n                    for (DataSnapshot dSnapshot : singleSnapshot.child(getString(R.string.field_comment)).getChildren()) {\r\n                        Comment comment = new Comment();\r\n                        comment.setUi(dSnapshot.getValue(Comment.class).getUi());\r\n                        comment.setC(dSnapshot.getValue(Comment.class).getC());\r\n                        comment.setDc(dSnapshot.getValue(Comment.class).getDc());\r\n                        comments.add(comment);\r\n                    }\r\n                    photo.setComments(comments);\r\n                    List<Like> likeList = new ArrayList<Like>();\r\n                    for (DataSnapshot dSnapshot : singleSnapshot.child(getString(R.string.field_likes)).getChildren()) {\r\n                        Like like = new Like();\r\n                        like.setUi(dSnapshot.getValue(Like.class).getUi());\r\n                        likeList.add(like);\r\n                    }\r\n                    photos.add(photo);\r\n\r\n                }\r\n                imgURLsList.addAll(photos);\r\n                Collections.reverse(imgURLsList);\r\n                //    Add newly Created ArrayList to Shared Preferences\r\n                SharedPreferences.Editor editor = sp.edit();\r\n                String json = gson.toJson(imgURLsList);\r\n                editor.putString(\"myMedia\", json);\r\n                editor.apply();\r\n\r\n                if (imgURLsList != null && imgURLsList.size() != 0) {\r\n                    displayPhotos();\r\n                } else {\r\n                    noPost.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setProfileWidgets(users userSetting) {\r\n        Log.d(TAG, \"onDataChange: \" + userSetting.toString());\r\n        Glide.with(getApplicationContext())\r\n                .load(userSetting.getPp())\r\n                .placeholder(R.drawable.load)\r\n                .error(R.drawable.default_image2)\r\n                .placeholder(R.drawable.load)\r\n                .thumbnail(0.2f)\r\n                .into(mProfilePhoto);\r\n\r\n        mUsername.setText(userSetting.getU());\r\n        mDomain.setText(userSetting.getD());\r\n\r\n        if (userSetting.getDn() == null || userSetting.getDn().equals(\"\"))\r\n            mDisplayName.setVisibility(View.GONE);\r\n        else {\r\n            mDisplayName.setText(userSetting.getDn());\r\n        }\r\n        if (userSetting.getDes() == null || userSetting.getDes().equals(\"\"))\r\n            mDescription.setVisibility(View.GONE);\r\n        else {\r\n            mDescription.setVisibility(View.VISIBLE);\r\n            mDescription.setText(userSetting.getDes());\r\n        }\r\n\r\n        if (userSetting.getl1() == null || userSetting.getl1().equals(\"\"))\r\n            mLink1.setVisibility(View.GONE);\r\n        else mLink1.setText(userSetting.getl1());\r\n        if (userSetting.getl2() == null || userSetting.getl2().equals(\"\"))\r\n            mLink2.setVisibility(View.GONE);\r\n        else mLink2.setText(userSetting.getl2());\r\n        if (userSetting.getl3() == null || userSetting.getl3().equals(\"\"))\r\n            mLink3.setVisibility(View.GONE);\r\n        else mLink3.setText(userSetting.getl3());\r\n\r\n        if (userSetting.getE() == null || userSetting.getE().equals(\"\")) {\r\n//            mWebsite.setVisibility(View.GONE);\r\n            mGmailLink.setClickable(false);\r\n            mGmailLink.setAlpha(0.5f);\r\n        } else {\r\n//            mWebsite.setVisibility(View.VISIBLE);\r\n//            mWebsite.setText(userSetting.getE());\r\n            gmail = userSetting.getE();\r\n        }\r\n\r\n        if (userSetting.getIn() == null || userSetting.getIn().equals(\"\")) {\r\n            mInstagramLink.setClickable(false);\r\n            mInstagramLink.setAlpha(0.5f);\r\n        } else {\r\n            instagramProfile = userSetting.getIn();\r\n        }\r\n\r\n        if (userSetting.getFb() == null || userSetting.getFb().equals(\"\")) {\r\n            mFacebookLink.setClickable(false);\r\n            mFacebookLink.setAlpha(0.5f);\r\n        } else {\r\n            facebookProfile = userSetting.getFb();\r\n\r\n        }\r\n        if (userSetting.getTw() == null || userSetting.getTw().equals(\"\")) {\r\n            mTwitterLink.setClickable(false);\r\n            mTwitterLink.setAlpha(0.5f);\r\n        } else {\r\n            twitterProfile = userSetting.getTw();\r\n        }\r\n\r\n        if (userSetting.getWa() == null || userSetting.getWa().equals(\"\")) {\r\n            mWhatsappLink.setClickable(false);\r\n            mWhatsappLink.setAlpha(0.5f);\r\n        } else {\r\n            whatsappNo = userSetting.getWa();\r\n        }\r\n//        dialog.dismiss();\r\n    }\r\n\r\n    private void setupBottomNavigationView() {\r\n        Log.d(TAG, \" setupBottomNavigationView:setting up BottomNavigationView\");\r\n        BottomNaavigationViewHelper.setupBottomNavigationView(bottomNavigationView);\r\n        BottomNaavigationViewHelper.enableNavigation(this, this, bottomNavigationView);\r\n        Menu menu = bottomNavigationView.getMenu();\r\n        MenuItem menuItem = menu.getItem(ACTIVITY_NUM);\r\n        menuItem.setChecked(true);\r\n    }\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        FirebaseDatabase mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mAuthListener = firebaseAuth -> {\r\n            user = firebaseAuth.getCurrentUser();\r\n            if (user != null) {\r\n                Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n                myRef.addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        //retrieve user information from the database\r\n                        setProfileWidgets(Objects.requireNonNull(dataSnapshot.child(getString(R.string.dbname_users)).child(Objects.requireNonNull(FirebaseAuth.getInstance().getCurrentUser()).getUid()).getValue(users.class)));\r\n                        //retrieve image for the user in question\r\n                        setUpInfoBox();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n            } else {\r\n\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                Log.d(TAG, \"onAuthStateChanged: navigating to login\");\r\n                SharedPreferences settings = getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n                new AlertDialog.Builder(mContext)\r\n                        .setTitle(\"No user logon found\")\r\n                        .setMessage(\"We will be logging you out. \\n Please try to log in again\")\r\n                        .setPositiveButton(android.R.string.ok, (dialog, which) -> {\r\n                            Intent intent = new Intent(mContext, login.class);\r\n                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                            settings.edit().clear().apply();\r\n                            if (mAuthListener != null) mAuth.removeAuthStateListener(mAuthListener);\r\n                            startActivity(intent);\r\n                        })\r\n                        .show();\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    private void displayPhotos() {\r\n        noPost.setVisibility(View.GONE);\r\n        Log.d(TAG, \"display first 10 photo\");\r\n        paginatedimgURLsList = new ArrayList<>();\r\n        if (imgURLsList != null && imgURLsList.size() != 0) {\r\n\r\n            try {\r\n\r\n                int iteration = imgURLsList.size();\r\n                if (iteration > 10) {\r\n                    iteration = 10;\r\n                }\r\n                mResults = 10;\r\n                for (int i = 0; i < iteration; i++) {\r\n                    paginatedimgURLsList.add(imgURLsList.get(i));\r\n                }\r\n                Log.d(TAG, \"displayPhotos: sss\" + paginatedimgURLsList.size());\r\n                adapterGridImage = new AdapterGridImage(ProfileActivity.this, paginatedimgURLsList);\r\n                adapterGridImage.setHasStableIds(true);\r\n                gridRv.setAdapter(adapterGridImage);\r\n\r\n            } catch (NullPointerException e) {\r\n                Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n            } catch (IndexOutOfBoundsException e) {\r\n                Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n            }\r\n\r\n        } else {\r\n            noPost.setVisibility(View.VISIBLE);\r\n//            bottomProgress.setVisibility(View.GONE);\r\n\r\n        }\r\n    }\r\n\r\n    public void displayMorePhotos() {\r\n        Log.d(TAG, \"display next 10 photo\");\r\n\r\n        try {\r\n            if (imgURLsList.size() > mResults && imgURLsList.size() > 0) {\r\n\r\n                int iterations;\r\n                if (imgURLsList.size() > (mResults + 6)) {\r\n                    Log.d(TAG, \"display next 10 photo\");\r\n                    iterations = 6;\r\n                } else {\r\n                    Log.d(TAG, \"display less tha 10 photo\");\r\n                    iterations = imgURLsList.size() - mResults;\r\n                }\r\n                for (int i = mResults; i < mResults + iterations; i++) {\r\n                    paginatedimgURLsList.add(imgURLsList.get(i));\r\n\r\n                }\r\n                gridRv.post(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        Log.d(TAG, \"run: \" + mResults + iterations);\r\n                        adapterGridImage.notifyDataSetChanged();\r\n\r\n\r\n                    }\r\n                });\r\n                mResults = mResults + iterations;\r\n\r\n\r\n            } else {\r\n//                bottomProgress.setVisibility(View.GONE);\r\n\r\n            }\r\n\r\n        } catch (NullPointerException e) {\r\n            Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n        } catch (IndexOutOfBoundsException e) {\r\n            Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/profile/ProfileActivity.java	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/src/main/java/com/orion/orion/profile/ProfileActivity.java	(date 1608543501989)
@@ -189,7 +189,6 @@
         gridRv.setHasFixedSize(true);
         GridLayoutManager linearLayoutManager = new GridLayoutManager(this, 3);
         gridRv.setLayoutManager(linearLayoutManager);
-        gridRv.setDrawingCacheEnabled(true);
         gridRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);
         linearLayoutManager.setItemPrefetchEnabled(true);
         linearLayoutManager.setInitialPrefetchItemCount(20);
@@ -1086,4 +1085,5 @@
             mAuth.removeAuthStateListener(mAuthListener);
         }
     }
+
 }
Index: app/src/main/java/com/orion/orion/home/Homefragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.home;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.ViewTreeObserver;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.orion.orion.Adapters.AdapterMainFeedContest;\r\nimport com.orion.orion.Adapters.AdapterMainfeed;\r\nimport com.orion.orion.Adapters.AdapterPromote;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.models.Comment;\r\nimport com.orion.orion.models.ContestDetail;\r\nimport com.orion.orion.models.Photo;\r\nimport com.orion.orion.models.Promote;\r\nimport com.orion.orion.models.users;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\n/*\r\nShared preference keys:\r\nfl=Following list\r\nffl = filtered following list\r\ncl = contest list\r\npl= post list\r\naddfollowing = list of users we followed\r\nremovefollowing = list of users we unfollowed\r\ndomain= user domain\r\n\r\n */\r\n\r\npublic class Homefragment extends Fragment implements AdapterMainfeed.ReleasePlayer {\r\n    private static final String TAG = \"HomeFragment\";\r\n    private ArrayList<Photo> mPhotos;\r\n    private ArrayList<String> mFollowing;\r\n    private ArrayList<String> mFollowing1;\r\n    private ArrayList<Photo> mPaginatedPhotos;\r\n    private RecyclerView contestRv;\r\n    private ArrayList<ContestDetail> contestlist;\r\n    private AdapterMainFeedContest contestUpcoming;\r\n    private RecyclerView promoteRv;\r\n    private ArrayList<String> promotelist;\r\n    public ProgressBar bottomProgress;\r\n    private AdapterPromote promote;\r\n    private int c = 0;\r\n    String domain;\r\n    boolean flag1 = false, flag2 = false, flag3 = false, flag4 = false, flag5 = false;\r\n    private static int RETRY_DURATION = 1000;\r\n    private static final Handler handler = new Handler(Looper.getMainLooper());\r\n\r\n    LinearLayout promo;\r\n    private ImageView star, starFill;\r\n    TextView domaintv, noPost;\r\n    SwipeRefreshLayout postReferesh;\r\n    ScrollView scrollView;\r\n    private RecyclerView ListViewRv;\r\n    private AdapterMainfeed mAadapter;\r\n    RelativeLayout promoteLayout;\r\n    private int mResults;\r\n    public LinearLayout progress;\r\n    TextView username;\r\n    CircleImageView storySeen, story;\r\n\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull final LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n\r\n        View view = inflater.inflate(R.layout.fragment_home, container, false);\r\n        ListViewRv = view.findViewById(R.id.listview);\r\n        star = view.findViewById(R.id.domainBtn);\r\n        starFill = view.findViewById(R.id.domainBtnSel);\r\n        domaintv = view.findViewById(R.id.domainTv);\r\n        username = view.findViewById(R.id.story_username);\r\n        storySeen = view.findViewById(R.id.story_photo_seen);\r\n        story = view.findViewById(R.id.story_photo);\r\n        promo = view.findViewById(R.id.promo2);\r\n        scrollView = view.findViewById(R.id.parent_scroll);\r\n        postReferesh = view.findViewById(R.id.post_refresh);\r\n        progress = view.findViewById(R.id.pro);\r\n        bottomProgress = view.findViewById(R.id.pro2);\r\n        noPost = view.findViewById(R.id.noPost);\r\n        promoteLayout = view.findViewById(R.id.itemLayout);\r\n\r\n//          Initialize SharedPreference variables\r\n        sp = getContext().getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n\r\n        postReferesh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n                flag1 = false;\r\n                flag2 = false;\r\n                flag3 = false;\r\n                flag4 = false;\r\n\r\n                getFollowerListFromSP();\r\n\r\n                checkRefresh();\r\n\r\n\r\n            }\r\n\r\n            private void checkRefresh() {\r\n                Log.d(TAG, \"onRefresh: \" + flag1 + flag2 + flag3 + flag4);\r\n                if (postReferesh.isRefreshing() && flag1 && flag2 && (flag3 || flag4)) {\r\n                    postReferesh.setRefreshing(false);\r\n                    handler.removeCallbacks(this::checkRefresh);\r\n                    flag1 = false;\r\n                    flag2 = false;\r\n                    flag3 = false;\r\n                    flag4 = false;\r\n                } else {\r\n                    handler.postDelayed(this::checkRefresh, RETRY_DURATION);\r\n                }\r\n            }\r\n        });\r\n\r\n//          fetch   domain from SP\r\n\r\n        domain = sp.getString(\"domain\", null);\r\n        if (domain == null) {           //   if not present\r\n            DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n            reference2\r\n                    .child(getString(R.string.dbname_users))\r\n                    .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                    .child(getString(R.string.field_domain))\r\n                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                            domain = dataSnapshot.getValue().toString();\r\n\r\n//                 save to SP\r\n\r\n                            SharedPreferences.Editor editor = sp.edit();\r\n                            editor.putString(\"domain\", domain);\r\n                            editor.apply();\r\n\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                        }\r\n                    });\r\n\r\n        }\r\n\r\n        getUserInfo(FirebaseAuth.getInstance().getCurrentUser().getUid(), story, storySeen, username);\r\n        seenStory(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n        promo.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(getActivity(), ViewPromoted.class);\r\n                i.putExtra(\"userid\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                startActivity(i);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        contestRv = view.findViewById(R.id.recyclerContest);\r\n\r\n        promoteRv = view.findViewById(R.id.recyclerPromote);\r\n\r\n        mFollowing1 = new ArrayList<>();\r\n\r\n        contestRv.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false);\r\n        contestRv.setLayoutManager(linearLayoutManager);\r\n\r\n        linearLayoutManager.setItemPrefetchEnabled(true);\r\n        linearLayoutManager.setInitialPrefetchItemCount(20);\r\n        contestRv.setItemViewCacheSize(9);\r\n        contestRv.setDrawingCacheEnabled(true);\r\n        contestRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n\r\n        contestlist = new ArrayList<>();\r\n\r\n//****************************************************************************\r\n\r\n        promoteRv.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager3 = new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false);\r\n        promoteRv.setLayoutManager(linearLayoutManager3);\r\n\r\n        linearLayoutManager3.setItemPrefetchEnabled(true);\r\n        linearLayoutManager3.setInitialPrefetchItemCount(20);\r\n        promoteRv.setItemViewCacheSize(9);\r\n        promoteRv.setDrawingCacheEnabled(true);\r\n        promoteRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n\r\n        promotelist = new ArrayList<>();\r\n        promote = new AdapterPromote(getContext(), promotelist);\r\n        promote.setHasStableIds(true);\r\n\r\n        promoteRv.setAdapter(promote);\r\n\r\n\r\n//****************************************************************************\r\n        ListViewRv.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager1 = new LinearLayoutManager(getContext());\r\n        ListViewRv.setLayoutManager(linearLayoutManager1);\r\n        linearLayoutManager1.setItemPrefetchEnabled(true);\r\n        linearLayoutManager1.setInitialPrefetchItemCount(20);\r\n        ListViewRv.setItemViewCacheSize(9);\r\n        ListViewRv.setDrawingCacheEnabled(true);\r\n        ListViewRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);\r\n\r\n        scrollView.getViewTreeObserver().addOnScrollChangedListener(new ViewTreeObserver.OnScrollChangedListener() {\r\n                    @Override\r\n                    public void onScrollChanged() {\r\n\r\n                        if (scrollView.getChildAt(0).getBottom()\r\n                                == (scrollView.getHeight() + scrollView.getScrollY()) && c != 0) {\r\n                            if (mPhotos.size() != mPaginatedPhotos.size()) {\r\n                                bottomProgress.setVisibility(View.VISIBLE);\r\n\r\n                            }\r\n\r\n                            //scroll view is at bottom\r\n\r\n                            displayMorePhotos();\r\n//                            checkLoading();\r\n\r\n                        } else {\r\n                            bottomProgress.setVisibility(View.GONE);\r\n\r\n                            //scroll view is not at bottom\r\n                        }\r\n                        c++;\r\n                    }\r\n\r\n\r\n                });\r\n\r\n\r\n        star.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                star.setVisibility(View.GONE);\r\n                starFill.setVisibility(View.VISIBLE);\r\n                postReferesh.setRefreshing(true);\r\n                domaintv.setText(domain);\r\n                getFilteredFollowerListFromSP(domain);\r\n            }\r\n        });\r\n        starFill.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                postReferesh.setRefreshing(true);\r\n                starFill.setVisibility(View.GONE);\r\n                star.setVisibility(View.VISIBLE);\r\n                domaintv.setText(\"All\");\r\n                getPostListFromSP();\r\n            }\r\n        });\r\n\r\n        getFollowerListFromSP();\r\n\r\n\r\n        return view;\r\n\r\n\r\n    }\r\n\r\n\r\n    //  fetching FollowerList  from SharedPreferences\r\n    private void getFollowerListFromSP() {\r\n        String json = sp.getString(\"fl\", null);\r\n\r\n        Type type = new TypeToken<ArrayList<String>>() {\r\n        }.getType();\r\n        mFollowing = gson.fromJson(json, type);\r\n        if (mFollowing == null) {    //        if no arrayList is present\r\n            mFollowing = new ArrayList<>();\r\n\r\n            Log.d(TAG, \"getFollowerListFromSP: 1\");\r\n            getFollowing();   //            make new Arraylist\r\n\r\n        } else {\r\n            checkFollowingUpdate();  //         Check if we followed or unfollowed anyone\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void checkFollowingUpdate() {\r\n\r\n        int c = 0;\r\n\r\n        String json = sp.getString(\"addfollowing\", null);\r\n        Type type = new TypeToken<ArrayList<String>>() {\r\n        }.getType();\r\n        ArrayList<String> list = new ArrayList<>();\r\n        list = gson.fromJson(json, type);\r\n        if (list == null || list.size() == 0) {    //        not followed anyone\r\n            c++;\r\n        } else {              //    we followed someone....update everylist\r\n            addToPhotosList(list);\r\n            addToContestList(list);\r\n            addToFilteredFollowingList(list);\r\n            getStory();\r\n\r\n        }\r\n\r\n        json = sp.getString(\"removefollowing\", null);\r\n        type = new TypeToken<ArrayList<String>>() {\r\n        }.getType();\r\n        ArrayList<String> ulist = new ArrayList<>();\r\n        ulist = gson.fromJson(json, type);\r\n        if (ulist == null || ulist.size() == 0) {    //         not unfollowed anyone\r\n            c++;\r\n        } else {                  //    we unfollowed someone....update everylist\r\n\r\n            removeFromPhotosList(ulist);\r\n            removeFromContestList(ulist);\r\n            removeFromFilteredFollowingList(ulist);\r\n\r\n            getStory();\r\n        }\r\n\r\n        if (c == 2) {    //  if ther is no update\r\n            getPostListFromSP();\r\n            getContestListFromSP();\r\n            getStory();\r\n        }\r\n    }\r\n\r\n\r\n    //  fetching Postlist  from SharedPreferences\r\n    private void getPostListFromSP() {\r\n        String json = sp.getString(\"pl\", null);\r\n        Type type = new TypeToken<ArrayList<Photo>>() {\r\n        }.getType();\r\n        mPhotos = gson.fromJson(json, type);\r\n        if (mPhotos == null || mPhotos.size() == 0) {                 //    if no arrayList is present\r\n            Log.d(TAG, \"getFollowerListFromSP: 3\");\r\n\r\n            getPhotos();                    //  make new Arraylist\r\n\r\n        } else {\r\n            checkPostUpdate();              //  Check whether any new Post is there or not\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //  fetching ContestList  from SharedPreferences\r\n    private void getContestListFromSP() {\r\n        String json = sp.getString(\"cl\", null);\r\n        Type type = new TypeToken<ArrayList<ContestDetail>>() {\r\n        }.getType();\r\n        contestlist = gson.fromJson(json, type);\r\n        if (contestlist == null || contestlist.size() == 0) {    //        if no arrayList is present\r\n\r\n            contestlist = new ArrayList<>();\r\n            Log.d(TAG, \"checkContestUpdate: 00\");\r\n            getcontest();   //            make new Arraylist\r\n\r\n        } else {\r\n\r\n//contestlist.clear();\r\n//            SharedPreferences.Editor editor = sp.edit();\r\n//             json = gson.toJson(contestlist);\r\n//            editor.putString(\"cl\", json);\r\n//            editor.apply();\r\n\r\n\r\n            checkContestUpdate();\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void checkContestUpdate() {\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(getString(R.string.contest_update))\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot1) {\r\n//                        If snapshot exist,new contest are there\r\n                        if (snapshot1.exists()) {\r\n                            Collections.reverse(contestlist);\r\n                            for (DataSnapshot snapshot : snapshot1.getChildren()) {\r\n\r\n                                final int[] flag = {0};\r\n                                DatabaseReference db1 = FirebaseDatabase.getInstance().getReference();\r\n                                db1.child(getString(R.string.dbname_contestlist))\r\n                                        .child(snapshot.getKey())\r\n                                        .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                            @Override\r\n                                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                                flag[0]++;\r\n                                                ContestDetail contestDetail = snapshot.getValue(ContestDetail.class);\r\n                                                if (contestDetail != null && !contestDetail.getR()) {\r\n                                                    contestlist.add(contestDetail);\r\n\r\n                                                }\r\n                                                if (flag[0] == snapshot1.getChildrenCount()) {          //when all update added\r\n\r\n                                                    Collections.reverse(contestlist);\r\n                                                    //                Add newly Created ArrayList to Shared Preferences\r\n                                                    SharedPreferences.Editor editor = sp.edit();\r\n                                                    String json = gson.toJson(contestlist);\r\n                                                    editor.putString(\"cl\", json);\r\n                                                    editor.apply();\r\n\r\n                                                    contestUpcoming = new AdapterMainFeedContest(getContext(), contestlist);\r\n                                                    contestUpcoming.setHasStableIds(true);\r\n\r\n                                                    contestRv.setAdapter(contestUpcoming);\r\n\r\n                                                    contestUpcoming.notifyDataSetChanged();\r\n                                                    flag4 = true;\r\n\r\n\r\n//                                                    delete update\r\n                                                    DatabaseReference db3 = FirebaseDatabase.getInstance().getReference();\r\n                                                    db3.child(getString(R.string.dbname_users))\r\n                                                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                            .child(getString(R.string.contest_update))\r\n                                                            .removeValue();\r\n                                                }\r\n                                            }\r\n\r\n\r\n                                            @Override\r\n                                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                            }\r\n                                        });\r\n\r\n\r\n                            }\r\n                        } else {\r\n\r\n                            contestUpcoming = new AdapterMainFeedContest(getContext(), contestlist);\r\n                            contestUpcoming.setHasStableIds(true);\r\n\r\n                            contestRv.setAdapter(contestUpcoming);\r\n\r\n                            contestUpcoming.notifyDataSetChanged();\r\n                            flag4 = true;\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    //  fetching filtered followerlist  from SharedPreferences\r\n    private void getFilteredFollowerListFromSP(String domain) {\r\n        String json = sp.getString(\"ffl\", null);\r\n        Type type = new TypeToken<ArrayList<String>>() {\r\n        }.getType();\r\n        mFollowing1 = gson.fromJson(json, type);\r\n        if (mFollowing1 == null) {    //        if no arrayList is present\r\n            mFollowing1 = new ArrayList<>();\r\n            getFollowingFilltered(domain);  //            make new Arraylist\r\n        } else {\r\n            getfilterPhotos(mFollowing1);\r\n        }\r\n\r\n    }\r\n\r\n    private void checkPostUpdate() {\r\n\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(getString(R.string.post_updates))\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n//                        If snapshot exist,new Posts are there\r\n                        if (snapshot.exists()) {\r\n\r\n//                            create two Arraylist,each containing key and userId respectively and corruspondingly\r\n\r\n                            ArrayList<String> a1 = new ArrayList<>();\r\n                            ArrayList<String> a2 = new ArrayList<>();\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                a1.add(snapshot1.getKey());\r\n                                a2.add(snapshot1.getValue().toString());\r\n                            }\r\n//                           get photos using arraylist above arraylist\r\n                            getUpdatedPhotos(a1, a2);\r\n\r\n                        } else {\r\n//                            No new Post are there,so display photos\r\n\r\n                            displayPhotos();\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    private void removeFromFilteredFollowingList(ArrayList<String> list) {\r\n        String json = sp.getString(\"ffl\", null);\r\n        Type type = new TypeToken<ArrayList<String>>() {\r\n        }.getType();\r\n        mFollowing1 = gson.fromJson(json, type);\r\n        if (mFollowing1 == null) {    //        if no arrayList is present\r\n\r\n        } else {\r\n\r\n            for (int i = 0; i < list.size(); i++) {\r\n                mFollowing1.remove(list.get(i));\r\n\r\n            }\r\n            //                        Add updated ArrayList to Shared Preferences\r\n            SharedPreferences.Editor editor = sp.edit();\r\n            json = gson.toJson(mFollowing1);\r\n            editor.putString(\"ffl\", json);\r\n            editor.apply();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void addToFilteredFollowingList(ArrayList<String> list) {\r\n        Log.d(TAG, \"addToFilteredFollowingList: qwer\" + domain);\r\n        String json = sp.getString(\"ffl\", null);\r\n        Type type = new TypeToken<ArrayList<String>>() {\r\n        }.getType();\r\n        mFollowing1 = gson.fromJson(json, type);\r\n        if (mFollowing1 == null) {    //        if no arrayList is present\r\n            mFollowing1 = new ArrayList<>();\r\n\r\n        }\r\n\r\n        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n\r\n        reference2\r\n                .child(getString(R.string.dbname_users))\r\n\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        if (dataSnapshot.exists()) {\r\n                            int x = 0;\r\n                            for (int i = 0; i < list.size(); i++) {\r\n                                x++;\r\n\r\n                                Log.d(TAG, \"onDataChange: ooo\" + list);\r\n                                if (dataSnapshot.child(list.get(i))\r\n                                        .child(getString(R.string.field_domain)).getValue().equals(domain)) {\r\n                                    mFollowing1.add(list.get(i));\r\n                                }\r\n                                if (x == dataSnapshot.getChildrenCount()) {\r\n\r\n//                        Add newly Created ArrayList to Shared Preferences\r\n                                    SharedPreferences.Editor editor = sp.edit();\r\n                                    String json = gson.toJson(mFollowing1);\r\n                                    editor.putString(\"ffl\", json);\r\n                                    editor.apply();\r\n                                }\r\n\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    private void removeFromContestList(ArrayList<String> list) {\r\n\r\n        String json = sp.getString(\"cl\", null);\r\n        Type type = new TypeToken<ArrayList<ContestDetail>>() {\r\n        }.getType();\r\n        ArrayList<ContestDetail> list1 = new ArrayList<>();\r\n        list1 = gson.fromJson(json, type);\r\n        if (list1 == null) {\r\n            list1 = new ArrayList<>();\r\n        }\r\n\r\n\r\n        if (list1.size() != 0) {\r\n            for (int i = 0; i < list.size(); i++) {\r\n                for (int x = 0; x < list1.size(); x++) {\r\n                    if (list1.get(x).getUi().equals(list.get(i))) {\r\n                        list1.remove(list1.get(x));\r\n                        x--;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n//                        Add newly Created ArrayList to Shared Preferences\r\n        SharedPreferences.Editor editor = sp.edit();\r\n        json = gson.toJson(list1);\r\n        editor.putString(\"cl\", json);\r\n        editor.apply();\r\n\r\n        contestUpcoming = new AdapterMainFeedContest(getContext(), contestlist);\r\n        contestUpcoming.setHasStableIds(true);\r\n\r\n        contestRv.setAdapter(contestUpcoming);\r\n\r\n        contestUpcoming.notifyDataSetChanged();\r\n        flag3 = true;\r\n\r\n\r\n    }\r\n\r\n    private void addToContestList(ArrayList<String> list) {\r\n        String json = sp.getString(\"cl\", null);\r\n        Type type = new TypeToken<ArrayList<ContestDetail>>() {\r\n        }.getType();\r\n        contestlist = gson.fromJson(json, type);\r\n        if (contestlist == null || contestlist.size() == 0) {    //        if no arrayList is present\r\n            contestlist = new ArrayList<>();\r\n\r\n        }\r\n\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n\r\n        for (int i = 0; i < list.size(); i++) {\r\n\r\n            final int count = i;\r\n\r\n\r\n            Query query = reference\r\n                    .child(getString(R.string.dbname_contestlist))\r\n                    .orderByChild(getString(R.string.field_user_id))\r\n                    .equalTo(list.get(i));\r\n            query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                    if (dataSnapshot.exists()) {\r\n                        Collections.reverse(contestlist);\r\n                        int x = 0;\r\n                        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                            x++;\r\n                            ContestDetail contestDetail = snapshot.getValue(ContestDetail.class);\r\n                            if (!contestDetail.getR()) {\r\n                                contestlist.add(contestDetail);\r\n                            }\r\n                            if (x == dataSnapshot.getChildrenCount() && count == list.size() - 1) {\r\n\r\n                                Collections.reverse(contestlist);\r\n\r\n//                        Add newly Created ArrayList to Shared Preferences\r\n                                SharedPreferences.Editor editor = sp.edit();\r\n                                String json = gson.toJson(contestlist);\r\n                                editor.putString(\"cl\", json);\r\n                                editor.apply();\r\n\r\n                                contestUpcoming = new AdapterMainFeedContest(getContext(), contestlist);\r\n                                contestUpcoming.setHasStableIds(true);\r\n\r\n                                contestRv.setAdapter(contestUpcoming);\r\n\r\n                                contestUpcoming.notifyDataSetChanged();\r\n                                flag3 = true;\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        contestUpcoming = new AdapterMainFeedContest(getContext(), contestlist);\r\n                        contestUpcoming.setHasStableIds(true);\r\n\r\n                        contestRv.setAdapter(contestUpcoming);\r\n\r\n                        contestUpcoming.notifyDataSetChanged();\r\n                        flag3 = true;\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private void removeFromPhotosList(ArrayList<String> uid) {\r\n\r\n        String json = sp.getString(\"pl\", null);\r\n        Type type = new TypeToken<ArrayList<Photo>>() {\r\n        }.getType();\r\n        mPhotos = gson.fromJson(json, type);\r\n        if (mPhotos == null || mPhotos.size() == 0) {                 //    if no arrayList is present\r\n\r\n            mPhotos = new ArrayList<>();                 //  make new Arraylist\r\n\r\n        }\r\n\r\n        for (int x = 0; x < uid.size(); x++) {\r\n\r\n\r\n//                    remove photo to mPhotos list\r\n\r\n            ArrayList<Photo> l = new ArrayList<>(mPhotos);\r\n            for (Photo a : l) {\r\n                if (a.getUi().equals(uid.get(x))) {\r\n                    mPhotos.remove(a);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n//                    sort mPhotos\r\n        Collections.sort(mPhotos, new Comparator<Photo>() {\r\n            @Override\r\n            public int compare(Photo o1, Photo o2) {\r\n                return o2.getDc().compareTo(o1.getDc());\r\n            }\r\n        });\r\n\r\n//                add updated list to Shared Preference\r\n        SharedPreferences.Editor editor = sp.edit();\r\n        json = gson.toJson(mPhotos);\r\n        editor.remove(\"removefollowing\");\r\n        editor.putString(\"pl\", json);\r\n        editor.apply();\r\n        displayPhotos();\r\n\r\n\r\n    }\r\n\r\n\r\n    private void addToPhotosList(ArrayList<String> uid) {\r\n        String json = sp.getString(\"pl\", null);\r\n        Type type = new TypeToken<ArrayList<Photo>>() {\r\n        }.getType();\r\n        mPhotos = gson.fromJson(json, type);\r\n        if (mPhotos == null || mPhotos.size() == 0) {                 //    if no arrayList is present\r\n\r\n            mPhotos = new ArrayList<>();                 //  make new Arraylist\r\n\r\n        }\r\n        int l = 0;\r\n\r\n        for (int x = 0; x < uid.size(); x++) {\r\n            l++;\r\n\r\n            DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n            Query query = reference\r\n                    .child(getString(R.string.dbname_user_photos))\r\n                    .child(uid.get(x));\r\n\r\n            int finalL = l;\r\n            query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                    if (snapshot.exists()) {\r\n                        int h = 0;\r\n                        for (DataSnapshot singleSnapshot : snapshot.getChildren()) {\r\n                            h++;\r\n                            Photo photo = new Photo();\r\n                            Map<String, Object> objectMap = (HashMap<String, Object>) singleSnapshot.getValue();\r\n\r\n                            photo.setCap(objectMap.get(getString(R.string.field_caption)).toString());\r\n\r\n                            photo.setTg(objectMap.get(getString(R.string.field_tags)).toString());\r\n\r\n                            photo.setPi(objectMap.get(getString(R.string.field_photo_id)).toString());\r\n\r\n                            photo.setUi(objectMap.get(getString(R.string.field_user_id)).toString());\r\n\r\n                            photo.setDc(objectMap.get(getString(R.string.field_date_createdr)).toString());\r\n\r\n                            photo.setIp(objectMap.get(getString(R.string.field_image_path)).toString());\r\n\r\n                            if (objectMap.get(getString(R.string.thumbnail)) != null)\r\n                                photo.setT(objectMap.get(getString(R.string.thumbnail)).toString());\r\n                            if (objectMap.get(getString(R.string.type)) != null)\r\n                                photo.setTy(objectMap.get(getString(R.string.type)).toString());\r\n                            ArrayList<Comment> comments = new ArrayList<>();\r\n\r\n                            for (DataSnapshot dSnapshot : singleSnapshot\r\n                                    .child(getString(R.string.field_comment)).getChildren()) {\r\n                                Comment comment = new Comment();\r\n                                comment.setUi(dSnapshot.getValue(Comment.class).getUi());\r\n                                comment.setC(dSnapshot.getValue(Comment.class).getC());\r\n                                comment.setDc(dSnapshot.getValue(Comment.class).getDc());\r\n                                comments.add(comment);\r\n\r\n                            }\r\n                            photo.setComments(comments);\r\n//                    add photo to mPhotos list\r\n                            mPhotos.add(photo);\r\n\r\n                            if (finalL == uid.size() && h == snapshot.getChildrenCount()) {\r\n\r\n//                    sort mPhotos\r\n                                Collections.sort(mPhotos, new Comparator<Photo>() {\r\n                                    @Override\r\n                                    public int compare(Photo o1, Photo o2) {\r\n                                        return o2.getDc().compareTo(o1.getDc());\r\n                                    }\r\n                                });\r\n\r\n//                add updated list to Shared Preference\r\n                                SharedPreferences.Editor editor = sp.edit();\r\n                                editor.remove(\"addfollowing\");\r\n                                String json = gson.toJson(mPhotos);\r\n                                editor.putString(\"pl\", json);\r\n                                editor.apply();\r\n\r\n                                displayPhotos();\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        displayPhotos();\r\n\r\n                    }\r\n                }\r\n\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    Log.d(TAG, \"Query Cancelled\");\r\n                }\r\n            });\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    private void getUpdatedPhotos(ArrayList<String> key, ArrayList<String> uid) {\r\n        for (int x = 0; x < key.size(); x++) {\r\n\r\n            DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n\r\n\r\n            Query query = reference\r\n                    .child(getString(R.string.dbname_user_photos))\r\n                    .child(uid.get(x))\r\n                    .child(key.get(x));\r\n            int finalX = x;\r\n            query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot singleSnapshot) {\r\n                    if (singleSnapshot.exists()) {\r\n                        Photo photo = new Photo();\r\n                        Map<String, Object> objectMap = (HashMap<String, Object>) singleSnapshot.getValue();\r\n\r\n                        photo.setCap(objectMap.get(getString(R.string.field_caption)).toString());\r\n\r\n                        photo.setTg(objectMap.get(getString(R.string.field_tags)).toString());\r\n\r\n                        photo.setPi(objectMap.get(getString(R.string.field_photo_id)).toString());\r\n\r\n                        photo.setUi(objectMap.get(getString(R.string.field_user_id)).toString());\r\n\r\n                        photo.setDc(objectMap.get(getString(R.string.field_date_createdr)).toString());\r\n\r\n                        photo.setIp(objectMap.get(getString(R.string.field_image_path)).toString());\r\n\r\n                        if (objectMap.get(getString(R.string.thumbnail)) != null)\r\n                            photo.setT(objectMap.get(getString(R.string.thumbnail)).toString());\r\n                        photo.setTy(objectMap.get(getString(R.string.type)).toString());\r\n\r\n                        ArrayList<Comment> comments = new ArrayList<>();\r\n\r\n                        for (DataSnapshot dSnapshot : singleSnapshot\r\n                                .child(getString(R.string.field_comment)).getChildren()) {\r\n                            Comment comment = new Comment();\r\n                            comment.setUi(dSnapshot.getValue(Comment.class).getUi());\r\n                            comment.setC(dSnapshot.getValue(Comment.class).getC());\r\n                            comment.setDc(dSnapshot.getValue(Comment.class).getDc());\r\n                            comments.add(comment);\r\n\r\n                        }\r\n                        photo.setComments(comments);\r\n//                    add photo to mPhotos list\r\n                        mPhotos.add(photo);\r\n\r\n\r\n\r\n                    } else {\r\n\r\n//                        if Photo id doesnt exist it means it has been deleted.So remove the Photo from mPhotos List\r\n\r\n                        ArrayList<Photo> l = new ArrayList<>(mPhotos);\r\n                        for (Photo a : l) {\r\n                            if (a.getPi().equals(key.get(finalX))) {\r\n                                mPhotos.remove(a);\r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                    if(finalX==key.size()) {\r\n                        //                    sort mPhotos\r\n                        Collections.sort(mPhotos, new Comparator<Photo>() {\r\n                            @Override\r\n                            public int compare(Photo o1, Photo o2) {\r\n                                return o2.getDc().compareTo(o1.getDc());\r\n                            }\r\n                        });\r\n                        //                add updated list to Shared Preference\r\n                        SharedPreferences.Editor editor = sp.edit();\r\n                        String json = gson.toJson(mPhotos);\r\n                        editor.putString(\"pl\", json);\r\n                        editor.apply();\r\n                    }\r\n//                remove update_post node from database\r\n                    removeUpdate();\r\n//                  display post\r\n                    displayPhotos();\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    Log.d(TAG, \"Query Cancelled\");\r\n                }\r\n            });\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void removeUpdate() {\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(getString(R.string.post_updates))\r\n                .removeValue();\r\n    }\r\n\r\n    private void getUserInfo(String userid, CircleImageView storyseen, CircleImageView story, TextView username) {\r\n\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_users))\r\n                .child(userid)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        users user = dataSnapshot.getValue(users.class);\r\n                        Glide.with(getActivity().getApplicationContext())\r\n                                .load(user.getPp())\r\n                                .placeholder(R.drawable.load)\r\n                                .error(R.drawable.default_image2)\r\n                                .thumbnail(0.25f)\r\n                                .into(story);\r\n\r\n                        Glide.with(getActivity().getApplicationContext())\r\n                                .load(user.getPp())\r\n                                .placeholder(R.drawable.load)\r\n                                .error(R.drawable.default_image2)\r\n                                .thumbnail(0.25f)\r\n                                .into(storyseen);\r\n\r\n                        username.setText(user.getU());\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    private void seenStory(String userid) {\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_promote))\r\n                .child(userid)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        if (dataSnapshot.exists()) {\r\n                            promoteLayout.setVisibility(View.VISIBLE);\r\n                            Log.d(TAG, \"onDataChange: visible\");\r\n\r\n                            long l = dataSnapshot.getChildrenCount();\r\n                            int t = 0;\r\n                            for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n\r\n                                if ((snapshot.child(getString(R.string.field_view)).child(FirebaseAuth.getInstance()\r\n                                        .getCurrentUser().getUid()).exists())) {\r\n                                    t++;\r\n                                }\r\n                            }\r\n                            if (t == l) {\r\n\r\n                                storySeen.setVisibility(View.VISIBLE);\r\n                                story.setVisibility(View.GONE);\r\n\r\n                            } else if (t == 0) {\r\n                                storySeen.setVisibility(View.GONE);\r\n                                story.setVisibility(View.VISIBLE);\r\n\r\n                            }\r\n                        }\r\n                        else{\r\n                         promoteLayout.setVisibility(View.GONE);\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    private void getFollowingFilltered(String domain) {\r\n\r\n        DatabaseReference reference2 = FirebaseDatabase.getInstance().getReference();\r\n\r\n        reference2\r\n                .child(getString(R.string.dbname_users))\r\n\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        for (int i = 0; i < mFollowing.size(); i++) {\r\n\r\n\r\n                            if (dataSnapshot.child(mFollowing.get(i))\r\n                                    .child(getString(R.string.field_domain)).getValue().equals(domain)) {\r\n                                mFollowing1.add(mFollowing.get(i));\r\n                            }\r\n                            if (i == mFollowing.size() - 1) {\r\n                                getfilterPhotos(mFollowing1);\r\n                            }\r\n\r\n                        }\r\n\r\n//                        Add newly Created ArrayList to Shared Preferences\r\n                        SharedPreferences.Editor editor = sp.edit();\r\n                        String json = gson.toJson(mFollowing1);\r\n                        editor.putString(\"ffl\", json);\r\n                        editor.apply();\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n\r\n    private void getfilterPhotos(ArrayList<String> mFollowing1) {\r\n        ArrayList<Photo> list = new ArrayList<>();\r\n        for (int x = 0; x < mFollowing1.size(); x++) {\r\n\r\n            for (Photo a : mPhotos) {\r\n                if (a.getUi().equals(mFollowing1.get(x))) {\r\n                    list.add(a);\r\n                }\r\n            }\r\n        }\r\n        mPhotos.clear();\r\n        mPhotos.addAll(list);\r\n        list.clear();\r\n        Collections.sort(mPhotos, new Comparator<Photo>() {\r\n            @Override\r\n            public int compare(Photo o1, Photo o2) {\r\n                return o2.getDc().compareTo(o1.getDc());\r\n            }\r\n        });\r\n        displayPhotos();\r\n    }\r\n\r\n    private void getcontest() {\r\n        if (contestlist == null || contestlist.size() == 0) {\r\n\r\n            DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n\r\n            for (int i = 0; i < mFollowing.size(); i++) {\r\n\r\n                final int count = i;\r\n\r\n\r\n                Query query = reference\r\n                        .child(getString(R.string.dbname_contestlist))\r\n                        .orderByChild(getString(R.string.field_user_id))\r\n                        .equalTo(mFollowing.get(i));\r\n                query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n\r\n                        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                            ContestDetail contestDetail = snapshot.getValue(ContestDetail.class);\r\n                            if (!contestDetail.getR()) {\r\n                                contestlist.add(contestDetail);\r\n                            }\r\n                        }\r\n\r\n                        Collections.sort(contestlist, new Comparator<ContestDetail>() {\r\n                            @Override\r\n                            public int compare(ContestDetail o1, ContestDetail o2) {\r\n                                return o2.getTim().compareTo(o1.getTim());\r\n                            }\r\n                        });\r\n//                Add newly Created ArrayList to Shared Preferences\r\n                        SharedPreferences.Editor editor = sp.edit();\r\n                        String json = gson.toJson(contestlist);\r\n                        editor.putString(\"cl\", json);\r\n                        editor.apply();\r\n\r\n                        contestUpcoming = new AdapterMainFeedContest(getContext(), contestlist);\r\n                        contestUpcoming.setHasStableIds(true);\r\n\r\n                        contestRv.setAdapter(contestUpcoming);\r\n\r\n                        contestUpcoming.notifyDataSetChanged();\r\n                        flag3 = true;\r\n\r\n                    }\r\n\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            if (mFollowing.size() == 0) {\r\n                flag3 = true;\r\n            }\r\n        } else {\r\n            checkContestUpdate();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private void getFollowing() {\r\n\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n        Query query = reference\r\n                .child(getString(R.string.dbname_following))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if (dataSnapshot.exists()) {\r\n                    int x = 0;\r\n                    for (DataSnapshot singleSnapshot : dataSnapshot.getChildren()) {\r\n                        x++;\r\n                        Log.d(TAG, \"getFollowerListFromSP: 2\");\r\n                        mFollowing.add(singleSnapshot.getKey());\r\n                        if (x == dataSnapshot.getChildrenCount()) {\r\n\r\n//                        Add newly Created ArrayList to Shared Preferences\r\n                            SharedPreferences.Editor editor = sp.edit();\r\n                            String json = gson.toJson(mFollowing);\r\n                            editor.putString(\"fl\", json);\r\n                            editor.apply();\r\n\r\n                            getPostListFromSP();\r\n                            getcontest();\r\n                            getStory();\r\n                        }\r\n                    }\r\n\r\n\r\n                } else {\r\n\r\n//                        Add newly Created ArrayList to Shared Preferences\r\n                    SharedPreferences.Editor editor = sp.edit();\r\n                    String json = gson.toJson(mFollowing);\r\n                    editor.putString(\"fl\", json);\r\n                    editor.apply();\r\n\r\n                    getPostListFromSP();\r\n                    getcontest();\r\n                    getStory();\r\n                }\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                Log.d(TAG, \"Query Cancelled\");\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void getStory() {\r\n        promotelist.clear();\r\n        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n\r\n        for (int i = 0; i < mFollowing.size(); i++) {\r\n\r\n            final int count = i;\r\n            final long delete = 0;\r\n\r\n            Query query = reference\r\n                    .child(getString(R.string.dbname_promote))\r\n                    .child(mFollowing.get(i));\r\n            query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                    Long timestamp = System.currentTimeMillis();\r\n                    if (dataSnapshot.exists()) {\r\n                        promotelist.add(mFollowing.get(count));\r\n                        long child1 = dataSnapshot.getChildrenCount();\r\n                        long delete = 0;\r\n\r\n                        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                            Promote promote = snapshot.getValue(Promote.class);\r\n                            if (timestamp >= Long.parseLong(promote.getTis()) && timestamp <= Long.parseLong(promote.getTie())) {\r\n                            } else {\r\n                                DatabaseReference reference1 = FirebaseDatabase.getInstance().getReference();\r\n\r\n                                reference1\r\n                                        .child(getString(R.string.dbname_promote))\r\n                                        .child(mFollowing.get(count))\r\n                                        .child(snapshot.getKey())\r\n                                        .removeValue();\r\n                                delete++;\r\n                            }\r\n                        }\r\n                        if (delete == child1) {\r\n                            promotelist.remove(mFollowing.get(count));\r\n                        }\r\n\r\n\r\n                        promote.notifyDataSetChanged();\r\n                        flag2 = true;\r\n                    } else {\r\n                        promote.notifyDataSetChanged();\r\n                        flag2 = true;\r\n                    }\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n        if (mFollowing.size() == 0) {\r\n            flag2 = true;\r\n        }\r\n    }\r\n\r\n\r\n    private void getPhotos() {\r\n        if (mPhotos == null) {\r\n            mPhotos = new ArrayList<>();\r\n            DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n            for (int i = 0; i < mFollowing.size(); i++) {\r\n\r\n                final int count = i;\r\n\r\n                Query query = reference\r\n                        .child(getString(R.string.dbname_user_photos))\r\n                        .child(mFollowing.get(i));\r\n\r\n                query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        long x = 0;\r\n                        for (DataSnapshot singleSnapshot : dataSnapshot.getChildren()) {\r\n                            x++;\r\n                            Log.d(TAG, \"getFollowerListFromSP: 4\");\r\n\r\n                            Photo photo = new Photo();\r\n                            Map<String, Object> objectMap = (HashMap<String, Object>) singleSnapshot.getValue();\r\n                            photo.setCap(objectMap.get(getString(R.string.field_caption)).toString());\r\n\r\n                            photo.setTg(objectMap.get(getString(R.string.field_tags)).toString());\r\n\r\n                            photo.setPi(objectMap.get(getString(R.string.field_photo_id)).toString());\r\n\r\n                            photo.setUi(objectMap.get(getString(R.string.field_user_id)).toString());\r\n\r\n                            photo.setDc(objectMap.get(getString(R.string.field_date_createdr)).toString());\r\n\r\n                            photo.setIp(objectMap.get(getString(R.string.field_image_path)).toString());\r\n\r\n\r\n                            if (objectMap.get(getString(R.string.thumbnail)) != null) {\r\n                                photo.setT(objectMap.get(getString(R.string.thumbnail)).toString());\r\n\r\n                            }\r\n                            photo.setTy(objectMap.get(getString(R.string.type)).toString());\r\n\r\n                            ArrayList<Comment> comments = new ArrayList<>();\r\n\r\n                            for (DataSnapshot dSnapshot : singleSnapshot\r\n                                    .child(getString(R.string.field_comment)).getChildren()) {\r\n                                Comment comment = new Comment();\r\n                                comment.setUi(dSnapshot.getValue(Comment.class).getUi());\r\n                                comment.setC(dSnapshot.getValue(Comment.class).getC());\r\n                                comment.setDc(dSnapshot.getValue(Comment.class).getDc());\r\n                                comments.add(comment);\r\n\r\n                            }\r\n                            photo.setComments(comments);\r\n                            mPhotos.add(photo);\r\n//                        sort array List\r\n                            Collections.sort(mPhotos, new Comparator<Photo>() {\r\n                                @Override\r\n                                public int compare(Photo o1, Photo o2) {\r\n                                    return o2.getDc().compareTo(o1.getDc());\r\n                                }\r\n                            });\r\n\r\n//                        Add newly Created ArrayList to Shared Preferences\r\n                            SharedPreferences.Editor editor = sp.edit();\r\n                            String json = gson.toJson(mPhotos);\r\n                            editor.putString(\"pl\", json);\r\n                            editor.apply();\r\n\r\n                        }\r\n                        if (count >= mFollowing.size() - 1) {\r\n//                        call display photos\r\n                            displayPhotos();\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                        Log.d(TAG, \"Query Cancelled\");\r\n                    }\r\n                });\r\n\r\n\r\n            }\r\n            if (mFollowing.size() == 0) {\r\n                //                        call display photos\r\n                displayPhotos();\r\n            }\r\n        } else {\r\n            checkPostUpdate();\r\n        }\r\n\r\n    }\r\n\r\n    private void displayPhotos() {\r\n        noPost.setVisibility(View.GONE);\r\n\r\n        Log.d(TAG, \"display first 10 photo\");\r\n        flag1 = true;\r\n        mPaginatedPhotos = new ArrayList<>();\r\n        if (mPhotos != null && mPhotos.size() != 0) {\r\n\r\n            try {\r\n\r\n                int iteration = mPhotos.size();\r\n                if (iteration > 10) {\r\n                    iteration = 10;\r\n                }\r\n                mResults = 10;\r\n                for (int i = 0; i < iteration; i++) {\r\n                    mPaginatedPhotos.add(mPhotos.get(i));\r\n                }\r\n                Log.d(TAG, \"displayPhotos: sss\" + mPaginatedPhotos);\r\n                mAadapter = new AdapterMainfeed(getContext(), mPaginatedPhotos, ListViewRv, Homefragment.this);\r\n                mAadapter.setHasStableIds(true);\r\n                postReferesh.setRefreshing(false);\r\n                ListViewRv.setAdapter(mAadapter);\r\n\r\n            } catch (NullPointerException e) {\r\n                Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n            } catch (IndexOutOfBoundsException e) {\r\n                Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n            }\r\n\r\n        } else {\r\n            mAadapter = new AdapterMainfeed(getContext(), mPaginatedPhotos, ListViewRv, Homefragment.this);\r\n            mAadapter.setHasStableIds(true);\r\n            postReferesh.setRefreshing(false);\r\n            ListViewRv.setAdapter(mAadapter);\r\n            noPost.setVisibility(View.VISIBLE);\r\n            bottomProgress.setVisibility(View.GONE);\r\n\r\n        }\r\n    }\r\n\r\n    public void displayMorePhotos() {\r\n        Log.d(TAG, \"display next 10 photo\");\r\n\r\n        try {\r\n            if (mPhotos.size() > mResults && mPhotos.size() > 0) {\r\n\r\n                int iterations;\r\n                if (mPhotos.size() > (mResults + 10)) {\r\n                    Log.d(TAG, \"display next 10 photo\");\r\n                    iterations = 10;\r\n                } else {\r\n                    Log.d(TAG, \"display less tha 10 photo\");\r\n                    iterations = mPhotos.size() - mResults;\r\n                }\r\n                for (int i = mResults; i < mResults + iterations; i++) {\r\n                    mPaginatedPhotos.add(mPhotos.get(i));\r\n\r\n                }\r\n                ListViewRv.post(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        postReferesh.setRefreshing(false);\r\n                        mAadapter.notifyItemRangeInserted(mResults, iterations);\r\n                        flag5 = true;\r\n\r\n                    }\r\n                });\r\n                mResults = mResults + iterations;\r\n\r\n\r\n            } else {\r\n                bottomProgress.setVisibility(View.GONE);\r\n\r\n            }\r\n\r\n        } catch (NullPointerException e) {\r\n            Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n        } catch (IndexOutOfBoundsException e) {\r\n            Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onPause() {\r\n        super.onPause();\r\n\r\n        Homefragment obj = new Homefragment();\r\n        obj.releasePlayer();\r\n    }\r\n\r\n    @Override\r\n    public void onDestroy() {\r\n        super.onDestroy();\r\n\r\n        Homefragment obj = new Homefragment();\r\n        obj.releasePlayer();\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/home/Homefragment.java	(revision 39b5c6939a299c6aa89ab4d76f4e8cb422b19e3f)
+++ app/src/main/java/com/orion/orion/home/Homefragment.java	(date 1608185786342)
@@ -1060,7 +1060,7 @@
                             int t = 0;
                             for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
 
-                                if ((snapshot.child(getString(R.string.field_view)).child(FirebaseAuth.getInstance()
+                                if ((snapshot.child(getContext().getString(R.string.field_view)).child(FirebaseAuth.getInstance()
                                         .getCurrentUser().getUid()).exists())) {
                                     t++;
                                 }
