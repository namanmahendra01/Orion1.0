Index: app/src/main/java/com/orion/orion/FansFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.Adapters.AdapterFollowFanAdapter;\r\nimport com.orion.orion.models.ItemFollow;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\npublic class FansFragment extends Fragment {\r\n    private static final String TAG = \"FANS_FRAGMANT\";\r\n    AdapterFollowFanAdapter adapterFollowFanAdapter;\r\n    private DatabaseReference myRef;\r\n    private SwipeRefreshLayout swipeRefreshLayout;\r\n    private TextView noList;\r\n    private ArrayList<ItemFollow> mLists;\r\n\r\n    public FansFragment() {\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_users_list, container, false);\r\n\r\n        myRef = FirebaseDatabase.getInstance().getReference();\r\n        swipeRefreshLayout = view.findViewById(R.id.swipeRefresh);\r\n        noList = view.findViewById(R.id.noList);\r\n        RecyclerView mRecyclerView = view.findViewById(R.id.recycler_view);\r\n        mRecyclerView.setHasFixedSize(true);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());\r\n        mRecyclerView.setLayoutManager(linearLayoutManager);\r\n        mLists = new ArrayList<>();\r\n        adapterFollowFanAdapter = new AdapterFollowFanAdapter(getContext(), mLists);\r\n        adapterFollowFanAdapter.setHasStableIds(true);\r\n        mRecyclerView.setAdapter(adapterFollowFanAdapter);\r\n        swipeRefreshLayout.setRefreshing(true);\r\n        swipeRefreshLayout.setColorSchemeResources(\r\n                R.color.scheme2,\r\n                R.color.scheme3,\r\n                R.color.scheme4,\r\n                R.color.scheme5,\r\n                R.color.scheme6,\r\n                R.color.scheme7,\r\n                R.color.scheme8,\r\n                R.color.scheme9,\r\n                R.color.scheme10,\r\n                R.color.scheme11,\r\n                R.color.scheme12\r\n        );\r\n        fetchList();\r\n\r\n        swipeRefreshLayout.setOnRefreshListener(() -> {\r\n            mLists.clear();\r\n            noList.setVisibility(View.GONE);\r\n            fetchList();\r\n        });\r\n        return view;\r\n    }\r\n\r\n    private void fetchList() {\r\n        Query query = myRef.child(getString(R.string.dbname_follower)).child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    for (DataSnapshot singleSnapshot : snapshot.getChildren()) {\r\n                        ItemFollow itemFollow = new ItemFollow();\r\n                        itemFollow.setUserId(singleSnapshot.getKey());\r\n                        itemFollow.setFan(true);\r\n                        addToList(itemFollow);\r\n                    }\r\n                } else {\r\n                    swipeRefreshLayout.setRefreshing(false);\r\n                    noList.setText(\"LOOKS LIKE YOU HAVE NO FANS ¯\\\\_(ツ)_/¯\");\r\n                    noList.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                swipeRefreshLayout.setRefreshing(false);\r\n                noList.setText(\"LOOKS LIKE WE RAN INTO ISSUE ¯\\\\_(ツ)_/¯\");\r\n                noList.setVisibility(View.VISIBLE);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void addToList(ItemFollow itemFollow) {\r\n        Log.d(TAG, \"addToList: started\");\r\n        Query query111 = myRef.child(getString(R.string.dbname_users)).child(itemFollow.getUserId());\r\n        query111.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (snapshot.exists()) {\r\n                    itemFollow.setUsername((String) snapshot.child(getString(R.string.field_username)).getValue());\r\n                    itemFollow.setDisplay_name((String) snapshot.child(getString(R.string.field_display_name)).getValue());\r\n                    itemFollow.setProfileUrl((String) snapshot.child(getString(R.string.profile_photo)).getValue());\r\n                    mLists.add(itemFollow);\r\n                    noList.setVisibility(View.GONE);\r\n                    adapterFollowFanAdapter.notifyDataSetChanged();\r\n                } else\r\n                    FirebaseCrashlytics.getInstance().log(\"Failed to find data followers database\");\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                swipeRefreshLayout.setRefreshing(false);\r\n                FirebaseCrashlytics.getInstance().log(\"Failed to fetch user data from followers database\" + error.getMessage());\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/FansFragment.java	(revision 39c9e9a0ce8e42c87750f9ff92d955bd24afe60c)
+++ app/src/main/java/com/orion/orion/FansFragment.java	(date 1605691800326)
@@ -88,7 +88,21 @@
                         ItemFollow itemFollow = new ItemFollow();
                         itemFollow.setUserId(singleSnapshot.getKey());
                         itemFollow.setFan(true);
-                        addToList(itemFollow);
+                        Query query1 = myRef.child(getString(R.string.dbname_following)).child(FirebaseAuth.getInstance().getCurrentUser().getUid()).child(itemFollow.getUserId());
+                        query1.addListenerForSingleValueEvent(new ValueEventListener() {
+                            @Override
+                            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                if (snapshot.exists()) itemFollow.setFollowing(true);
+                                addToList(itemFollow);
+                            }
+
+                            @Override
+                            public void onCancelled(@NonNull DatabaseError error) {
+                                swipeRefreshLayout.setRefreshing(false);
+                                noList.setText("LOOKS LIKE WE RAN INTO ISSUE ¯\\_(ツ)_/¯");
+                                noList.setVisibility(View.VISIBLE);
+                            }
+                        });
                     }
                 } else {
                     swipeRefreshLayout.setRefreshing(false);
