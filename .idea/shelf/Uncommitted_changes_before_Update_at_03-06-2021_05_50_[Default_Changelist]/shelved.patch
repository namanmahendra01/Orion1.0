Index: app/src/main/java/com/orion/orion/contest/create/CreateForm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.contest.create;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.annotation.TargetApi;\r\nimport android.app.Activity;\r\nimport android.app.DatePickerDialog;\r\nimport android.content.ContentUris;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.os.Handler;\r\nimport android.provider.DocumentsContract;\r\nimport android.provider.MediaStore;\r\nimport android.text.Editable;\r\nimport android.text.InputFilter;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.SwitchCompat;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.daimajia.androidanimations.library.Techniques;\r\nimport com.daimajia.androidanimations.library.YoYo;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.dialogs.BottomSheetDomain;\r\nimport com.orion.orion.login.LoginActivity;\r\nimport com.orion.orion.util.Permissions;\r\n\r\nimport java.io.File;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.Objects;\r\n\r\nimport static com.orion.orion.profile.ProfileActivity.VERIFY_PERMISSION_REQUEST;\r\nimport static com.orion.orion.util.FileUtils.generateFileName;\r\nimport static com.orion.orion.util.FileUtils.getDocumentCacheDir;\r\nimport static com.orion.orion.util.FileUtils.getFileName;\r\nimport static com.orion.orion.util.FileUtils.saveFileFromUri;\r\n\r\n\r\npublic class CreateForm extends AppCompatActivity implements BottomSheetDomain.BottomSheetListener {\r\n    private static final String TAG = \"CreateForm\";\r\n    private static final int ANIMATION_DURATION = 100;\r\n    boolean isKitKat;\r\n    int layoutActive = 1;\r\n\r\n    private TextView mTopBarTitle;\r\n\r\n    //Widgets\r\n    private ScrollView layout1;\r\n    private ScrollView layout2;\r\n    private ScrollView layout3;\r\n    private View active1;\r\n    private View active2;\r\n    private View active3;\r\n    private Button previousButton;\r\n    private Button nextButton;\r\n\r\n    private ImageView backArrow;\r\n\r\n    //layout1 widgets\r\n    private ImageView poster;\r\n    private LinearLayout selectPoster;\r\n    private EditText eventTitle;\r\n    private EditText hostedBy;\r\n    private EditText description;\r\n    private RadioGroup AllStudents;\r\n    private RadioButton all;\r\n    private RadioButton students;\r\n    private RadioGroup PictureVideoDocument;\r\n    private RadioButton picture;\r\n    private RadioButton mediaLink;\r\n\r\n    private TextView selectDomain;\r\n\r\n\r\n    //layout 2\r\n    private RadioGroup VotingType;\r\n    private RadioButton Public;\r\n    private RadioButton Jury;\r\n    private RadioButton PublicAndJury;\r\n    private LinearLayout jurySelectionContainer;\r\n    private LinearLayout jury1Container;\r\n    private LinearLayout jury2Container;\r\n    private LinearLayout jury3Container;\r\n    private LinearLayout publicVotingContainer;\r\n    private LinearLayout publicVotingContainerDates;\r\n    private RadioGroup JuryNumber;\r\n    private RadioButton one;\r\n    private RadioButton two;\r\n    private RadioButton three;\r\n    private EditText mDisplayDateRB;\r\n    private EditText mDisplayDateRE;\r\n    private EditText mDisplayDateVB;\r\n    private EditText mDisplayDateVE;\r\n    private EditText mDisplayDateWin;\r\n    private DatePickerDialog.OnDateSetListener mDateSetListener;\r\n    private DatePickerDialog.OnDateSetListener mDateSetListener2;\r\n    private DatePickerDialog.OnDateSetListener mDateSetListener3;\r\n    private DatePickerDialog.OnDateSetListener mDateSetListener4;\r\n    private DatePickerDialog.OnDateSetListener mDateSetListener5;\r\n    private EditText juryName1;\r\n    private EditText juryName2;\r\n    private EditText juryName3;\r\n    private ImageView j1Checked;\r\n    private ImageView j2Checked;\r\n    private ImageView j3Checked;\r\n\r\n    //layout3 widgets\r\n    private SwitchCompat toggleLimitedNoOfParticipants;\r\n    private EditText mLimitedNoOfParticipants;\r\n    private SwitchCompat toggleEntryFees;\r\n    private EditText mEntryFees;\r\n    private SwitchCompat togglePrize;\r\n    private LinearLayout PH;\r\n    private LinearLayout P1;\r\n    private LinearLayout P2;\r\n    private LinearLayout P3;\r\n    private EditText firstPrize;\r\n    private EditText secondPrize;\r\n    private EditText thirdPrize;\r\n    private TextView totalPrize;\r\n    private EditText extraRules;\r\n    private EditText exraQuery;\r\n\r\n\r\n    //Values\r\n    private int selectedImage;\r\n    private String imgurl = \"\";\r\n    private String posterLink = \"\";\r\n    private String title;\r\n    private String hosted;\r\n    private String des;\r\n    private String openFor = \"\";\r\n    private String fileType = \"\";\r\n    private String domain = \"\";\r\n    private String votingType = \"\";\r\n    private String noOfJury = \"\";\r\n    private String JuryName1 = \"\";\r\n    private String JuryName2 = \"\";\r\n    private String JuryName3 = \"\";\r\n    private String date1 = \"\";\r\n    private String date2 = \"\";\r\n    private String date3 = \"\";\r\n    private String date4 = \"\";\r\n    private String date5 = \"\";\r\n    private String participantType = \"Unlimited\";\r\n    private String noOfParticipants = \"\";\r\n    private String fees = \"\";\r\n    private String prizeMoney = \"No\";\r\n    private String prizeFirst = \"\";\r\n    private String prizeSecond = \"\";\r\n    private String prizeThird = \"\";\r\n    private String prizeTotal = \"\";\r\n    private String extraRule = \"\";\r\n\r\n\r\n    //firebase\r\n    private Context mContext;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private FirebaseUser mUser;\r\n\r\n\r\n    public static boolean isDateAfter(String startDate, String endDate) {\r\n        try {\r\n            String myFormatString = \"dd-M-yyyy\"; // for example\r\n            @SuppressLint(\"SimpleDateFormat\") SimpleDateFormat df = new SimpleDateFormat(myFormatString);\r\n            Date date1 = df.parse(endDate);\r\n            Date startingDate = df.parse(startDate);\r\n            assert date1 != null;\r\n            return date1.after(startingDate);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private void disableEmoji() {\r\n        InputFilter emojiFilter = (source, start, end, dest, dstart, dend) -> {\r\n            for (int index = start; index < end - 1; index++) {\r\n                int type = Character.getType(source.charAt(index));\r\n                if (type == Character.SURROGATE) return \"\";\r\n            }\r\n            return null;\r\n        };\r\n        eventTitle.setFilters(new InputFilter[]{emojiFilter});\r\n        hostedBy.setFilters(new InputFilter[]{emojiFilter});\r\n        description.setFilters(new InputFilter[]{emojiFilter});\r\n        juryName1.setFilters(new InputFilter[]{emojiFilter});\r\n        juryName2.setFilters(new InputFilter[]{emojiFilter});\r\n        juryName3.setFilters(new InputFilter[]{emojiFilter});\r\n        firstPrize.setFilters(new InputFilter[]{emojiFilter});\r\n        secondPrize.setFilters(new InputFilter[]{emojiFilter});\r\n        thirdPrize.setFilters(new InputFilter[]{emojiFilter});\r\n        totalPrize.setFilters(new InputFilter[]{emojiFilter});\r\n        extraRules.setFilters(new InputFilter[]{emojiFilter});\r\n    }\r\n\r\n    public static void hideKeyboardFrom(Context context, View view) {\r\n        InputMethodManager imm = (InputMethodManager) context.getSystemService(Activity.INPUT_METHOD_SERVICE);\r\n        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onButtonClicked(String text) {\r\n        domain = text;\r\n        selectDomain.setText(text);\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(\"Are you sure\")\r\n                .setMessage(\"You will discard all the changes you made?\")\r\n                .setCancelable(false)\r\n                .setPositiveButton(\"Yes\", (dialog, id) -> finish())\r\n                .setNegativeButton(\"No\", (dialog, id) -> dialog.cancel())\r\n                .show();\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_create_contest);\r\n\r\n        mContext = CreateForm.this;\r\n        mTopBarTitle = findViewById(R.id.titleTopBar);\r\n        mTopBarTitle.setText(\"Create Contest\");\r\n        setupFirebaseAuth();\r\n        initializeWidgets();\r\n        disableEmoji();\r\n        layout1.setOnClickListener(v -> hideKeyboardFrom(mContext, layout1));\r\n        layout2.setOnClickListener(v -> hideKeyboardFrom(mContext, layout2));\r\n        layout3.setOnClickListener(v -> hideKeyboardFrom(mContext, layout3));\r\n        backArrow.setOnClickListener(v -> {\r\n            AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n            builder.setTitle(\"Are you sure\")\r\n                    .setMessage(\"You will discard all the changes you made?\")\r\n                    .setCancelable(false)\r\n                    .setPositiveButton(\"Yes\", (dialog, id) -> finish())\r\n                    .setNegativeButton(\"No\", (dialog, id) -> dialog.cancel())\r\n                    .show();\r\n        });\r\n        selectPoster.setOnClickListener(v -> {\r\n            selectedImage = 1;\r\n            if (checkPermissionArray(Permissions.PERMISSIONS)) {\r\n                isKitKat = true;\r\n                Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);\r\n                intent.addCategory(Intent.CATEGORY_OPENABLE);\r\n                intent.setType(\"image/*\");\r\n                startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), 1);\r\n            } else verifyPermission(Permissions.PERMISSIONS);\r\n        });\r\n        AllStudents.setOnCheckedChangeListener((group, checkedId) -> {\r\n            hideKeyboardFrom(mContext, AllStudents);\r\n            for (int i = 0; i < group.getChildCount(); i++) {\r\n                if (all.getId() == checkedId) openFor = all.getText().toString();\r\n                if (students.getId() == checkedId) openFor = students.getText().toString();\r\n            }\r\n        });\r\n        PictureVideoDocument.setOnCheckedChangeListener((group, checkedId) -> {\r\n            hideKeyboardFrom(mContext, PictureVideoDocument);\r\n            for (int i = 0; i < group.getChildCount(); i++) {\r\n                if (picture.getId() == checkedId) {\r\n                    fileType = picture.getText().toString();\r\n                }\r\n                if (mediaLink.getId() == checkedId) {\r\n                    fileType = mediaLink.getText().toString();\r\n                }\r\n\r\n            }\r\n        });\r\n        selectDomain.setOnClickListener(v -> {\r\n            hideKeyboardFrom(mContext, selectDomain);\r\n            BottomSheetDomain bottomSheetDomain = new BottomSheetDomain();\r\n            bottomSheetDomain.show(getSupportFragmentManager(), \"Domain Selection\");\r\n        });\r\n        VotingType.setOnCheckedChangeListener((group, checkedId) -> {\r\n            for (int i = 0; i < group.getChildCount(); i++) {\r\n                if (Public.getId() == checkedId) {\r\n                    votingType = Public.getText().toString();\r\n\r\n                    Public.setClickable(false);\r\n                    Jury.setClickable(true);\r\n                    PublicAndJury.setClickable(true);\r\n                    Jury.setChecked(false);\r\n                    PublicAndJury.setChecked(false);\r\n                    one.setChecked(false);\r\n                    two.setChecked(false);\r\n                    three.setChecked(false);\r\n\r\n                    noOfJury =\"\";\r\n                    juryName1.setText(\"\");\r\n                    JuryName1=\"\";\r\n                    juryName2.setText(\"\");\r\n                    JuryName2=\"\";\r\n                    juryName3.setText(\"\");\r\n                    JuryName3=\"\";\r\n\r\n                    if (jurySelectionContainer.getVisibility() == View.VISIBLE) {\r\n                        YoYo.with(Techniques.FadeOutUp).duration(ANIMATION_DURATION).playOn(jurySelectionContainer);\r\n                        jurySelectionContainer.setVisibility(View.GONE);\r\n                        YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury1Container);\r\n                        YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury2Container);\r\n                        YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury3Container);\r\n                        new Handler()\r\n                                .postDelayed(() -> {\r\n                                    jury1Container.setVisibility(View.GONE);\r\n                                    jury2Container.setVisibility(View.GONE);\r\n                                    jury3Container.setVisibility(View.GONE);\r\n                                }, ANIMATION_DURATION);\r\n                    }\r\n                    if (publicVotingContainer.getVisibility() == View.GONE) {\r\n                        publicVotingContainer.setVisibility(View.VISIBLE);\r\n                        publicVotingContainerDates.setVisibility(View.VISIBLE);\r\n                        YoYo.with(Techniques.FadeInDown).duration(ANIMATION_DURATION).playOn(publicVotingContainer);\r\n                        YoYo.with(Techniques.FadeInDown).duration(ANIMATION_DURATION).playOn(publicVotingContainerDates);\r\n                    }\r\n                }\r\n                else if (Jury.getId() == checkedId) {\r\n                    votingType = Jury.getText().toString();\r\n\r\n                    Public.setClickable(true);\r\n                    Jury.setClickable(false);\r\n                    PublicAndJury.setClickable(true);\r\n                    Public.setChecked(false);\r\n                    PublicAndJury.setChecked(false);\r\n                    one.setChecked(false);\r\n                    two.setChecked(false);\r\n                    three.setChecked(false);\r\n\r\n                    noOfJury =\"\";\r\n                    juryName1.setText(\"\");\r\n                    JuryName1=\"\";\r\n                    juryName2.setText(\"\");\r\n                    JuryName2=\"\";\r\n                    juryName3.setText(\"\");\r\n                    JuryName3=\"\";\r\n                    mDisplayDateVB.setText(\"\");\r\n                    mDisplayDateVE.setText(\"\");\r\n                    date3=\"\";\r\n                    date4=\"\";\r\n\r\n                    jury1Container.setVisibility(View.GONE);\r\n                    jury2Container.setVisibility(View.GONE);\r\n                    jury3Container.setVisibility(View.GONE);\r\n\r\n                    if (jurySelectionContainer.getVisibility() == View.GONE) {\r\n                        jurySelectionContainer.setVisibility(View.VISIBLE);\r\n                        YoYo.with(Techniques.FadeInDown).duration(ANIMATION_DURATION).playOn(jurySelectionContainer);\r\n                    }\r\n                    if (publicVotingContainer.getVisibility() == View.VISIBLE) {\r\n                        YoYo.with(Techniques.FadeOutUp).duration(ANIMATION_DURATION).playOn(publicVotingContainer);\r\n                        YoYo.with(Techniques.FadeOutUp).duration(ANIMATION_DURATION).playOn(publicVotingContainerDates);\r\n                        new Handler().postDelayed(() -> {\r\n                            publicVotingContainer.setVisibility(View.GONE);\r\n                            publicVotingContainerDates.setVisibility(View.GONE);\r\n                        }, ANIMATION_DURATION);\r\n                    }\r\n                    if (noOfJury.equals(\"1\")) {\r\n                        noOfJury = one.getText().toString();\r\n                        JuryName2=\"\";\r\n                        JuryName3=\"\";\r\n                        if (jury1Container.getVisibility() == View.GONE) {\r\n                            jury1Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury1Container);\r\n                        }\r\n                        if (jury2Container.getVisibility() == View.VISIBLE) {\r\n                            YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury2Container);\r\n                            new Handler().postDelayed(() -> jury2Container.setVisibility(View.GONE), ANIMATION_DURATION);\r\n                        }\r\n                        if (jury3Container.getVisibility() == View.VISIBLE) {\r\n                            YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury3Container);\r\n                            new Handler().postDelayed(() -> jury3Container.setVisibility(View.GONE), ANIMATION_DURATION);\r\n                        }\r\n                    }\r\n                    if (noOfJury.equals(\"2\")) {\r\n                        noOfJury = two.getText().toString();\r\n                        JuryName3=\"\";\r\n                        if (jury1Container.getVisibility() == View.GONE) {\r\n                            jury1Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury1Container);\r\n                        }\r\n                        if (jury2Container.getVisibility() == View.GONE) {\r\n                            jury2Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury2Container);\r\n                        }\r\n                        if (jury3Container.getVisibility() == View.VISIBLE) {\r\n                            YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury3Container);\r\n                            new Handler().postDelayed(() -> jury3Container.setVisibility(View.GONE), ANIMATION_DURATION);\r\n                        }\r\n                    }\r\n                    if (noOfJury.equals(\"3\")) {\r\n                        noOfJury = three.getText().toString();\r\n                        if (jury1Container.getVisibility() == View.GONE) {\r\n                            jury1Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury1Container);\r\n                        }\r\n                        if (jury2Container.getVisibility() == View.GONE) {\r\n                            jury2Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury2Container);\r\n                        }\r\n                        if (jury3Container.getVisibility() == View.GONE) {\r\n                            jury3Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury3Container);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    votingType = PublicAndJury.getText().toString();\r\n\r\n                    Public.setClickable(true);\r\n                    Jury.setClickable(true);\r\n                    PublicAndJury.setClickable(false);\r\n                    Jury.setChecked(false);\r\n                    Public.setChecked(false);\r\n                    one.setChecked(false);\r\n                    two.setChecked(false);\r\n                    three.setChecked(false);\r\n\r\n                    noOfJury =\"\";\r\n                    juryName1.setText(\"\");\r\n                    JuryName1=\"\";\r\n                    juryName2.setText(\"\");\r\n                    JuryName2=\"\";\r\n                    juryName3.setText(\"\");\r\n                    JuryName3=\"\";\r\n\r\n                    jury1Container.setVisibility(View.GONE);\r\n                    jury2Container.setVisibility(View.GONE);\r\n                    jury3Container.setVisibility(View.GONE);\r\n\r\n                    if (jurySelectionContainer.getVisibility() == View.GONE) {\r\n                        jurySelectionContainer.setVisibility(View.VISIBLE);\r\n                        YoYo.with(Techniques.FadeInDown).duration(ANIMATION_DURATION).playOn(jurySelectionContainer);\r\n                    }\r\n                    if (publicVotingContainer.getVisibility() == View.GONE) {\r\n                        publicVotingContainer.setVisibility(View.VISIBLE);\r\n                        publicVotingContainerDates.setVisibility(View.VISIBLE);\r\n                        YoYo.with(Techniques.FadeInDown).duration(ANIMATION_DURATION).playOn(publicVotingContainer);\r\n                        YoYo.with(Techniques.FadeInDown).duration(ANIMATION_DURATION).playOn(publicVotingContainerDates);\r\n                    }\r\n                    if (noOfJury.equals(\"1\")) {\r\n                        noOfJury = one.getText().toString();\r\n                        juryName2.setText(\"\");\r\n                        juryName3.setText(\"\");\r\n                        JuryName2=\"\";\r\n                        JuryName3=\"\";\r\n                        if (jury1Container.getVisibility() == View.GONE) {\r\n                            jury1Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury1Container);\r\n                        }\r\n                        if (jury2Container.getVisibility() == View.VISIBLE) {\r\n                            YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury2Container);\r\n                            new Handler().postDelayed(() -> jury2Container.setVisibility(View.GONE), ANIMATION_DURATION);\r\n                        }\r\n                        if (jury2Container.getVisibility() == View.VISIBLE) {\r\n                            YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury2Container);\r\n                            new Handler().postDelayed(() -> jury3Container.setVisibility(View.GONE), ANIMATION_DURATION);\r\n                        }\r\n                    }\r\n                    if (noOfJury.equals(\"2\")) {\r\n                        noOfJury = two.getText().toString();\r\n                        juryName3.setText(\"\");\r\n                        JuryName3=\"\";\r\n                        if (jury1Container.getVisibility() == View.GONE) {\r\n                            jury1Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury1Container);\r\n                        }\r\n                        if (jury2Container.getVisibility() == View.GONE) {\r\n                            jury2Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury2Container);\r\n                        }\r\n                        if (jury3Container.getVisibility() == View.VISIBLE) {\r\n                            YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury3Container);\r\n                            new Handler().postDelayed(() -> jury3Container.setVisibility(View.GONE), ANIMATION_DURATION);\r\n                        }\r\n                    }\r\n                    if (noOfJury.equals(\"3\")) {\r\n                        noOfJury = three.getText().toString();\r\n                        if (jury1Container.getVisibility() == View.GONE) {\r\n                            jury1Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury1Container);\r\n                        }\r\n                        if (jury2Container.getVisibility() == View.GONE) {\r\n                            jury2Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury2Container);\r\n                        }\r\n                        if (jury3Container.getVisibility() == View.GONE) {\r\n                            jury3Container.setVisibility(View.VISIBLE);\r\n                            YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury3Container);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        JuryNumber.setOnCheckedChangeListener((group, checkedId) -> {\r\n            for (int i = 0; i < group.getChildCount(); i++) {\r\n                if (one.getId() == checkedId) {\r\n                    noOfJury = one.getText().toString();\r\n                    juryName2.setText(\"\");\r\n                    juryName3.setText(\"\");\r\n                    JuryName2=\"\";\r\n                    JuryName3=\"\";\r\n                    if (jury1Container.getVisibility() == View.GONE) {\r\n                        jury1Container.setVisibility(View.VISIBLE);\r\n                        YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury1Container);\r\n                    }\r\n                    if (jury2Container.getVisibility() == View.VISIBLE) {\r\n                        YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury2Container);\r\n                        new Handler().postDelayed(() -> jury2Container.setVisibility(View.GONE), ANIMATION_DURATION);\r\n                    }\r\n                    if (jury3Container.getVisibility() == View.VISIBLE) {\r\n                        YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury3Container);\r\n                        new Handler().postDelayed(() -> jury3Container.setVisibility(View.GONE), ANIMATION_DURATION);\r\n                    }\r\n                } else if (two.getId() == checkedId) {\r\n                    noOfJury = two.getText().toString();\r\n                    juryName3.setText(\"\");\r\n                    JuryName3=\"\";\r\n                    if (jury1Container.getVisibility() == View.GONE) {\r\n                        jury1Container.setVisibility(View.VISIBLE);\r\n                        YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury1Container);\r\n                    }\r\n                    if (jury2Container.getVisibility() == View.GONE) {\r\n                        jury2Container.setVisibility(View.VISIBLE);\r\n                        YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury2Container);\r\n                    }\r\n                    if (jury3Container.getVisibility() == View.VISIBLE) {\r\n                        YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(jury3Container);\r\n                        new Handler().postDelayed(() -> jury3Container.setVisibility(View.GONE), ANIMATION_DURATION);\r\n                    }\r\n                } else {\r\n                    noOfJury = three.getText().toString();\r\n                    if (jury1Container.getVisibility() == View.GONE) {\r\n                        jury1Container.setVisibility(View.VISIBLE);\r\n                        YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury1Container);\r\n                    }\r\n                    if (jury2Container.getVisibility() == View.GONE) {\r\n                        jury2Container.setVisibility(View.VISIBLE);\r\n                        YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury2Container);\r\n                    }\r\n                    if (jury3Container.getVisibility() == View.GONE) {\r\n                        jury3Container.setVisibility(View.VISIBLE);\r\n                        YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(jury3Container);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        juryName1.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                juryName1.setTextColor(Color.BLACK);\r\n                String username = juryName1.getText().toString();\r\n                DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                Query query = db.child(getString(R.string.dbname_username)).child(username);\r\n                query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        if (dataSnapshot.exists()) {\r\n                            JuryName1 = juryName1.getText().toString();\r\n                            usernameExist(juryName1);\r\n                            j1Checked.setVisibility(View.VISIBLE);\r\n\r\n                        } else {\r\n                            juryName1.setError(\"Username not found\");\r\n                            j1Checked.setVisibility(View.GONE);\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n        });\r\n        juryName2.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                juryName2.setTextColor(Color.BLACK);\r\n                String username = juryName2.getText().toString();\r\n                DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                Query query = db.child(getString(R.string.dbname_username)).child(username);\r\n                query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        if (dataSnapshot.exists()) {\r\n                            JuryName2 = juryName2.getText().toString();\r\n                            usernameExist(juryName2);\r\n                            j2Checked.setVisibility(View.VISIBLE);\r\n                        } else {\r\n                            juryName2.setError(\"Username not found\");\r\n                            j2Checked.setVisibility(View.GONE);\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n                    }\r\n                });\r\n\r\n            }\r\n        });\r\n        juryName3.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                juryName3.setTextColor(Color.BLACK);\r\n                String username = juryName3.getText().toString();\r\n                DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n                Query query = db.child(getString(R.string.dbname_username)).child(username);\r\n                query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        if (dataSnapshot.exists()) {\r\n                            JuryName3 = juryName3.getText().toString();\r\n                            usernameExist(juryName3);\r\n                            j3Checked.setVisibility(View.VISIBLE);\r\n                        } else {\r\n                            juryName3.setError(\"Username not found\");\r\n                            j3Checked.setVisibility(View.GONE);\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n        });\r\n        mDisplayDateRB.setOnClickListener(v -> {\r\n            Calendar cal1 = Calendar.getInstance();\r\n            int year = cal1.get(Calendar.YEAR);\r\n            int month = cal1.get(Calendar.MONTH);\r\n            int day = cal1.get(Calendar.DAY_OF_MONTH);\r\n            mDateSetListener = (view, year1, month1, dayOfMonth) -> {\r\n                month1 = month1 + 1;\r\n                date1 = dayOfMonth + \"-\" + month1 + \"-\" + year1;\r\n                if ((isDateAfter(date1, date2) || date2.equals(\"\")) && (isDateAfter(date1, date3) || date3.equals(\"\")) && (isDateAfter(date1, date4) || date4.equals(\"\")) && (isDateAfter(date1, date5) || date5.equals(\"\"))) {\r\n                    mDisplayDateRB.setText(date1);\r\n                } else {\r\n                    mDisplayDateRB.setText(\"\");\r\n                    mDisplayDateRB.requestFocus();\r\n                    date1 = \"\";\r\n                }\r\n            };\r\n            DatePickerDialog dialog = new DatePickerDialog(CreateForm.this, android.R.style.Theme_Holo_Light_Dialog_MinWidth, mDateSetListener, year, month, day);\r\n            Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n            dialog.show();\r\n        });\r\n        mDisplayDateRE.setOnClickListener(v -> {\r\n            Calendar cal = Calendar.getInstance();\r\n            int year = cal.get(Calendar.YEAR);\r\n            int month = cal.get(Calendar.MONTH);\r\n            int day = cal.get(Calendar.DAY_OF_MONTH);\r\n            mDateSetListener2 = (view, year14, month14, dayOfMonth) -> {\r\n                month14 = month14 + 1;\r\n                date2 = dayOfMonth + \"-\" + month14 + \"-\" + year14;\r\n                if ((isDateAfter(date1, date2) || date1.equals(\"\")) && (isDateAfter(date2, date3) || date3.equals(\"\")) && (isDateAfter(date2, date4) || date4.equals(\"\")) && (isDateAfter(date2, date5) || date5.equals(\"\"))) {\r\n                    mDisplayDateRE.setText(date2);\r\n                } else {\r\n                    mDisplayDateRE.setText(\"\");\r\n                    mDisplayDateRE.requestFocus();\r\n                    date2 = \"\";\r\n                }\r\n            };\r\n\r\n            DatePickerDialog dialog = new DatePickerDialog(CreateForm.this, android.R.style.Theme_Holo_Light_Dialog_MinWidth, mDateSetListener2, year, month, day);\r\n            Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n            dialog.show();\r\n        });\r\n        mDisplayDateVB.setOnClickListener(v -> {\r\n            Calendar cal = Calendar.getInstance();\r\n            int year = cal.get(Calendar.YEAR);\r\n            int month = cal.get(Calendar.MONTH);\r\n            int day = cal.get(Calendar.DAY_OF_MONTH);\r\n            mDateSetListener3 = (view, year12, month12, dayOfMonth) -> {\r\n                month12 = month12 + 1;\r\n                date3 = dayOfMonth + \"-\" + month12 + \"-\" + year12;\r\n                if ((isDateAfter(date3, date4) || date4.equals(\"\")) && (isDateAfter(date2, date3) || date2.equals(\"\")) && (isDateAfter(date1, date3) || date1.equals(\"\")) && (isDateAfter(date3, date5) || date5.equals(\"\"))) {\r\n                    mDisplayDateVB.setText(date3);\r\n                } else {\r\n                    mDisplayDateVB.setText(\"\");\r\n                    mDisplayDateVB.requestFocus();\r\n                    date3 = \"\";\r\n                }\r\n            };\r\n\r\n            DatePickerDialog dialog = new DatePickerDialog(CreateForm.this, android.R.style.Theme_Holo_Light_Dialog_MinWidth, mDateSetListener3, year, month, day);\r\n            Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n            dialog.show();\r\n        });\r\n        mDisplayDateVE.setOnClickListener(v -> {\r\n            Calendar cal = Calendar.getInstance();\r\n            int year = cal.get(Calendar.YEAR);\r\n            int month = cal.get(Calendar.MONTH);\r\n            int day = cal.get(Calendar.DAY_OF_MONTH);\r\n            mDateSetListener4 = (view, year13, month13, dayOfMonth) -> {\r\n                month13 = month13 + 1;\r\n                date4 = dayOfMonth + \"-\" + month13 + \"-\" + year13;\r\n                if ((isDateAfter(date3, date4) || date3.equals(\"\")) && (isDateAfter(date2, date4) || date2.equals(\"\")) && (isDateAfter(date1, date4) || date1.equals(\"\")) && (isDateAfter(date4, date5) || date5.equals(\"\"))) {\r\n                    mDisplayDateVE.setText(date4);\r\n                } else {\r\n                    mDisplayDateVE.setText(\"\");\r\n                    mDisplayDateVE.requestFocus();\r\n                    date4 = \"\";\r\n                }\r\n            };\r\n\r\n            DatePickerDialog dialog = new DatePickerDialog(CreateForm.this, android.R.style.Theme_Holo_Light_Dialog_MinWidth, mDateSetListener4, year, month, day);\r\n            Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n            dialog.show();\r\n        });\r\n        mDisplayDateWin.setOnClickListener(v -> {\r\n            Calendar cal = Calendar.getInstance();\r\n            int year = cal.get(Calendar.YEAR);\r\n            int month = cal.get(Calendar.MONTH);\r\n            int day = cal.get(Calendar.DAY_OF_MONTH);\r\n            mDateSetListener5 = (view, year15, month15, dayOfMonth) -> {\r\n                month15 = month15 + 1;\r\n                date5 = dayOfMonth + \"-\" + month15 + \"-\" + year15;\r\n                if ((isDateAfter(date1, date5) || date1.equals(\"\")) && (isDateAfter(date2, date5) || date2.equals(\"\")) && (isDateAfter(date3, date5) || date3.equals(\"\")) && (isDateAfter(date4, date5) || date4.equals(\"\"))) {\r\n                    mDisplayDateWin.setText(date5);\r\n                } else {\r\n                    mDisplayDateWin.setText(\"\");\r\n                    mDisplayDateWin.requestFocus();\r\n                    date5 = \"\";\r\n                }\r\n            };\r\n            DatePickerDialog dialog = new DatePickerDialog(CreateForm.this, android.R.style.Theme_Holo_Light_Dialog_MinWidth, mDateSetListener5, year, month, day);\r\n            Objects.requireNonNull(dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n            dialog.show();\r\n        });\r\n        toggleLimitedNoOfParticipants.setOnCheckedChangeListener((buttonView, isChecked) -> {\r\n            if (isChecked) {\r\n                participantType = \"Limited\";\r\n                mLimitedNoOfParticipants.setVisibility(View.VISIBLE);\r\n                YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(mLimitedNoOfParticipants);\r\n            } else {\r\n                participantType = \"Unlimited\";\r\n                mLimitedNoOfParticipants.setText(\"\");\r\n                noOfParticipants=\"\";\r\n                YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(mLimitedNoOfParticipants);\r\n                new Handler().postDelayed(() -> mLimitedNoOfParticipants.setVisibility(View.GONE), ANIMATION_DURATION);\r\n            }\r\n        });\r\n        toggleEntryFees.setOnCheckedChangeListener((buttonView, isChecked) -> {\r\n            if (isChecked) {\r\n                mEntryFees.setVisibility(View.VISIBLE);\r\n                YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(mEntryFees);\r\n                togglePrize.setChecked(true);\r\n                if (P1.getVisibility() == View.GONE) {\r\n                    P1.setVisibility(View.VISIBLE);\r\n                    P2.setVisibility(View.VISIBLE);\r\n                    P3.setVisibility(View.VISIBLE);\r\n                    YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(P1);\r\n                    YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(P2);\r\n                    YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(P3);\r\n                }\r\n                togglePrize.setClickable(false);\r\n                prizeMoney = \"Yes\";\r\n            } else {\r\n                YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(mEntryFees);\r\n                mLimitedNoOfParticipants.setVisibility(View.GONE);\r\n                new Handler().postDelayed(() -> mEntryFees.setVisibility(View.GONE), ANIMATION_DURATION);\r\n                mEntryFees.setText(\"\");\r\n                fees=\"\";\r\n                togglePrize.setClickable(true);\r\n            }\r\n        });\r\n        togglePrize.setOnCheckedChangeListener((buttonView, isChecked) -> {\r\n            if (isChecked) {\r\n                P1.setVisibility(View.VISIBLE);\r\n                P2.setVisibility(View.VISIBLE);\r\n                P3.setVisibility(View.VISIBLE);\r\n                YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(P1);\r\n                YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(P2);\r\n                YoYo.with(Techniques.FadeInLeft).duration(ANIMATION_DURATION).playOn(P3);\r\n                prizeMoney = \"Yes\";\r\n            } else {\r\n                YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(P1);\r\n                YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(P2);\r\n                YoYo.with(Techniques.FadeOutLeft).duration(ANIMATION_DURATION).playOn(P3);\r\n                new Handler().postDelayed(() -> {\r\n                    P1.setVisibility(View.GONE);\r\n                    P2.setVisibility(View.GONE);\r\n                    P3.setVisibility(View.GONE);\r\n                }, ANIMATION_DURATION);\r\n                prizeMoney = \"No\";\r\n                firstPrize.setText(\"\");\r\n                secondPrize.setText(\"\");\r\n                thirdPrize.setText(\"\");\r\n                prizeFirst=\"\";\r\n                prizeSecond=\"\";\r\n                prizeThird=\"\";\r\n            }\r\n        });\r\n        if (firstPrize.getVisibility() == View.VISIBLE || secondPrize.getVisibility() == View.VISIBLE || thirdPrize.getVisibility() == View.VISIBLE) {\r\n            firstPrize.addTextChangedListener(new TextWatcher() {\r\n                @Override\r\n                public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n                }\r\n\r\n                @Override\r\n                public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n\r\n                }\r\n\r\n                @Override\r\n                public void afterTextChanged(Editable s) {\r\n                    if (s.toString().trim().length() > 0) {\r\n                        try {\r\n                            int a = 0;\r\n                            int b = 0;\r\n                            int c = 0;\r\n                            if (!firstPrize.getText().toString().equals(\"\")) {\r\n                                a = Integer.parseInt(firstPrize.getText().toString());\r\n                                prizeFirst = s.toString();\r\n                            }\r\n                            if (!secondPrize.getText().toString().equals(\"\"))\r\n                                b = Integer.parseInt(secondPrize.getText().toString());\r\n                            if (!thirdPrize.getText().toString().equals(\"\"))\r\n                                c = Integer.parseInt(thirdPrize.getText().toString());\r\n                            prizeTotal = String.valueOf(a + b + c);\r\n                            Log.d(TAG, \"afterTextChanged: a\" + a);\r\n                            Log.d(TAG, \"afterTextChanged: b\" + b);\r\n                            Log.d(TAG, \"afterTextChanged: c\" + c);\r\n                            Log.d(TAG, \"afterTextChanged: d\" + prizeTotal);\r\n                            totalPrize.setText(prizeTotal);\r\n                        } catch (NumberFormatException e) {\r\n                            firstPrize.setText(\"0\");\r\n                            Log.e(TAG, \"afterTextChanged: \" + e.getMessage());\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            secondPrize.addTextChangedListener(new TextWatcher() {\r\n                @Override\r\n                public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n                }\r\n\r\n                @Override\r\n                public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                }\r\n\r\n                @Override\r\n                public void afterTextChanged(Editable s) {\r\n                    if (s.toString().trim().length() > 0) {\r\n                        try {\r\n                            int a = 0;\r\n                            int b = 0;\r\n                            int c = 0;\r\n                            if (!firstPrize.getText().toString().equals(\"\"))\r\n                                a = Integer.parseInt(firstPrize.getText().toString());\r\n                            if (!secondPrize.getText().toString().equals(\"\")) {\r\n                                b = Integer.parseInt(secondPrize.getText().toString());\r\n                                prizeSecond = s.toString();\r\n                            }\r\n                            if (!thirdPrize.getText().toString().equals(\"\"))\r\n                                c = Integer.parseInt(thirdPrize.getText().toString());\r\n                            prizeTotal = String.valueOf(a + b + c);\r\n                            Log.d(TAG, \"afterTextChanged: a\" + a);\r\n                            Log.d(TAG, \"afterTextChanged: b\" + b);\r\n                            Log.d(TAG, \"afterTextChanged: c\" + c);\r\n                            Log.d(TAG, \"afterTextChanged: d\" + prizeTotal);\r\n                            totalPrize.setText(prizeTotal);\r\n                        } catch (NumberFormatException e) {\r\n                            secondPrize.setText(\"0\");\r\n                            Log.e(TAG, \"afterTextChanged: \" + e.getMessage());\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            thirdPrize.addTextChangedListener(new TextWatcher() {\r\n                @Override\r\n                public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n                }\r\n\r\n                @Override\r\n                public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                }\r\n\r\n                @Override\r\n                public void afterTextChanged(Editable s) {\r\n                    if (s.toString().trim().length() > 0) {\r\n                        try {\r\n                            int a = 0;\r\n                            int b = 0;\r\n                            int c = 0;\r\n                            if (!firstPrize.getText().toString().equals(\"\"))\r\n                                a = Integer.parseInt(firstPrize.getText().toString());\r\n                            if (!secondPrize.getText().toString().equals(\"\"))\r\n                                b = Integer.parseInt(secondPrize.getText().toString());\r\n                            if (!thirdPrize.getText().toString().equals(\"\")) {\r\n                                c = Integer.parseInt(thirdPrize.getText().toString());\r\n                                prizeThird = s.toString();\r\n                            }\r\n                            prizeTotal = String.valueOf(a + b + c);\r\n                            Log.d(TAG, \"afterTextChanged: a\" + a);\r\n                            Log.d(TAG, \"afterTextChanged: b\" + b);\r\n                            Log.d(TAG, \"afterTextChanged: c\" + c);\r\n                            Log.d(TAG, \"afterTextChanged: d\" + prizeTotal);\r\n                            totalPrize.setText(prizeTotal);\r\n                        } catch (NumberFormatException e) {\r\n                            thirdPrize.setText(\"0\");\r\n                            Log.e(TAG, \"afterTextChanged: \" + e.getMessage());\r\n                        }\r\n                    }\r\n\r\n                }\r\n            });\r\n        }\r\n        previousButton.setOnClickListener(v -> {\r\n            if (layoutActive == 2) {\r\n                layout2.setVisibility(View.GONE);\r\n                layout1.setVisibility(View.VISIBLE);\r\n                active2.setVisibility(View.INVISIBLE);\r\n                active1.setVisibility(View.VISIBLE);\r\n                layoutActive = 1;\r\n            }\r\n            if (layoutActive == 3) {\r\n                layout3.setVisibility(View.GONE);\r\n                layout2.setVisibility(View.VISIBLE);\r\n                active3.setVisibility(View.INVISIBLE);\r\n                active2.setVisibility(View.VISIBLE);\r\n                layoutActive = 2;\r\n            }\r\n        });\r\n        nextButton.setOnClickListener(v -> {\r\n            if (layoutActive == 1) {\r\n                title = eventTitle.getText().toString();\r\n                hosted = hostedBy.getText().toString();\r\n                des = description.getText().toString();\r\n                if (posterLink.equals(\"\") || title.equals(\"\") || hosted.equals(\"\") || des.equals(\"\") || openFor.equals(\"\") || fileType.equals(\"\") || domain.equals(\"\")) {\r\n                    if (posterLink.equals(\"\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(selectPoster);\r\n                        Toast.makeText(mContext, \"Please select a poster\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                    if (title.equals(\"\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(eventTitle);\r\n                        eventTitle.setError(\"Please enter a title\");\r\n                        eventTitle.requestFocus();\r\n                    }\r\n                    if (hosted.equals(\"\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(hostedBy);\r\n                        hostedBy.setError(\"Please enter a username of host\");\r\n                        hostedBy.requestFocus();\r\n                    }\r\n                    if (des.equals(\"\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(description);\r\n                        description.setError(\"Please enter some description at least\");\r\n                        description.requestFocus();\r\n                    }\r\n                    if (openFor.equals(\"\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(AllStudents);\r\n                        Toast.makeText(mContext, \"Please make a selection\", Toast.LENGTH_SHORT).show();\r\n                        AllStudents.requestFocus();\r\n                    }\r\n                    if (fileType.equals(\"\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(PictureVideoDocument);\r\n                        Toast.makeText(mContext, \"Please make a selection\", Toast.LENGTH_SHORT).show();\r\n                        PictureVideoDocument.requestFocus();\r\n                    }\r\n                    if (domain.equals(\"\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(selectDomain);\r\n                        Toast.makeText(mContext, \"Please make a selection\", Toast.LENGTH_SHORT).show();\r\n                        selectDomain.requestFocus();\r\n                    }\r\n                } else {\r\n                    Log.d(TAG, \"onCreate: button clicked\");\r\n                    Log.d(TAG, \"onCreate: \" + title + hosted + des + openFor + fileType);\r\n                    layout1.setVisibility(View.GONE);\r\n                    previousButton.setVisibility(View.VISIBLE);\r\n                    layout2.setVisibility(View.VISIBLE);\r\n                    layoutActive = 2;\r\n                    active1.setVisibility(View.INVISIBLE);\r\n                    active2.setVisibility(View.VISIBLE);\r\n                }\r\n            } else if (layoutActive == 2) {\r\n                if (votingType.equals(\"\") || date1.equals(\"\") || date2.equals(\"\") || date5.equals(\"\")) {\r\n                    if (votingType.equals(\"\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(VotingType);\r\n                        Toast.makeText(mContext, \"Please make a selection\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                    if (date1.equals(\"\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mDisplayDateRB);\r\n                    }\r\n                    if (date2.equals(\"\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mDisplayDateRE);\r\n                    }\r\n                    if (date5.equals(\"\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mDisplayDateWin);\r\n                    }\r\n                } else {\r\n                    if (votingType.equals(\"Public\")) {\r\n                        if (date3.equals(\"\") || date4.equals(\"\")) {\r\n                            if (date3.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mDisplayDateVB);\r\n                            }\r\n                            if (date4.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mDisplayDateVE);\r\n                            }\r\n                        } else {\r\n                            layout3.setVisibility(View.VISIBLE);\r\n                            layout2.setVisibility(View.GONE);\r\n                            active2.setVisibility(View.INVISIBLE);\r\n                            active3.setVisibility(View.VISIBLE);\r\n                            layoutActive = 3;\r\n                        }\r\n                    }\r\n                    if (votingType.equals(\"Jury\")) {\r\n                        if (noOfJury.equals(\"\")) {\r\n                            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(jurySelectionContainer);\r\n                            Toast.makeText(mContext, \"Please make a selection\", Toast.LENGTH_SHORT).show();\r\n                            jurySelectionContainer.requestFocus();\r\n                        } else if (noOfJury.equals(\"1\") && juryName1.getCurrentTextColor() != (Color.GREEN)) {\r\n                            Log.d(TAG, \"onCreate: outer1\");\r\n                            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName1);\r\n                            juryName1.setError(\"Please enter a valid username\");\r\n                            juryName1.requestFocus();\r\n                        } else if (noOfJury.equals(\"2\") && (juryName1.getCurrentTextColor() != (Color.GREEN) || juryName2.getCurrentTextColor() != (Color.GREEN))) {\r\n                            Log.d(TAG, \"onCreate: outer2\");\r\n                            if (JuryName1.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName1);\r\n                            }\r\n                            if (JuryName2.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName2);\r\n                            }\r\n                        } else if (noOfJury.equals(\"3\") && (juryName1.getCurrentTextColor() != (Color.GREEN) || juryName2.getCurrentTextColor() != (Color.GREEN) || juryName3.getCurrentTextColor() != (Color.GREEN))) {\r\n                            Log.d(TAG, \"onCreate: outer3\");\r\n                            if (JuryName1.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName1);\r\n                            }\r\n                            if (JuryName2.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName2);\r\n                            }\r\n                            if (JuryName3.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName3);\r\n                            }\r\n                        }else if(JuryName1.equals(JuryName2)||JuryName1.equals(JuryName3)||JuryName2.equals(JuryName3)) {\r\n                            if (JuryName1.equals(JuryName2)){\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName1);\r\n                                juryName1.setError(\"Jury members must be different!\");\r\n                                juryName1.requestFocus();\r\n\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName2);\r\n                                juryName2.setError(\"Jury members must be different!\");\r\n                                juryName2.requestFocus();\r\n                            }\r\n                            if (JuryName1.equals(JuryName3)){\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName1);\r\n                                juryName1.setError(\"Jury members must be different!\");\r\n                                juryName1.requestFocus();\r\n\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName3);\r\n                                juryName3.setError(\"Jury members must be different!\");\r\n                                juryName3.requestFocus();\r\n                            }\r\n                            if (JuryName3.equals(JuryName2)){\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName3);\r\n                                juryName3.setError(\"Jury members must be different!\");\r\n                                juryName3.requestFocus();\r\n\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName2);\r\n                                juryName2.setError(\"Jury members must be different!\");\r\n                                juryName2.requestFocus();\r\n                            }\r\n\r\n                        }else\r\n                         {\r\n                            layout3.setVisibility(View.VISIBLE);\r\n                            layout2.setVisibility(View.GONE);\r\n                            active2.setVisibility(View.INVISIBLE);\r\n                            active3.setVisibility(View.VISIBLE);\r\n                            layoutActive = 3;\r\n                        }\r\n                    }\r\n                    if (votingType.equals(\"Jury and Public\")) {\r\n                        if (noOfJury.equals(\"\")) {\r\n                            Log.d(TAG, \"onCreate: outerouter\");\r\n                            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(jurySelectionContainer);\r\n                            Toast.makeText(mContext, \"Please make a selection\", Toast.LENGTH_SHORT).show();\r\n                            jurySelectionContainer.requestFocus();\r\n                        } else if (noOfJury.equals(\"1\") && juryName1.getCurrentTextColor() != (Color.GREEN)) {\r\n                            Log.d(TAG, \"onCreate: outer1\");\r\n                            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName1);\r\n                            juryName1.setError(\"Please enter a valid username\");\r\n                            juryName1.requestFocus();\r\n                        } else if (noOfJury.equals(\"2\") && (juryName1.getCurrentTextColor() != (Color.GREEN) || juryName2.getCurrentTextColor() != (Color.GREEN))) {\r\n                            Log.d(TAG, \"onCreate: outer2\");\r\n                            if (JuryName1.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName1);\r\n                            }\r\n                            if (JuryName2.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName2);\r\n                            }\r\n                        } else if (noOfJury.equals(\"3\") && (juryName1.getCurrentTextColor() != (Color.GREEN) || juryName2.getCurrentTextColor() != (Color.GREEN) || juryName3.getCurrentTextColor() != (Color.GREEN))) {\r\n                            Log.d(TAG, \"onCreate: outer3\");\r\n                            if (JuryName1.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName1);\r\n                            }\r\n                            if (JuryName2.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName2);\r\n                            }\r\n                            if (JuryName3.equals(\"\")) {\r\n                                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(juryName3);\r\n                            }\r\n                        } else {\r\n                            if (date3.equals(\"\") || date4.equals(\"\")) {\r\n                                if (date3.equals(\"\")) {\r\n                                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mDisplayDateVB);\r\n                                    mDisplayDateVB.setError(\"Please enter a date\");\r\n                                    mDisplayDateVB.requestFocus();\r\n                                }\r\n                                if (date4.equals(\"\")) {\r\n                                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mDisplayDateVE);\r\n                                    mDisplayDateVE.setError(\"Please enter a date\");\r\n                                    mDisplayDateVE.requestFocus();\r\n                                }\r\n                            } else {\r\n                                layout3.setVisibility(View.VISIBLE);\r\n                                layout2.setVisibility(View.GONE);\r\n                                active2.setVisibility(View.INVISIBLE);\r\n                                active3.setVisibility(View.VISIBLE);\r\n                                layoutActive = 3;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (layoutActive == 3) {\r\n\r\n                if (mLimitedNoOfParticipants.getVisibility() == View.VISIBLE)\r\n                    noOfParticipants = mLimitedNoOfParticipants.getText().toString();\r\n                if (mEntryFees.getVisibility() == View.VISIBLE)\r\n                    fees = mEntryFees.getText().toString();\r\n                extraRule = extraRules.getText().toString();\r\n\r\n                if (toggleLimitedNoOfParticipants.isChecked() && noOfParticipants.equals(\"\")) {\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mLimitedNoOfParticipants);\r\n                    mLimitedNoOfParticipants.setError(\"Please enter a number\");\r\n                    mLimitedNoOfParticipants.requestFocus();\r\n                } else if (toggleEntryFees.isChecked() && fees.equals(\"\")) {\r\n                    YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mEntryFees);\r\n                    mEntryFees.setError(\"Please enter a number\");\r\n                    mEntryFees.requestFocus();\r\n                } else if (togglePrize.isChecked() && (prizeFirst.equals(\"\") || prizeSecond.equals(\"\")\r\n                        || prizeThird.equals(\"\") || prizeFirst.equals(\"0\") || prizeSecond.equals(\"0\")\r\n                        || prizeThird.equals(\"0\") || Integer.parseInt(prizeSecond) >= Integer.parseInt(prizeFirst) ||\r\n                        Integer.parseInt(prizeThird) >= Integer.parseInt(prizeSecond)\r\n                        ||checkFee(fees,prizeThird))) {\r\n                    if (prizeFirst.equals(\"\") || prizeFirst.equals(\"0\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(firstPrize);\r\n                        firstPrize.setError(\"Please enter some prize\");\r\n                        firstPrize.requestFocus();\r\n                    }\r\n                    if (prizeSecond.equals(\"\") || prizeSecond.equals(\"0\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(secondPrize);\r\n                        secondPrize.setError(\"Please enter some prize\");\r\n                        secondPrize.requestFocus();\r\n                    }\r\n                    if (prizeThird.equals(\"\") || prizeThird.equals(\"0\")) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(thirdPrize);\r\n                        thirdPrize.setError(\"Please enter some prize\");\r\n                        thirdPrize.requestFocus();\r\n                    }\r\n                    if (Integer.parseInt(prizeSecond) >= Integer.parseInt(prizeFirst)) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(firstPrize);\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(secondPrize);\r\n                        firstPrize.setError(\"2nd prize cannot be more than 1st\");\r\n                        secondPrize.setError(\"2nd prize cannot be more than 1st\");\r\n                        firstPrize.requestFocus();\r\n                        secondPrize.requestFocus();\r\n                    }\r\n                    if (Integer.parseInt(prizeThird) >= Integer.parseInt(prizeSecond)) {\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(secondPrize);\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(thirdPrize);\r\n                        secondPrize.setError(\"3nd prize cannot be more than 2nd\");\r\n                        thirdPrize.setError(\"3rd prize cannot be more than 2nd\");\r\n                        secondPrize.requestFocus();\r\n                        thirdPrize.requestFocus();\r\n                    }\r\n                    if(!fees.equals(\"\")) {\r\n                        if ((Integer.parseInt(prizeThird) <= Integer.parseInt(fees))) {\r\n                            YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mEntryFees);\r\n                            mEntryFees.setError(\"Entry fee must be less than each prize money\");\r\n                            mEntryFees.requestFocus();\r\n                        }\r\n                    }\r\n                } else\r\n                    submit();\r\n            }\r\n        });\r\n\r\n    }\r\n    private boolean checkFee(String fees, String prizeThird) {\r\n        if (fees.equals(\"\")){\r\n            return false;\r\n        }else{\r\n            return Integer.parseInt(prizeThird) <= Integer.parseInt(fees);\r\n        }\r\n    }\r\n\r\n\r\n    private void submit() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setMessage(\"Are u sure about all the details and create this contest?\")\r\n                .setTitle(\"Create Contest\")\r\n                .setCancelable(false)\r\n                .setPositiveButton(\"Yes\", (dialog, id) -> {\r\n                    Intent i = new Intent(CreateForm.this, CheckContest.class);\r\n                    i.putExtra(\"entryfee\", fees);\r\n                    i.putExtra(\"title\", title);\r\n                    i.putExtra(\"descrip\", des);\r\n                    i.putExtra(\"poster\", posterLink);\r\n                    i.putExtra(\"filetype\", fileType);\r\n                    i.putExtra(\"domain\", domain);\r\n                    i.putExtra(\"votetype\", votingType);\r\n                    i.putExtra(\"rule\", extraRule);\r\n                    i.putExtra(\"regBegin\", date1.replace(\"/\", \"-\"));\r\n                    i.putExtra(\"regEnd\", date2.replace(\"/\", \"-\"));\r\n                    if (date3.equals(\"\")) {\r\n                        i.putExtra(\"voteBegin\", \"-\");\r\n                    } else {\r\n                        i.putExtra(\"voteBegin\", date3.replace(\"/\", \"-\"));\r\n                    }\r\n                    if (date4.equals(\"\")) {\r\n                        i.putExtra(\"voteEnd\", \"-\");\r\n                    } else {\r\n                        i.putExtra(\"voteEnd\", date4.replace(\"/\", \"-\"));\r\n                    }\r\n                    i.putExtra(\"winDeclare\", date5.replace(\"/\", \"-\"));\r\n                    i.putExtra(\"numParticipants\", participantType);\r\n                    i.putExtra(\"maxLimit\", noOfParticipants);\r\n                    i.putExtra(\"pmoney\", prizeMoney);\r\n                    i.putExtra(\"place_1\", prizeFirst);\r\n                    i.putExtra(\"place_2\", prizeSecond);\r\n                    i.putExtra(\"place_3\", prizeThird);\r\n                    i.putExtra(\"total_prize\", prizeTotal);\r\n                    i.putExtra(\"numJury\", noOfJury);\r\n                    i.putExtra(\"jname_1\", JuryName1);\r\n                    i.putExtra(\"jname_2\", JuryName2);\r\n                    i.putExtra(\"jname_3\", JuryName3);\r\n                    i.putExtra(\"openfor\", openFor);\r\n                    i.putExtra(\"host\", hosted);\r\n                    startActivity(i);\r\n                })\r\n                .setNegativeButton(\"No\", (dialog, id) -> {\r\n                    dialog.cancel();\r\n                })\r\n                .show();\r\n    }\r\n\r\n    private void updateTotal() {\r\n        try {\r\n            int a = 0;\r\n            int b = 0;\r\n            int c = 0;\r\n            if (!firstPrize.getText().toString().equals(\"\"))\r\n                a = Integer.parseInt(firstPrize.getText().toString());\r\n            if (!secondPrize.getText().toString().equals(\"\"))\r\n                b = Integer.parseInt(secondPrize.getText().toString());\r\n            if (!thirdPrize.getText().toString().equals(\"\"))\r\n                c = Integer.parseInt(thirdPrize.getText().toString());\r\n            prizeTotal = String.valueOf(a + b + c);\r\n\r\n            totalPrize.setText(prizeTotal);\r\n        } catch (Exception e) {\r\n            Log.e(TAG, \"afterTextChanged: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    @SuppressLint(\"CutPasteId\")\r\n    private void initializeWidgets() {\r\n        //back arrow\r\n        backArrow = findViewById(R.id.backarrow);\r\n\r\n        //layouts\r\n        layout1 = findViewById(R.id.layout1);\r\n        layout2 = findViewById(R.id.layout2);\r\n        layout3 = findViewById(R.id.layout3);\r\n        active1 = findViewById(R.id.active1);\r\n        active2 = findViewById(R.id.active2);\r\n        active3 = findViewById(R.id.active3);\r\n\r\n\r\n        previousButton = findViewById(R.id.previousButton);\r\n        nextButton = findViewById(R.id.nextButton);\r\n\r\n        layout1.setVisibility(View.VISIBLE);\r\n        layout2.setVisibility(View.GONE);\r\n        layout3.setVisibility(View.GONE);\r\n        previousButton.setVisibility(View.GONE);\r\n        nextButton.setVisibility(View.VISIBLE);\r\n\r\n        //layout1 widgets\r\n        poster = findViewById(R.id.poster);\r\n        selectPoster = findViewById(R.id.selectPoster);\r\n        eventTitle = findViewById(R.id.eventTitle);\r\n        hostedBy = findViewById(R.id.hostedBy);\r\n        description = findViewById(R.id.description);\r\n        AllStudents = findViewById(R.id.AllStudents);\r\n        all = findViewById(R.id.All);\r\n        students = findViewById(R.id.student);\r\n        PictureVideoDocument = findViewById(R.id.PictureVideoDocument);\r\n        picture = findViewById(R.id.picture);\r\n        mediaLink = findViewById(R.id.Media_Link);\r\n        selectDomain = findViewById(R.id.selectDomain);\r\n\r\n        //layout 2 widgets\r\n        VotingType = findViewById(R.id.votingType);\r\n        Public = findViewById(R.id.publicVote);\r\n        Jury = findViewById(R.id.juryVote);\r\n        PublicAndJury = findViewById(R.id.juryAndPublicVote);\r\n        jurySelectionContainer = findViewById(R.id.jurySelectionContainer);\r\n        jury1Container = findViewById(R.id.jury1Container);\r\n        jury2Container = findViewById(R.id.jury2Container);\r\n        jury3Container = findViewById(R.id.jury3Container);\r\n        publicVotingContainer = findViewById(R.id.publicVotingContainer);\r\n        publicVotingContainerDates = findViewById(R.id.publicVotingContainerDates);\r\n        mDisplayDateRB = findViewById(R.id.datepicker1);\r\n        mDisplayDateRE = findViewById(R.id.datepicker2);\r\n        mDisplayDateVB = findViewById(R.id.datepicker3);\r\n        mDisplayDateVE = findViewById(R.id.datepicker4);\r\n        mDisplayDateWin = findViewById(R.id.datepicker5);\r\n        JuryNumber = findViewById(R.id.jurySelection);\r\n        one = findViewById(R.id.one);\r\n        two = findViewById(R.id.two);\r\n        three = findViewById(R.id.three);\r\n        juryName1 = findViewById(R.id.juryName1);\r\n        juryName2 = findViewById(R.id.juryName2);\r\n        juryName3 = findViewById(R.id.juryName3);\r\n        j1Checked = findViewById(R.id.j1Checked);\r\n        j2Checked = findViewById(R.id.j2Checked);\r\n        j3Checked = findViewById(R.id.j3Checked);\r\n        jurySelectionContainer.setVisibility(View.GONE);\r\n        jury1Container.setVisibility(View.GONE);\r\n        jury2Container.setVisibility(View.GONE);\r\n        jury3Container.setVisibility(View.GONE);\r\n        j1Checked.setVisibility(View.GONE);\r\n        j2Checked.setVisibility(View.GONE);\r\n        j3Checked.setVisibility(View.GONE);\r\n\r\n        publicVotingContainer.setVisibility(View.GONE);\r\n        publicVotingContainerDates.setVisibility(View.GONE);\r\n\r\n        //layout3 widgets\r\n        toggleLimitedNoOfParticipants = findViewById(R.id.toggleNoOfPartictipants);\r\n        mLimitedNoOfParticipants = findViewById(R.id.noOfParticipants);\r\n        toggleEntryFees = findViewById(R.id.toggleEntryFees);\r\n        mEntryFees = findViewById(R.id.entryFees);\r\n        togglePrize = findViewById(R.id.togglePrize);\r\n        P1 = findViewById(R.id.P1);\r\n        P2 = findViewById(R.id.P2);\r\n        P3 = findViewById(R.id.P3);\r\n        firstPrize = findViewById(R.id.firstPrize);\r\n        secondPrize = findViewById(R.id.secondPrize);\r\n        thirdPrize = findViewById(R.id.thirdPrize);\r\n        totalPrize = findViewById(R.id.totalPrize);\r\n        extraRules = findViewById(R.id.extraRules);\r\n        mLimitedNoOfParticipants.setVisibility(View.GONE);\r\n        mEntryFees.setVisibility(View.GONE);\r\n        P1.setVisibility(View.GONE);\r\n        P2.setVisibility(View.GONE);\r\n        P3.setVisibility(View.GONE);\r\n    }\r\n    public static String getDataColumn(Context context, Uri uri, String selection, String[] selectionArgs) {\r\n        Cursor cursor = null;\r\n        final String column = \"_data\";\r\n        final String[] projection = {\r\n                column\r\n        };\r\n        try {\r\n            cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs, null);\r\n            if (cursor != null && cursor.moveToFirst()) {\r\n                final int index = cursor.getColumnIndexOrThrow(column);\r\n                return cursor.getString(index);\r\n            }\r\n        } finally {\r\n            if (cursor != null) cursor.close();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static boolean isExternalStorageDocument(Uri uri) {\r\n        return \"com.android.externalstorage.documents\".equals(uri.getAuthority());\r\n    }\r\n\r\n    public static boolean isDownloadsDocument(Uri uri) {\r\n        return \"com.android.providers.downloads.documents\".equals(uri.getAuthority());\r\n    }\r\n\r\n    public static boolean isMediaDocument(Uri uri) {\r\n        return \"com.android.providers.media.documents\".equals(uri.getAuthority());\r\n    }\r\n\r\n    public static boolean isGooglePhotosUri(Uri uri) {\r\n        return \"com.google.android.apps.photos.content\".equals(uri.getAuthority());\r\n    }\r\n\r\n    public static String getPathFromUri(final Context context, final Uri uri) {\r\n        // DocumentProvider\r\n        if (DocumentsContract.isDocumentUri(context, uri)) {\r\n            // ExternalStorageProvider\r\n            if (isExternalStorageDocument(uri)) {\r\n                final String docId = DocumentsContract.getDocumentId(uri);\r\n                final String[] split = docId.split(\":\");\r\n                final String type = split[0];\r\n                if (\"primary\".equalsIgnoreCase(type))\r\n                    return Environment.getExternalStorageDirectory() + \"/\" + split[1];\r\n                // TODO handle non-primary volumes\r\n            }\r\n            // DownloadsProvider\r\n            else if (isDownloadsDocument(uri)) {\r\n                final String id = DocumentsContract.getDocumentId(uri);\r\n                if (id != null && id.startsWith(\"raw:\")) {\r\n                    return id.substring(4);\r\n                }\r\n                String[] contentUriPrefixesToTry = new String[]{\r\n                        \"content://downloads/public_downloads\",\r\n                        \"content://downloads/my_downloads\"\r\n                };\r\n                for (String contentUriPrefix : contentUriPrefixesToTry) {\r\n                    Uri contentUri = ContentUris.withAppendedId(Uri.parse(contentUriPrefix), Long.valueOf(id));\r\n                    try {\r\n                        String path = getDataColumn(context, contentUri, null, null);\r\n                        if (path != null) {\r\n                            return path;\r\n                        }\r\n                    } catch (Exception e) {\r\n                    }\r\n                }\r\n\r\n                // path could not be retrieved using ContentResolver, therefore copy file to accessible cache using streams\r\n                String fileName = getFileName(context, uri);\r\n                File cacheDir = getDocumentCacheDir(context);\r\n                File file = generateFileName(fileName, cacheDir);\r\n                String destinationPath = null;\r\n                if (file != null) {\r\n                    destinationPath = file.getAbsolutePath();\r\n                    saveFileFromUri(context, uri, destinationPath);\r\n                }\r\n                return destinationPath;\r\n            }\r\n            // MediaProvider\r\n            else if (isMediaDocument(uri)) {\r\n                final String docId = DocumentsContract.getDocumentId(uri);\r\n                final String[] split = docId.split(\":\");\r\n                final String type = split[0];\r\n                Uri contentUri = null;\r\n                if (\"image\".equals(type)) contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;\r\n                else if (\"video\".equals(type))\r\n                    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;\r\n                else if (\"audio\".equals(type))\r\n                    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\r\n                final String selection = \"_id=?\";\r\n                final String[] selectionArgs = new String[]{\r\n                        split[1]\r\n                };\r\n                return getDataColumn(context, contentUri, selection, selectionArgs);\r\n            }\r\n        }\r\n        // MediaStore (and general)\r\n        else if (\"content\".equalsIgnoreCase(uri.getScheme())) {\r\n            // Return the remote address\r\n            if (isGooglePhotosUri(uri)) return uri.getLastPathSegment();\r\n            return getDataColumn(context, uri, null, null);\r\n        }\r\n        // File\r\n        else if (\"file\".equalsIgnoreCase(uri.getScheme()))\r\n            return uri.getPath();\r\n        else\r\n            Toast.makeText(context, \"Unable to upload image\", Toast.LENGTH_LONG).show();\r\n        return null;\r\n    }\r\n\r\n    @TargetApi(19)\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        selectPoster.setEnabled(true);\r\n        String imgPath = \"\";\r\n        if (data != null && data.getData() != null && resultCode == RESULT_OK) {\r\n            Uri uri = data.getData();\r\n            if (uri != null) {\r\n                imgPath = getPathFromUri(mContext, uri);\r\n                if(imgPath!=null) {\r\n                    Log.d(TAG, \"onActivityResult: path: \" + imgPath);\r\n                    Log.d(TAG, \"onActivityResult: uri: \" + uri);\r\n                    imgurl = imgPath;\r\n                    setImage();\r\n                }\r\n            }\r\n        }\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n\r\n    private void setImage() {\r\n        if (selectedImage == 1) {\r\n            posterLink = imgurl;\r\n            Log.d(TAG, \"setImage: posterLink\" + posterLink);\r\n            String mAppend = \"file:/\";\r\n            Log.d(TAG, \"setImage: mAppend\" + mAppend);\r\n            if (!posterLink.equals(\"\")) {\r\n                RelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams)selectPoster.getLayoutParams();\r\n                params.addRule(RelativeLayout.ALIGN_PARENT_END,RelativeLayout.TRUE);\r\n                params.addRule(RelativeLayout.ALIGN_PARENT_TOP,RelativeLayout.TRUE);\r\n                selectPoster.setLayoutParams(params);\r\n                selectPoster.setAlpha(0.5f);\r\n                ((TextView) findViewById(R.id.selectPosterText)).setText(\"Change Poster\");\r\n                selectPoster.setBackgroundTintList(mContext.getResources().getColorStateList(R.color.black));\r\n                poster.setVisibility(View.VISIBLE);\r\n                poster.setBackgroundColor(Color.rgb(0, 0, 0));\r\n                Glide.with(getApplicationContext())\r\n                        .load(posterLink)\r\n                        .placeholder(R.drawable.load)\r\n                        .error(R.drawable.default_image2)\r\n                        .placeholder(R.drawable.load)\r\n                        .into(poster);                 }\r\n        }\r\n    }\r\n\r\n    public void verifyPermission(String[] permissions) {\r\n        ActivityCompat.requestPermissions(CreateForm.this, permissions, VERIFY_PERMISSION_REQUEST);\r\n    }\r\n\r\n    public boolean checkPermissionArray(String[] permissions) {\r\n        for (String check : permissions) if (!checkPermissions(check)) return false;\r\n        return true;\r\n    }\r\n\r\n    public boolean checkPermissions(String permission) {\r\n        int permissionRequest = ActivityCompat.checkSelfPermission(CreateForm.this, permission);\r\n        return permissionRequest == PackageManager.PERMISSION_GRANTED;\r\n    }\r\n\r\n    private void usernameExist(EditText juryname) {\r\n        juryname.setTextColor(Color.GREEN);\r\n    }\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mAuthListener = firebaseAuth -> {\r\n            mUser = firebaseAuth.getCurrentUser();\r\n            if (mUser == null) {\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                Log.d(TAG, \"onAuthStateChanged: navigating to login\");\r\n                SharedPreferences settings = getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n                new android.app.AlertDialog.Builder(mContext)\r\n                        .setTitle(\"No user logon found\")\r\n                        .setMessage(\"We will be logging u out. \\n Please try to log in again\")\r\n                        .setPositiveButton(android.R.string.ok, (dialog, which) -> {\r\n                            Intent intent = new Intent(mContext, LoginActivity.class);\r\n                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                            settings.edit().clear().apply();\r\n                            startActivity(intent);\r\n                        })\r\n                        .show();\r\n            } else Log.d(TAG, \"onAuthStateChanged: signed_in:\" + mUser.getUid());\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) mAuth.removeAuthStateListener(mAuthListener);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/contest/create/CreateForm.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/java/com/orion/orion/contest/create/CreateForm.java	(date 1622650977862)
@@ -87,6 +87,7 @@
     private View active3;
     private Button previousButton;
     private Button nextButton;
+    private int textIds=0;
 
     private ImageView backArrow;
 
@@ -95,6 +96,8 @@
     private LinearLayout selectPoster;
     private EditText eventTitle;
     private EditText hostedBy;
+    private EditText criteriaEt;
+    private TextView addCriteria,charCount;
     private EditText description;
     private RadioGroup AllStudents;
     private RadioButton all;
@@ -116,6 +119,7 @@
     private LinearLayout jury2Container;
     private LinearLayout jury3Container;
     private LinearLayout publicVotingContainer;
+    private LinearLayout criteriaContainer;
     private LinearLayout publicVotingContainerDates;
     private RadioGroup JuryNumber;
     private RadioButton one;
@@ -580,6 +584,31 @@
                 }
             }
         });
+        criteriaEt.addTextChangedListener(new TextWatcher() {
+            @Override
+            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+            }
+
+            @Override
+            public void onTextChanged(CharSequence s, int start, int before, int count) {
+                charCount.setText(String.valueOf(count)+"/50");
+            }
+
+            @Override
+            public void afterTextChanged(Editable s) {
+
+
+
+            }
+        });
+
+        addCriteria.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+
         juryName1.addTextChangedListener(new TextWatcher() {
             @Override
             public void beforeTextChanged(CharSequence s, int start, int count, int after) {
@@ -857,6 +886,7 @@
                 prizeThird="";
             }
         });
+
         if (firstPrize.getVisibility() == View.VISIBLE || secondPrize.getVisibility() == View.VISIBLE || thirdPrize.getVisibility() == View.VISIBLE) {
             firstPrize.addTextChangedListener(new TextWatcher() {
                 @Override
@@ -1394,6 +1424,12 @@
         j1Checked = findViewById(R.id.j1Checked);
         j2Checked = findViewById(R.id.j2Checked);
         j3Checked = findViewById(R.id.j3Checked);
+
+        criteriaEt = findViewById(R.id.criteriaEt);
+        addCriteria = findViewById(R.id.add);
+        charCount = findViewById(R.id.txtCount);
+        criteriaContainer = findViewById(R.id.judgingCriteria);
+
         jurySelectionContainer.setVisibility(View.GONE);
         jury1Container.setVisibility(View.GONE);
         jury2Container.setVisibility(View.GONE);
@@ -1402,6 +1438,8 @@
         j2Checked.setVisibility(View.GONE);
         j3Checked.setVisibility(View.GONE);
 
+
+
         publicVotingContainer.setVisibility(View.GONE);
         publicVotingContainerDates.setVisibility(View.GONE);
 
Index: app/src/main/res/layout/activity_create_contest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:background=\"@color/white\">\r\n\r\n    <RelativeLayout\r\n        android:id=\"@+id/reLayout1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentTop=\"true\">\r\n\r\n        <include layout=\"@layout/snippet_top_bar\" />\r\n    </RelativeLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"5dp\"\r\n        android:orientation=\"horizontal\"\r\n        android:id=\"@+id/currentActive\"\r\n        android:layout_below=\"@id/reLayout1\"\r\n        android:weightSum=\"3\">\r\n        <View\r\n            android:id=\"@+id/active1\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:background=\"@color/colorPrimary\"/>\r\n        <View\r\n            android:id=\"@+id/active2\"\r\n            android:visibility=\"invisible\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:background=\"@color/colorPrimary\"\r\n            />\r\n        <View\r\n            android:id=\"@+id/active3\"\r\n            android:visibility=\"invisible\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:background=\"@color/colorPrimary\"\r\n            />\r\n    </LinearLayout>\r\n\r\n    <ScrollView\r\n        android:id=\"@+id/layout1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/currentActive\"\r\n        android:background=\"@color/white\"\r\n        android:visibility=\"visible\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"250dp\"\r\n                android:background=\"#8A8D92\">\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/poster\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:visibility=\"gone\" />\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/selectPoster\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_centerVertical=\"true\"\r\n                    android:gravity=\"end|top\"\r\n                    android:background=\"@drawable/circular_corner_rectangle_white_border\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:padding=\"5dp\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:background=\"@drawable/ic_add_photo\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/selectPosterText\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:paddingStart=\"5dp\"\r\n                        android:paddingEnd=\"5dp\"\r\n                        android:text=\"ADD PHOTO\"\r\n                        android:textColor=\"@color/white\"\r\n                        android:textSize=\"16sp\"\r\n                        android:textStyle=\"bold\" />\r\n                </LinearLayout>\r\n\r\n            </RelativeLayout>\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/eventTitle\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_marginLeft=\"15dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginRight=\"15dp\"\r\n                android:hint=\"Event Title\"\r\n                android:padding=\"10dp\"\r\n                android:background=\"@drawable/rectangular_border\"\r\n                android:imeOptions=\"actionNext\"\r\n                android:inputType=\"textFilter\"\r\n                android:textColor=\"@color/black\"\r\n                android:textColorHint=\"@color/grey\"\r\n                android:textSize=\"18sp\" />\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/hostedBy\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"15dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginRight=\"15dp\"\r\n                android:background=\"@drawable/rectangular_border\"\r\n                android:padding=\"10dp\"\r\n\r\n                android:hint=\"Hosted By\"\r\n                android:imeOptions=\"actionNext\"\r\n                android:inputType=\"textFilter\"\r\n                android:textColor=\"@color/black\"\r\n                android:textColorHint=\"@color/grey\"\r\n                android:textSize=\"18sp\" />\r\n\r\n            <com.google.android.material.textfield.TextInputEditText\r\n                android:id=\"@+id/description\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"15dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginRight=\"15dp\"\r\n                android:gravity=\"top\"\r\n                android:hint=\"Description\"\r\n                android:imeOptions=\"actionDone\"\r\n                android:padding=\"10dp\"\r\n                android:background=\"@drawable/rectangular_border\"\r\n                android:inputType=\"textCapSentences|textNoSuggestions|textMultiLine\"\r\n                android:textColor=\"@color/black\"\r\n                android:textColorHint=\"@color/grey\"\r\n                android:textSize=\"18sp\" />\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"15dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginRight=\"15dp\"\r\n                android:orientation=\"horizontal\"\r\n                android:weightSum=\"2\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:padding=\"5dp\"\r\n                        android:text=\"Open for:\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"18sp\" />\r\n\r\n                    <RadioGroup\r\n                        android:id=\"@+id/AllStudents\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\">\r\n\r\n                        <RadioButton\r\n                            android:id=\"@+id/All\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"All\" />\r\n\r\n                        <RadioButton\r\n                            android:id=\"@+id/student\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:text=\"Students\" />\r\n                    </RadioGroup>\r\n\r\n\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:padding=\"5dp\"\r\n                        android:text=\"Allowed Files Type\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"18sp\" />\r\n\r\n                    <RadioGroup\r\n                        android:id=\"@+id/PictureVideoDocument\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\">\r\n\r\n\r\n                        <RadioButton\r\n                            android:id=\"@+id/picture\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:padding=\"5dp\"\r\n                            android:text=\"Image\" />\r\n\r\n                        <RadioButton\r\n                            android:id=\"@+id/Media_Link\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:padding=\"5dp\"\r\n                            android:text=\"Media Link\" />\r\n\r\n\r\n                    </RadioGroup>\r\n                </LinearLayout>\r\n\r\n            </LinearLayout>\r\n\r\n            <TextView\r\n                android:id=\"@+id/selectDomain\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center_horizontal\"\r\n                android:layout_marginTop=\"20dp\"\r\n                android:padding=\"10dp\"\r\n                android:background=\"@drawable/white_round_button\"\r\n                android:gravity=\"center_vertical\"\r\n\r\n                android:text=\"Select your Domain\"\r\n                android:textColor=\"@color/black\"\r\n                android:layout_marginBottom=\"50dp\"\r\n\r\n                android:textSize=\"18sp\" />\r\n\r\n        </LinearLayout>\r\n    </ScrollView>\r\n\r\n    <ScrollView\r\n        android:id=\"@+id/layout2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_below=\"@id/currentActive\"\r\n        android:background=\"@color/white\"\r\n        android:visibility=\"gone\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"25dp\"\r\n                android:layout_marginLeft=\"25dp\"\r\n                android:layout_marginTop=\"25dp\"\r\n                android:layout_marginEnd=\"25dp\"\r\n                android:layout_marginRight=\"25dp\"\r\n                android:gravity=\"center|start\"\r\n                android:text=\"Judging Details :\"\r\n                android:textColor=\"@color/black\"\r\n                android:textStyle=\"bold\"\r\n                android:textSize=\"18dp\" />\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"15dp\"\r\n                android:layout_marginLeft=\"15dp\"\r\n                android:layout_marginTop=\"15dp\"\r\n                android:layout_marginEnd=\"15dp\"\r\n                android:layout_marginRight=\"15dp\"\r\n                android:background=\"@drawable/circular_corner_rectangle_white_border\"\r\n                android:backgroundTint=\"@color/white\"\r\n                android:elevation=\"10dp\"\r\n                android:orientation=\"vertical\"\r\n                android:padding=\"10dp\">\r\n\r\n                <!--Voting Type-->\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"Voting Type\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"20sp\" />\r\n\r\n                    <RadioGroup\r\n                        android:id=\"@+id/votingType\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:paddingTop=\"10dp\">\r\n\r\n                        <RadioButton\r\n                            android:id=\"@+id/publicVote\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:padding=\"5dp\"\r\n                            android:text=\"Public\"\r\n                            android:textSize=\"16sp\" />\r\n\r\n                        <RadioButton\r\n                            android:id=\"@+id/juryVote\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:padding=\"5dp\"\r\n                            android:text=\"Jury\"\r\n                            android:textSize=\"16sp\" />\r\n\r\n                        <RadioButton\r\n                            android:id=\"@+id/juryAndPublicVote\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:padding=\"5dp\"\r\n                            android:text=\"Jury and Public\"\r\n                            android:textSize=\"16sp\" />\r\n\r\n                    </RadioGroup>\r\n\r\n\r\n                </LinearLayout>\r\n                <!--Jury Selection-->\r\n                <LinearLayout\r\n                    android:id=\"@+id/jurySelectionContainer\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"20dp\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"Enter No. of Jury Members\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"20sp\" />\r\n\r\n                    <RadioGroup\r\n                        android:id=\"@+id/jurySelection\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"10dp\"\r\n                        android:layout_marginBottom=\"10dp\"\r\n                        android:orientation=\"horizontal\"\r\n                        android:weightSum=\"3\">\r\n\r\n                        <RadioButton\r\n                            android:id=\"@+id/one\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_weight=\"1\"\r\n                            android:padding=\"5dp\"\r\n                            android:text=\"1\"\r\n                            android:textSize=\"16sp\" />\r\n\r\n                        <RadioButton\r\n                            android:id=\"@+id/two\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_weight=\"1\"\r\n                            android:padding=\"5dp\"\r\n                            android:text=\"2\"\r\n                            android:textSize=\"16sp\" />\r\n\r\n                        <RadioButton\r\n                            android:id=\"@+id/three\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_weight=\"1\"\r\n                            android:padding=\"5dp\"\r\n                            android:text=\"3\"\r\n                            android:textSize=\"16sp\" />\r\n\r\n                    </RadioGroup>\r\n\r\n\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/jury1Container\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:weightSum=\"7\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"100dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_weight=\"1\"\r\n                        android:gravity=\"center|start\"\r\n                        android:text=\"Jury 1 - \"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"16sp\" />\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/juryName1\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_weight=\"5\"\r\n                        android:hint=\"Enter Username\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/j1Checked\"\r\n                        android:layout_width=\"50dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_weight=\"1\"\r\n                        android:src=\"@drawable/ic_checkmark\"\r\n                        android:visibility=\"gone\"\r\n                        app:tint=\"#4CAF50\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/jury2Container\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:weightSum=\"7\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"100dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_weight=\"1\"\r\n                        android:gravity=\"center|start\"\r\n                        android:text=\"Jury 2 - \"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"16sp\" />\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/juryName2\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_weight=\"5\"\r\n                        android:hint=\"Enter Username\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/j2Checked\"\r\n                        android:layout_width=\"50dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_weight=\"1\"\r\n                        android:src=\"@drawable/ic_checkmark\"\r\n                        android:visibility=\"gone\"\r\n                        app:tint=\"#4CAF50\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/jury3Container\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:weightSum=\"7\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"100dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_weight=\"1\"\r\n                        android:gravity=\"center|start\"\r\n                        android:text=\"Jury 3 - \"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"16sp\" />\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/juryName3\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_weight=\"5\"\r\n                        android:hint=\"Enter Username\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/j3Checked\"\r\n                        android:layout_width=\"50dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_weight=\"1\"\r\n                        android:src=\"@drawable/ic_checkmark\"\r\n                        android:visibility=\"gone\"\r\n                        app:tint=\"#4CAF50\" />\r\n                </LinearLayout>\r\n            </LinearLayout>\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"25dp\"\r\n                android:layout_marginLeft=\"25dp\"\r\n                android:layout_marginTop=\"25dp\"\r\n                android:layout_marginEnd=\"25dp\"\r\n                android:layout_marginRight=\"25dp\"\r\n                android:gravity=\"center|start\"\r\n                android:text=\"Date Entries :\"\r\n                android:textColor=\"@color/black\"\r\n                android:textStyle=\"bold\"\r\n                android:textSize=\"18dp\" />\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"15dp\"\r\n                android:layout_marginLeft=\"15dp\"\r\n                android:layout_marginTop=\"15dp\"\r\n                android:layout_marginEnd=\"15dp\"\r\n                android:layout_marginRight=\"15dp\"\r\n                android:layout_marginBottom=\"50dp\"\r\n                android:background=\"@drawable/circular_corner_rectangle_white_border\"\r\n                android:backgroundTint=\"@color/white\"\r\n                android:elevation=\"10dp\"\r\n                android:orientation=\"vertical\"\r\n                android:padding=\"10dp\">\r\n                <!--Registration Dates-->\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"40dp\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:paddingStart=\"10dp\"\r\n                        android:paddingLeft=\"10dp\"\r\n                        android:src=\"@drawable/ic_calender\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:gravity=\"center|left\"\r\n                        android:paddingStart=\"15dp\"\r\n                        android:paddingLeft=\"15dp\"\r\n                        android:text=\"Registration\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"20sp\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"40dp\"\r\n                    android:layout_marginLeft=\"40dp\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:weightSum=\"2\">\r\n\r\n                    <com.google.android.material.textfield.TextInputEditText\r\n                        android:id=\"@+id/datepicker1\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:layout_margin=\"5dp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:background=\"@drawable/white_border\"\r\n                        android:elevation=\"2dp\"\r\n                        android:focusable=\"false\"\r\n                        android:hint=\"Start Date\"\r\n                        android:imeOptions=\"actionNext\"\r\n                        android:inputType=\"none\"\r\n                        android:paddingLeft=\"15dp\"\r\n                        android:paddingRight=\"10dp\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textColorHint=\"@color/grey\" />\r\n\r\n                    <com.google.android.material.textfield.TextInputEditText\r\n                        android:id=\"@+id/datepicker2\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:layout_margin=\"5dp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:background=\"@drawable/white_border\"\r\n                        android:elevation=\"2dp\"\r\n                        android:focusable=\"false\"\r\n                        android:hint=\"End Date\"\r\n                        android:imeOptions=\"actionNext\"\r\n                        android:inputType=\"none\"\r\n                        android:paddingLeft=\"10dp\"\r\n                        android:paddingRight=\"10dp\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textColorHint=\"@color/grey\" />\r\n                </LinearLayout>\r\n                <!--Public Voting Dates-->\r\n                <LinearLayout\r\n                    android:id=\"@+id/publicVotingContainer\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"40dp\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:layout_gravity=\"right\"\r\n                        android:paddingStart=\"10dp\"\r\n                        android:paddingLeft=\"10dp\"\r\n                        android:src=\"@drawable/ic_calender\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:gravity=\"center|left\"\r\n                        android:paddingStart=\"15dp\"\r\n                        android:paddingLeft=\"15dp\"\r\n                        android:text=\"Public Voting\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"20sp\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/publicVotingContainerDates\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"40dp\"\r\n                    android:layout_marginLeft=\"40dp\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:weightSum=\"2\">\r\n\r\n                    <com.google.android.material.textfield.TextInputEditText\r\n                        android:id=\"@+id/datepicker3\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:layout_margin=\"5dp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:background=\"@drawable/white_border\"\r\n                        android:elevation=\"2dp\"\r\n                        android:focusable=\"false\"\r\n                        android:hint=\"Start Date\"\r\n                        android:imeOptions=\"actionNext\"\r\n                        android:inputType=\"none\"\r\n                        android:paddingLeft=\"15dp\"\r\n                        android:paddingRight=\"10dp\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textColorHint=\"@color/grey\" />\r\n\r\n                    <com.google.android.material.textfield.TextInputEditText\r\n                        android:id=\"@+id/datepicker4\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:layout_margin=\"5dp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:background=\"@drawable/white_border\"\r\n                        android:elevation=\"2dp\"\r\n                        android:focusable=\"false\"\r\n                        android:hint=\"End Date\"\r\n                        android:imeOptions=\"actionNext\"\r\n                        android:inputType=\"none\"\r\n                        android:paddingLeft=\"10dp\"\r\n                        android:paddingRight=\"10dp\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textColorHint=\"@color/grey\" />\r\n                </LinearLayout>\r\n\r\n                <!--Winners Announcement  Dates-->\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"40dp\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:layout_gravity=\"right\"\r\n                        android:paddingStart=\"10dp\"\r\n                        android:paddingLeft=\"10dp\"\r\n                        android:src=\"@drawable/ic_calender\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:gravity=\"center|left\"\r\n                        android:paddingStart=\"15dp\"\r\n                        android:paddingLeft=\"15dp\"\r\n                        android:text=\"Winners Announcement  Date\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"20sp\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"40dp\"\r\n                    android:layout_marginLeft=\"40dp\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:weightSum=\"2\">\r\n\r\n                    <com.google.android.material.textfield.TextInputEditText\r\n                        android:id=\"@+id/datepicker5\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:layout_margin=\"5dp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:background=\"@drawable/white_border\"\r\n                        android:elevation=\"2dp\"\r\n                        android:focusable=\"false\"\r\n                        android:hint=\"Select date\"\r\n                        android:gravity=\"center\"\r\n                        android:imeOptions=\"actionNext\"\r\n                        android:inputType=\"none\"\r\n                        android:paddingLeft=\"15dp\"\r\n                        android:paddingRight=\"10dp\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textColorHint=\"@color/grey\" />\r\n\r\n                </LinearLayout>\r\n            </LinearLayout>\r\n\r\n\r\n        </LinearLayout>\r\n    </ScrollView>\r\n\r\n    <ScrollView\r\n        android:id=\"@+id/layout3\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_below=\"@id/currentActive\"\r\n        android:background=\"@color/white\"\r\n        android:visibility=\"gone\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n\r\n            android:paddingBottom=\"50dp\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <!--Limited No. of participants window-->\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"15dp\"\r\n                android:layout_marginLeft=\"15dp\"\r\n                android:layout_marginTop=\"15dp\"\r\n                android:layout_marginEnd=\"15dp\"\r\n                android:layout_marginRight=\"15dp\"\r\n                android:background=\"@drawable/circular_corner_rectangle_white_border\"\r\n                android:backgroundTint=\"@color/white\"\r\n                android:elevation=\"10dp\"\r\n                android:orientation=\"horizontal\"\r\n                android:padding=\"10dp\">\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:gravity=\"start|center\"\r\n                    android:text=\"Limited no.\\nof participants:\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"18sp\" />\r\n\r\n                <EditText\r\n                    android:id=\"@+id/noOfParticipants\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:hint=\"Enter max limit\"\r\n                    android:imeOptions=\"actionDone\"\r\n                    android:inputType=\"number\"\r\n                    android:paddingStart=\"10dp\"\r\n                    android:paddingLeft=\"10dp\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textColorHint=\"@color/grey\" />\r\n\r\n                <androidx.appcompat.widget.SwitchCompat\r\n                    android:id=\"@+id/toggleNoOfPartictipants\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_gravity=\"end\" />\r\n\r\n\r\n            </LinearLayout>\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"25dp\"\r\n                android:layout_marginLeft=\"25dp\"\r\n                android:layout_marginTop=\"25dp\"\r\n                android:layout_marginEnd=\"25dp\"\r\n                android:layout_marginRight=\"25dp\"\r\n                android:gravity=\"center|start\"\r\n                android:text=\"Fees/Prize Details:\"\r\n                android:textColor=\"@color/black\"\r\n                android:textStyle=\"bold\"\r\n                android:textSize=\"18dp\" />\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"15dp\"\r\n                android:layout_marginLeft=\"15dp\"\r\n                android:layout_marginTop=\"15dp\"\r\n                android:layout_marginEnd=\"15dp\"\r\n                android:layout_marginRight=\"15dp\"\r\n                android:background=\"@drawable/circular_corner_rectangle_white_border\"\r\n                android:backgroundTint=\"@color/white\"\r\n                android:elevation=\"10dp\"\r\n                android:layout_marginBottom=\"50dp\"\r\n                android:orientation=\"vertical\"\r\n                android:padding=\"10dp\">\r\n\r\n                <!--Entry fees window-->\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"Entry Fees   :   \"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"18sp\" />\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/entryFees\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:hint=\"Enter Entry Fees\"\r\n                        android:imeOptions=\"actionDone\"\r\n                        android:inputType=\"number\"\r\n                        android:paddingStart=\"10dp\"\r\n                        android:paddingLeft=\"10dp\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textColorHint=\"@color/grey\" />\r\n\r\n                    <androidx.appcompat.widget.SwitchCompat\r\n                        android:id=\"@+id/toggleEntryFees\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_gravity=\"end\" />\r\n\r\n\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:gravity=\"start|center\"\r\n                        android:text=\"Prize Money   :   \"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"18sp\" />\r\n\r\n                    <androidx.appcompat.widget.SwitchCompat\r\n                        android:id=\"@+id/togglePrize\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_gravity=\"end\" />\r\n\r\n\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/P1\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/firstPrize\"\r\n                        android:layout_width=\"150dp\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:hint=\"1st Prize\"\r\n                        android:text=\"0\"\r\n                        android:imeOptions=\"actionNext\"\r\n                        android:inputType=\"number\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textColorHint=\"@color/grey\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"50dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"+\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"24sp\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/P2\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"horizontal\">\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/secondPrize\"\r\n                        android:layout_width=\"150dp\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:hint=\"2nd Prize\"\r\n                        android:text=\"0\"\r\n                        android:imeOptions=\"actionNext\"\r\n                        android:inputType=\"number\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textColorHint=\"@color/grey\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"50dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"+\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"24sp\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/P3\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:weightSum=\"16\">\r\n\r\n                    <EditText\r\n                        android:id=\"@+id/thirdPrize\"\r\n                        android:layout_width=\"150dp\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:hint=\"3rd Prize\"\r\n                        android:text=\"0\"\r\n\r\n                        android:imeOptions=\"actionDone\"\r\n                        android:inputType=\"number\"\r\n                        android:textColorHint=\"@color/grey\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"50dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"=\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"24sp\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/totalPrize\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:gravity=\"start|center\"\r\n                        android:textColor=\"@color/light_orange\"\r\n                        android:textSize=\"18sp\" />\r\n                </LinearLayout>\r\n            </LinearLayout>\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"25dp\"\r\n                android:layout_marginLeft=\"25dp\"\r\n                android:layout_marginTop=\"25dp\"\r\n                android:layout_marginEnd=\"25dp\"\r\n                android:visibility=\"visible\"\r\n\r\n                android:layout_marginRight=\"25dp\"\r\n                android:gravity=\"center|start\"\r\n                android:text=\"Rules:\"\r\n                android:textColor=\"@color/black\"\r\n                android:textStyle=\"bold\"\r\n                android:textSize=\"18dp\" />\r\n\r\n            <EditText\r\n                android:layout_marginBottom=\"10dp\"\r\n                android:id=\"@+id/extraRules\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"15dp\"\r\n                android:layout_marginLeft=\"15dp\"\r\n                android:layout_marginTop=\"15dp\"\r\n                android:visibility=\"visible\"\r\n                android:layout_marginEnd=\"15dp\"\r\n                android:layout_marginRight=\"15dp\"\r\n                android:background=\"@drawable/circular_corner_rectangle_white_border\"\r\n                android:backgroundTint=\"@color/white\"\r\n                android:elevation=\"10dp\"\r\n                android:gravity=\"top\"\r\n                android:hint=\"Any rules you want to specify.\\nPlease mention them here\"\r\n                android:inputType=\"textCapSentences|textNoSuggestions|textMultiLine\"\r\n                android:padding=\"10dp\"\r\n                android:textColor=\"@color/black\"\r\n                android:textSize=\"16sp\" />\r\n\r\n        </LinearLayout>\r\n    </ScrollView>\r\n\r\n    <Button\r\n        android:id=\"@+id/previousButton\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_marginLeft=\"15dp\"\r\n        android:layout_marginBottom=\"10dp\"\r\n        android:background=\"@drawable/circular_button\"\r\n        android:backgroundTint=\"#E5E6EB\"\r\n        android:elevation=\"5dp\"\r\n\r\n        android:text=\"Previous\"\r\n        android:padding=\"10dp\"\r\n        android:textColor=\"@color/white\"\r\n        android:textSize=\"15sp\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/nextButton\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:layout_margin=\"5dp\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:background=\"@drawable/circular_button\"\r\n        android:backgroundTint=\"@color/colorPrimary\"\r\n        android:elevation=\"5dp\"\r\n\r\n        android:layout_marginBottom=\"10dp\"\r\n        android:text=\"NEXT\"\r\n        android:textColor=\"@color/white\"\r\n        android:textSize=\"15sp\" />\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_create_contest.xml	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/res/layout/activity_create_contest.xml	(date 1622649496131)
@@ -258,7 +258,7 @@
         android:layout_height="match_parent"
         android:layout_below="@id/currentActive"
         android:background="@color/white"
-        android:visibility="gone">
+        android:visibility="visible">
 
         <LinearLayout
             android:layout_width="match_parent"
@@ -495,6 +495,60 @@
                         android:visibility="gone"
                         app:tint="#4CAF50" />
                 </LinearLayout>
+                 <LinearLayout
+                    android:id="@+id/judgingCriteria"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="20dp"
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="Add Judging Criteria"
+                        android:textColor="@color/black"
+                        android:textSize="20sp" />
+                     <TextView
+                         android:layout_width="wrap_content"
+                         android:layout_height="wrap_content"
+                         android:text="Example- 'lighting','composition' for Photography type contests."
+                         android:layout_marginLeft="5dp"/>
+                     <LinearLayout
+                         android:layout_width="match_parent"
+                         android:layout_height="wrap_content"
+                         android:orientation="horizontal"
+                         android:weightSum="10">
+                     <EditText
+                         android:layout_width="0dp"
+                         android:layout_weight="8.5"
+                         android:layout_height="wrap_content"
+                         android:hint="Enter Criteria"
+                         android:layout_marginTop="6dp"
+                         android:id="@+id/criteriaEt"
+                         android:background="@drawable/rectangular_border"
+                         android:padding="10dp"/>
+                         <TextView
+                             android:layout_width="0dp"
+                             android:layout_height="wrap_content"
+                             android:text="ADD"
+                             android:textStyle="bold"
+                             android:gravity="center"
+                             android:layout_gravity="center"
+                             android:layout_weight="1.5"
+                             android:textSize="20sp"
+                             android:textColor="@color/light_blue"
+                             android:padding="3dp"
+                             android:id="@+id/add"/>
+</LinearLayout>
+                     <TextView
+                         android:layout_width="wrap_content"
+                         android:layout_height="wrap_content"
+                         android:text="0/50"
+                         android:id="@+id/txtCount"
+                         android:textColor="@color/red"
+                         android:layout_marginLeft="5dp"/>
+
+                 </LinearLayout>
             </LinearLayout>
 
             <TextView
Index: app/src/main/java/com/orion/orion/contest/joined/JoinedContestFragment.java
===================================================================
--- app/src/main/java/com/orion/orion/contest/joined/JoinedContestFragment.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/java/com/orion/orion/contest/joined/JoinedContestFragment.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
@@ -1,399 +0,0 @@
-package com.orion.orion.contest.joined;
-
-import android.content.Context;
-import android.content.SharedPreferences;
-import android.os.Build;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Looper;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.annotation.RequiresApi;
-import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
-
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.auth.FirebaseUser;
-import com.google.firebase.database.DataSnapshot;
-import com.google.firebase.database.DatabaseError;
-import com.google.firebase.database.DatabaseReference;
-import com.google.firebase.database.FirebaseDatabase;
-import com.google.firebase.database.ValueEventListener;
-import com.google.gson.Gson;
-import com.google.gson.reflect.TypeToken;
-import com.orion.orion.Adapters.AdapterContestCreated;
-import com.orion.orion.Adapters.AdapterContestJoined;
-import com.orion.orion.R;
-import com.orion.orion.models.CreateForm;
-import com.orion.orion.models.JoinForm;
-
-import java.lang.reflect.Type;
-import java.text.DateFormat;
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.util.ArrayList;
-import java.util.Calendar;
-import java.util.Collections;
-import java.util.Date;
-import java.util.Locale;
-
-
-public class JoinedContestFragment extends Fragment {
-
-    private static final String TAG = "JOINED FRAGMENT";
-    RecyclerView joinedContestRv;
-    private ArrayList<JoinForm> contestlist;
-    private ArrayList<JoinForm> paginatedContestlist;
-    TextView noPost;
-    SwipeRefreshLayout contestRefresh;
-    boolean flag1 = false;
-    private static int RETRY_DURATION = 1000;
-    private static final Handler handler = new Handler(Looper.getMainLooper());
-    ProgressBar bottomProgress;
-
-    //    SP
-    Gson gson;
-    SharedPreferences sp;
-    private FirebaseAuth fAuth;
-    private int mResults;
-
-    private View view;
-    private AdapterContestJoined contestJoined;
-
-
-    @Override
-    public void onActivityCreated(@Nullable  Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-        sp = getContext().getSharedPreferences("shared preferences", Context.MODE_PRIVATE);
-        gson = new Gson();
-        getJoinListFromSP();
-    }
-
-    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
-    @Nullable
-    @Override
-    public View onCreateView(@NonNull final LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-
-
-        view = inflater.inflate(R.layout.activity_fragment_joined_contest, container, false);
-
-        contestRefresh = view.findViewById(R.id.contest_refresh);
-        noPost = view.findViewById(R.id.noPost);
-        bottomProgress = view.findViewById(R.id.pro2);
-        joinedContestRv = view.findViewById(R.id.recycler_view2);
-
-        fAuth = FirebaseAuth.getInstance();
-        contestlist = new ArrayList<>();
-        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());
-
-        joinedContestRv.setHasFixedSize(true);
-        joinedContestRv.setItemViewCacheSize(10);
-        joinedContestRv.setDrawingCacheEnabled(true);
-        joinedContestRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);
-        linearLayoutManager.setItemPrefetchEnabled(true);
-        linearLayoutManager.setInitialPrefetchItemCount(20);
-        joinedContestRv.setLayoutManager(linearLayoutManager);
-
-        contestlist=new ArrayList<>();
-
-        fAuth=FirebaseAuth.getInstance();
-        joinedContestRv.addOnScrollListener(new RecyclerView.OnScrollListener() {
-            @Override
-            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
-                super.onScrollStateChanged(recyclerView, newState);
-                if (!recyclerView.canScrollVertically(1) && newState == RecyclerView.SCROLL_STATE_IDLE) {
-                    if (contestlist.size() != paginatedContestlist.size())
-                        bottomProgress.setVisibility(View.VISIBLE);
-                    displayMoreContest();
-                } else bottomProgress.setVisibility(View.GONE);
-            }
-        });
-        contestRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
-            @Override
-            public void onRefresh() {
-                flag1 = false;
-                getJoinListFromSP();
-                checkRefresh();
-            }
-
-            private void checkRefresh() {
-                if (contestRefresh.isRefreshing() && flag1) {
-                    contestRefresh.setRefreshing(false);
-                    handler.removeCallbacks(this::checkRefresh);
-                    flag1 = false;
-                } else handler.postDelayed(this::checkRefresh, RETRY_DURATION);
-            }
-        });
-        return view;
-    }
-
-    private void getContest() {
-        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
-        reference.child(getString(R.string.dbname_contests))
-                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                .child(getString(R.string.joined_contest))
-                .addValueEventListener(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
-                        contestlist.clear();
-                        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
-                            JoinForm joiningForm = snapshot.getValue(JoinForm.class);
-                            contestlist.add(joiningForm);
-                        }
-                        Collections.reverse(contestlist);
-//                        Add newly Created ArrayList to Shared Preferences
-                        SharedPreferences.Editor editor = sp.edit();
-                        String json = gson.toJson(contestlist);
-                        editor.putString("joinlist", json);
-                        editor.apply();
-                        displaycontest();
-                    }
-
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError databaseError) {
-
-                    }
-                });
-    }
-
-    //  fetching JoinList  from SharedPreferences
-    private void getJoinListFromSP() {
-        String json = sp.getString("joinlist", null);
-        Log.d(TAG, "getJoinListFromSP: 3");
-        Type type = new TypeToken<ArrayList<JoinForm>>() {
-        }.getType();
-        contestlist = gson.fromJson(json, type);
-        if (contestlist == null) {    //        if no arrayList is present
-            contestlist = new ArrayList<>();
-            Log.d(TAG, "getJoinListFromSP: 1");
-            getContest();             //            make new Arraylist
-
-        } else {
-            Log.d(TAG, "getJoinListFromSP: 2");
-
-            checkJoinUpdate();       //         Check if new contest is there
-
-        }
-
-    }
-
-    private void checkJoinUpdate() {
-        DatabaseReference refer = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_contests));
-
-        refer.child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                .child(getString(R.string.field_joined_updates))
-                .addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                        if (snapshot.exists()) {
-                            int x = 0;
-                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {
-                                x++;
-                                for (JoinForm a : contestlist) {
-
-
-                                    if (a.getJi().equals(snapshot1.getKey())) {
-
-                                        a.setSt(snapshot1.getValue().toString());
-                                    }
-                                    if (x == snapshot.getChildrenCount()) {
-                                        //    Add newly Created ArrayList to Shared Preferences
-                                        SharedPreferences.Editor editor = sp.edit();
-                                        String json = gson.toJson(contestlist);
-                                        editor.putString("joinlist", json);
-                                        editor.apply();
-
-                                        refer.child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                                                .child(getString(R.string.field_joined_updates))
-                                                .removeValue();
-
-                                        checkNewJoinUpdate();
-                                    }
-
-                                }
-
-
-                            }
-                        } else {
-                            checkNewJoinUpdate();
-
-                        }
-                    }
-
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
-
-                    }
-                });
-
-
-    }
-
-    private void checkNewJoinUpdate() {
-        DatabaseReference refer = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_contests));
-
-        refer.child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                .child(getString(R.string.joined_contest))
-                .orderByKey()
-                .limitToLast(1)
-                .addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                        if (snapshot.exists()) {
-                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {
-                                if (contestlist.size() != 0) {
-                                    if (contestlist.get(0).getJi().equals(snapshot1.getKey())) {
-                                        Log.d(TAG, "getJoinListFromSP :5 ");
-
-                                        displaycontest();
-                                    } else {
-                                        Log.d(TAG, "getJoinListFromSP :6");
-
-                                        updateCreateList();
-                                    }
-                                } else {
-                                    Log.d(TAG, "getJoinListFromSP : 7 ");
-
-                                    updateCreateList();
-                                }
-                            }
-                        } else {
-                            Log.d(TAG, "getJoinListFromSP :4 ");
-                            updateCreateList();
-                        }
-                    }
-
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
-
-                    }
-                });
-    }
-
-    private void updateCreateList() {
-
-        contestlist.clear();
-        DatabaseReference refer = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_contests));
-        refer.child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                .child(getString(R.string.joined_contest))
-                .addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                        for (DataSnapshot snapshot1 : snapshot.getChildren()) {
-                            JoinForm joinForm = snapshot1.getValue(JoinForm.class);
-
-                            contestlist.add(joinForm);
-                        }
-                        Collections.reverse(contestlist);
-
-                        //    Add newly Created ArrayList to Shared Preferences
-                        SharedPreferences.Editor editor = sp.edit();
-                        String json = gson.toJson(contestlist);
-                        editor.putString("joinlist", json);
-                        editor.apply();
-
-                        displaycontest();
-                    }
-
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
-
-                    }
-                });
-
-
-    }
-
-    private void displaycontest() {
-        Log.d(TAG, "display first 10 contest");
-        noPost.setVisibility(View.GONE);
-
-
-        flag1 = true;
-        paginatedContestlist = new ArrayList<>();
-        if (contestlist != null && contestlist.size() != 0) {
-
-            try {
-
-
-                int iteration = contestlist.size();
-                if (iteration > 5) {
-                    iteration = 5;
-                }
-                mResults = 5;
-                for (int i = 0; i < iteration; i++) {
-                    paginatedContestlist.add(contestlist.get(i));
-                }
-                Log.d(TAG, "contest: sss" + paginatedContestlist.size());
-                contestJoined = new AdapterContestJoined(getContext(), paginatedContestlist);
-                contestJoined.setHasStableIds(true);
-                joinedContestRv.setAdapter(contestJoined);
-
-            } catch (NullPointerException e) {
-                Log.e(TAG, "Null pointer exception" + e.getMessage());
-
-            } catch (IndexOutOfBoundsException e) {
-                Log.e(TAG, "index out of bound" + e.getMessage());
-
-            }
-
-        } else {
-            noPost.setVisibility(View.VISIBLE);
-            bottomProgress.setVisibility(View.GONE);
-
-        }
-    }
-
-    public void displayMoreContest() {
-        Log.d(TAG, "display next 10 contest");
-        bottomProgress.setVisibility(View.GONE);
-
-        try {
-            if (contestlist.size() > mResults && contestlist.size() > 0) {
-
-                int iterations;
-                if (contestlist.size() > (mResults + 10)) {
-                    Log.d(TAG, "display next 20 contest");
-                    iterations = 10;
-                } else {
-                    Log.d(TAG, "display less tha 20 contest");
-                    iterations = contestlist.size() - mResults;
-                }
-                for (int i = mResults; i < mResults + iterations; i++) {
-                    paginatedContestlist.add(contestlist.get(i));
-
-                }
-                joinedContestRv.post(new Runnable() {
-                    @Override
-                    public void run() {
-                        contestJoined.notifyDataSetChanged();
-                    }
-                });
-                mResults = mResults + iterations;
-
-
-            } else {
-                bottomProgress.setVisibility(View.GONE);
-
-            }
-
-        } catch (NullPointerException e) {
-            Log.e(TAG, "Null pointer exception" + e.getMessage());
-
-        } catch (IndexOutOfBoundsException e) {
-            Log.e(TAG, "index out of bound" + e.getMessage());
-
-        }
-
-    }
-
-}
Index: app/src/main/java/com/orion/orion/contest/create/CreateContestFragment.java
===================================================================
--- app/src/main/java/com/orion/orion/contest/create/CreateContestFragment.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/java/com/orion/orion/contest/create/CreateContestFragment.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
@@ -1,419 +0,0 @@
-package com.orion.orion.contest.create;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.os.Build;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Looper;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.annotation.RequiresApi;
-import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
-
-import com.google.android.material.floatingactionbutton.FloatingActionButton;
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.database.DataSnapshot;
-import com.google.firebase.database.DatabaseError;
-import com.google.firebase.database.DatabaseReference;
-import com.google.firebase.database.FirebaseDatabase;
-import com.google.firebase.database.ValueEventListener;
-import com.google.gson.Gson;
-import com.google.gson.reflect.TypeToken;
-import com.orion.orion.Adapters.AdapterContestCreated;
-import com.orion.orion.R;
-
-import java.lang.reflect.Type;
-import java.util.ArrayList;
-import java.util.Collections;
-public class CreateContestFragment extends Fragment {
-
-    private static final String TAG = "JOINED FRAGMENT";
-    RecyclerView createdContestRv;
-    FloatingActionButton floatbtn;
-    private ArrayList<com.orion.orion.models.CreateForm> contestlist;
-    private ArrayList<com.orion.orion.models.CreateForm> paginatedContestlist;
-    private int mResults;
-    private AdapterContestCreated contestCreated;
-    ProgressBar bottomProgress;
-
-
-    TextView noPost;
-    SwipeRefreshLayout contestRefresh;
-    boolean flag1 = false;
-    private static int RETRY_DURATION = 1000;
-    private static final Handler handler = new Handler(Looper.getMainLooper());
-
-    private View view;
-    //    SP
-    private Gson gson;
-    private SharedPreferences sp;
-
-    @Override
-    public void onActivityCreated(@Nullable  Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-        sp = getContext().getSharedPreferences("shared preferences", Context.MODE_PRIVATE);
-        gson = new Gson();
-        getCreateListFromSP();
-    }
-
-    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
-    @Nullable
-    @Override
-    public View onCreateView(@NonNull final LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-
-        view = inflater.inflate(R.layout.activity_fragment_create_contest, container, false);
-
-        floatbtn = view.findViewById(R.id.float_btn);
-        contestRefresh=view.findViewById(R.id.contest_refresh);
-        noPost=view.findViewById(R.id.noPost);
-        bottomProgress=view.findViewById(R.id.pro2);
-        createdContestRv = view.findViewById(R.id.recycler_view3);
-
-        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getContext());
-        contestlist = new ArrayList<>();
-
-        linearLayoutManager.setItemPrefetchEnabled(true);
-        linearLayoutManager.setInitialPrefetchItemCount(20);
-        createdContestRv.setHasFixedSize(true);
-        createdContestRv.setItemViewCacheSize(10);
-        createdContestRv.setDrawingCacheEnabled(true);
-        createdContestRv.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_LOW);
-        createdContestRv.setLayoutManager(linearLayoutManager);
-
-        floatbtn.setOnClickListener(v -> {
-            Intent i = new Intent(getActivity(), CreateForm.class);
-            startActivity(i);
-        });
-        createdContestRv.addOnScrollListener(new RecyclerView.OnScrollListener() {
-            @Override
-            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
-                super.onScrollStateChanged(recyclerView, newState);
-                if (!recyclerView.canScrollVertically(1) && newState == RecyclerView.SCROLL_STATE_IDLE) {
-                    if (contestlist.size()!=paginatedContestlist.size())
-                        bottomProgress.setVisibility(View.VISIBLE);
-                    displayMoreContest();
-                }else bottomProgress.setVisibility(View.GONE);
-            }
-        });
-        contestRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
-            @Override
-            public void onRefresh() {
-                flag1 = false;
-                getCreateListFromSP();
-                checkRefresh();
-            }
-            private void checkRefresh() {
-                if (contestRefresh.isRefreshing() && flag1 ) {
-                    contestRefresh.setRefreshing(false);
-                    handler.removeCallbacks(this::checkRefresh);
-                    flag1 = false;
-                } else handler.postDelayed(this::checkRefresh, RETRY_DURATION);
-            }
-        });
-
-
-        return view;
-    }
-
-    private void getContest() {
-
-
-        DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
-        reference.child(getString(R.string.dbname_contests))
-                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                .child(getString(R.string.created_contest))
-                .addValueEventListener(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
-                        if (dataSnapshot.exists()) {
-                            contestlist.clear();
-                            for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
-
-                                com.orion.orion.models.CreateForm createForm = snapshot.getValue(com.orion.orion.models.CreateForm.class);
-
-                                contestlist.add(createForm);
-                            }
-                            Collections.reverse(contestlist);
-
-//                        Add newly Created ArrayList to Shared Preferences
-                            SharedPreferences.Editor editor = sp.edit();
-                            String json = gson.toJson(contestlist);
-                            editor.putString("createlist", json);
-                            editor.apply();
-
-                            displaycontest();
-
-                        }else{
-                            displaycontest();
-
-                        }
-                    }
-
-
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError databaseError) {
-
-                    }
-                });
-    }
-    //  fetching FollowerList  from SharedPreferences
-    private void getCreateListFromSP() {
-        String json = sp.getString("createlist", null);
-
-        Type type = new TypeToken<ArrayList<com.orion.orion.models.CreateForm>>() {
-        }.getType();
-        contestlist = gson.fromJson(json, type);
-        if (contestlist == null) {    //        if no arrayList is present
-            contestlist = new ArrayList<>();
-            Log.d(TAG, "getCreateListFromSP: 1");
-            getContest();             //            make new Arraylist
-
-        } else {
-            Log.d(TAG, "getCreateListFromSP: 2");
-
-            checkCreateUpdate();       //         Check if new contest is there
-
-        }
-
-    }
-
-    private void checkCreateUpdate() {
-        DatabaseReference refer = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_contests));
-
-        refer.child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                .child(getString(R.string.field_contest_created_updates))
-                .addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                        if (snapshot.exists()){
-                            int x=0;
-
-                            for (DataSnapshot snapshot1:snapshot.getChildren()){
-                                x++;
-                                for (com.orion.orion.models.CreateForm a:contestlist){
-
-
-                                    if (a.getCi().equals(snapshot1.getKey())){
-
-                                        a.setSt(snapshot1.getValue().toString());
-                                    }
-
-                                    if (x==snapshot.getChildrenCount()){
-                                        //    Add newly Created ArrayList to Shared Preferences
-                                        SharedPreferences.Editor editor = sp.edit();
-                                        String json = gson.toJson(contestlist);
-                                        editor.putString("createlist", json);
-                                        editor.apply();
-
-                                        refer.child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                                                .child(getString(R.string.field_contest_created_updates))
-                                                .removeValue();
-
-                                        checkNewContesUpdate();
-                                    }
-
-                                }
-
-
-
-
-                            }
-                        }else {
-                            checkNewContesUpdate();
-
-                        }
-                    }
-
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
-
-                    }
-                });
-    }
-
-    private void checkNewContesUpdate() {
-        DatabaseReference refer = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_contests));
-        refer.child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                .child(getString(R.string.created_contest))
-                .addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                        if (snapshot.exists()) {
-                            if (snapshot.getChildrenCount() != contestlist.size()) {
-                                updateCreateList();
-
-                            } else {
-                                refer.child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-                                        .child(getString(R.string.created_contest))
-                                        .orderByKey()
-                                        .limitToLast(1)
-                                        .addListenerForSingleValueEvent(new ValueEventListener() {
-                                            @Override
-                                            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                                                if (snapshot.exists()) {
-                                                    for (DataSnapshot snapshot1 : snapshot.getChildren()) {
-                                                        if (contestlist.get(0).getCi().equals(snapshot1.getKey())) {
-                                                            displaycontest();
-                                                        } else {
-                                                            updateCreateList();
-                                                        }
-                                                    }
-                                                }
-                                            }
-
-                                            @Override
-                                            public void onCancelled(@NonNull DatabaseError error) {
-
-                                            }
-                                        });
-                            }
-                        }else{
-                            displaycontest();
-                        }
-                    }
-
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
-
-                    }
-                });
-
-    }
-
-    private void updateCreateList() {
-
-        Collections.reverse(contestlist);
-        contestlist.clear();
-        DatabaseReference refer = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_contests));
-        refer.child(FirebaseAuth.getInstance().getCurrentUser().getUid())
-
-                .child(getString(R.string.created_contest))
-
-                .addListenerForSingleValueEvent(new ValueEventListener() {
-                    @Override
-                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                        for (DataSnapshot snapshot1:snapshot.getChildren()){
-                            com.orion.orion.models.CreateForm createForm = snapshot1.getValue(com.orion.orion.models.CreateForm.class);
-
-                            contestlist.add(createForm);
-                        }
-                        Collections.reverse(contestlist);
-
-                        //    Add newly Created ArrayList to Shared Preferences
-                        SharedPreferences.Editor editor = sp.edit();
-                        String json = gson.toJson(contestlist);
-                        editor.putString("createlist", json);
-                        editor.apply();
-
-                        displaycontest();
-                    }
-
-                    @Override
-                    public void onCancelled(@NonNull DatabaseError error) {
-
-                    }
-                });
-
-
-    }
-
-    private void displaycontest() {
-        Log.d(TAG, "display first 10 contest");
-        noPost.setVisibility(View.GONE);
-        bottomProgress.setVisibility(View.GONE);
-
-
-        flag1=true;
-        paginatedContestlist = new ArrayList<>();
-        if (contestlist != null&&contestlist.size()!=0) {
-
-            try {
-
-
-                int iteration = contestlist.size();
-                if (iteration > 5) {
-                    iteration = 5;
-                }
-                mResults = 5;
-                for (int i = 0; i < iteration; i++) {
-                    paginatedContestlist.add(contestlist.get(i));
-                }
-                Log.d(TAG, "contest: sss" + paginatedContestlist.size());
-                contestCreated = new AdapterContestCreated(getContext(), paginatedContestlist);
-                contestCreated.setHasStableIds(true);
-                createdContestRv.setAdapter(contestCreated);
-
-            } catch (NullPointerException e) {
-                Log.e(TAG, "Null pointer exception" + e.getMessage());
-
-            } catch (IndexOutOfBoundsException e) {
-                Log.e(TAG, "index out of bound" + e.getMessage());
-
-            }
-
-        }else {
-            noPost.setVisibility(View.VISIBLE);
-            bottomProgress.setVisibility(View.GONE);
-
-        }
-    }
-
-    public void displayMoreContest() {
-        Log.d(TAG, "display next 10 contest");
-
-        try {
-            if (contestlist.size() > mResults && contestlist.size() > 0) {
-
-                int iterations;
-                if (contestlist.size() > (mResults + 10)) {
-                    Log.d(TAG, "display next 20 contest");
-                    iterations = 10;
-                } else {
-                    Log.d(TAG, "display less tha 20 contest");
-                    iterations = contestlist.size() - mResults;
-                }
-                for (int i = mResults; i < mResults + iterations; i++) {
-                    paginatedContestlist.add(contestlist.get(i));
-
-                }
-                createdContestRv.post(new Runnable() {
-                    @Override
-                    public void run() {
-                        contestCreated.notifyItemRangeInserted(mResults,iterations);
-                    }
-                });
-                mResults = mResults + iterations;
-
-
-            }else{
-                bottomProgress.setVisibility(View.GONE);
-
-            }
-
-        } catch (NullPointerException e) {
-            Log.e(TAG, "Null pointer exception" + e.getMessage());
-
-        } catch (IndexOutOfBoundsException e) {
-            Log.e(TAG, "index out of bound" + e.getMessage());
-
-        }
-
-    }
-
-    @Override
-    public void onCreate(@Nullable Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-    }
-}
Index: app/src/main/res/layout/activity_fragment_upcoming_contest.xml
===================================================================
--- app/src/main/res/layout/activity_fragment_upcoming_contest.xml	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/res/layout/activity_fragment_upcoming_contest.xml	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
@@ -1,247 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:background="@color/white"
-
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-
-    <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:id="@+id/contest_refresh">
-
-    <RelativeLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content">
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:visibility="visible"
-
-            android:id="@+id/relparent">
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:background="@drawable/pink_round_button"
-            android:layout_height="wrap_content">
-            <LinearLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:gravity="center_horizontal"
-                android:layout_centerHorizontal="true"
-                android:orientation="horizontal">
-
-                <LinearLayout
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginTop="10dp"
-                    android:layout_marginBottom="10dp"
-
-                    android:orientation="vertical">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:paddingLeft="10dp"
-                android:paddingRight="10dp"
-                android:layout_marginTop="5dp"
-                android:textStyle="bold"
-
-                android:id="@+id/domain"
-                android:text="Domain: "
-                android:textColor="@color/white"
-              />
-                    <TextView
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:paddingLeft="10dp"
-                        android:paddingRight="10dp"
-                        android:layout_marginTop="5dp"
-
-                        android:id="@+id/entryfee"
-                        android:textStyle="bold"
-                        android:text="Entry Fee: "
-                        android:textColor="@color/white"
-                        />
-
-                </LinearLayout>
-
-            <LinearLayout
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_centerHorizontal="true"
-                android:layout_marginTop="5dp"
-
-                android:layout_marginBottom="10dp"
-                android:orientation="vertical">
-                <Spinner
-                    android:layout_width="wrap_content"
-                    android:background="@drawable/white_round_button"
-                    android:layout_height="wrap_content"
-                    android:entries="@array/domain2"
-                    android:gravity="center"
-                    android:layout_marginTop="5dp"
-                    android:id="@+id/domainspinner"
-                    />
-            <Spinner
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:entries="@array/entryfee2"
-
-                android:textAlignment="center"
-
-                android:background="@drawable/white_round_button"
-                android:id="@+id/entryfeeSpinner"
-                 />
-            </LinearLayout>
-            </LinearLayout>
-        </RelativeLayout>
-
-        </RelativeLayout>
-
-        <EditText
-            android:layout_width="match_parent"
-            android:id="@+id/search"
-            android:layout_below="@id/relparent"
-            android:layout_margin="10dp"
-            android:hint="Enter contest Key"
-            android:gravity="center"
-            android:background="@drawable/rectangular_round_searchbar"
-            android:layout_height="30dp"/>
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_below="@+id/search"
-            android:background="#CCFFFFFF"
-            android:id="@+id/drag">
-
-            <ImageView
-                android:id="@+id/filter"
-                android:layout_width="25dp"
-                android:layout_height="25dp"
-                android:layout_centerVertical="true"
-                android:layout_centerHorizontal="true"
-                android:layout_marginRight="10dp"
-                android:src="@drawable/ic_filter_black"
-                android:visibility="gone" />
-            <ImageView
-                android:layout_width="25dp"
-                android:layout_height="25dp"
-                android:visibility="visible"
-                android:layout_centerVertical="true"
-                android:layout_marginRight="10dp"
-                android:layout_marginEnd="10dp"
-                android:id="@+id/filteryellow"
-                android:src="@drawable/ic_filter_peach"
-                android:layout_centerHorizontal="true"
-                />
-
-
-            <ImageView
-            android:layout_width="33dp"
-            android:layout_height="33dp"
-            android:layout_marginRight="10dp"
-            android:layout_marginEnd="10dp"
-            android:id="@+id/gridB"
-            android:src="@drawable/ic_grid_black"
-             />
-
-            <ImageView
-                android:layout_width="27dp"
-                android:layout_height="27dp"
-                android:id="@+id/columnY"
-                android:layout_marginLeft="10dp"
-                android:layout_marginStart="10dp"
-                android:layout_centerVertical="true"
-                android:src="@drawable/ic_column_yellow"
-                android:layout_alignParentRight="true"
-                 />
-            <ImageView
-                android:layout_width="33dp"
-                android:layout_height="33dp"
-                android:id="@+id/gridY"
-                android:visibility="gone"
-                android:layout_marginRight="10dp"
-                android:layout_marginEnd="10dp"
-                android:src="@drawable/ic_grid_yellow"
-                />
-
-            <ImageView
-                android:layout_width="27dp"
-                android:layout_height="27dp"
-                android:id="@+id/columnB"
-                android:visibility="gone"
-                android:layout_marginLeft="10dp"
-                android:layout_marginStart="10dp"
-                android:layout_centerVertical="true"
-                android:src="@drawable/ic_column_black"
-                android:layout_alignParentRight="true"
-                />
-        </RelativeLayout>
-
-
-
-        <androidx.recyclerview.widget.RecyclerView
-            android:layout_below="@+id/drag"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-
-        android:id="@+id/recycler_view1">
-
-    </androidx.recyclerview.widget.RecyclerView>
-        <ProgressBar
-            android:id="@+id/pro2"
-            style="?android:attr/progressBarStyle"
-            android:layout_width="25dp"
-            android:layout_height="25dp"
-            android:layout_alignParentBottom="true"
-            android:layout_centerHorizontal="true"
-            android:background="@android:color/transparent"
-            android:visibility="visible" />
-    </RelativeLayout>
-    </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:gravity="top|end"
-        android:id="@+id/pro"
-        android:background="#CC333232"
-        android:visibility="gone"
-        android:orientation="vertical">
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:gravity="center_horizontal"
-            android:layout_gravity="center_horizontal">
-            <ImageView
-                android:layout_width="30dp"
-                android:layout_height="30dp"
-                android:id="@+id/cross"
-                android:layout_centerHorizontal="true"
-
-                android:src="@drawable/ic_white_cross"
-                android:layout_margin="10dp"/>
-
-            <androidx.recyclerview.widget.RecyclerView
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_centerVertical="true"
-                android:layout_below="@+id/cross"
-                android:id="@+id/recyclerKey">
-
-            </androidx.recyclerview.widget.RecyclerView>
-        </RelativeLayout>
-    </LinearLayout>
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="NO UPCOMING CONTEST"
-        android:id="@+id/noPost"
-        android:visibility="gone"
-        android:gravity="center"
-        android:layout_centerHorizontal="true"
-        android:layout_centerVertical="true"
-        android:textSize="18sp"/>
-</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_fragment_joined_contest.xml
===================================================================
--- app/src/main/res/layout/activity_fragment_joined_contest.xml	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/res/layout/activity_fragment_joined_contest.xml	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout
-xmlns:android="http://schemas.android.com/apk/res/android"
-android:layout_width="match_parent"
-android:layout_height="match_parent">
-    <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:id="@+id/contest_refresh">
-<androidx.recyclerview.widget.RecyclerView
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:id="@+id/recycler_view2">
-
-</androidx.recyclerview.widget.RecyclerView>
-        <ProgressBar
-            android:id="@+id/pro2"
-            style="?android:attr/progressBarStyle"
-            android:layout_width="25dp"
-            android:layout_height="25dp"
-            android:layout_alignParentBottom="true"
-            android:layout_centerHorizontal="true"
-            android:background="@android:color/transparent"
-            android:visibility="visible" />
-    </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>
-
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="NO CONTEST JOINED"
-        android:id="@+id/noPost"
-        android:visibility="gone"
-        android:gravity="center"
-        android:layout_centerHorizontal="true"
-        android:layout_centerVertical="true"
-        android:textSize="18sp"/>
-</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/orion/orion/contest/contestMainActivity.java
===================================================================
--- app/src/main/java/com/orion/orion/contest/contestMainActivity.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/java/com/orion/orion/contest/contestMainActivity.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
@@ -1,149 +0,0 @@
-
-package com.orion.orion.contest;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.os.AsyncTask;
-import android.os.Bundle;
-import android.os.PersistableBundle;
-import android.util.Log;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.inputmethod.InputMethodManager;
-
-import androidx.annotation.Nullable;
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.fragment.app.Fragment;
-import androidx.viewpager.widget.ViewPager;
-
-import com.google.android.material.tabs.TabLayout;
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.auth.FirebaseUser;
-import com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;
-import com.orion.orion.Adapters.SectionPagerAdapter;
-import com.orion.orion.R;
-import com.orion.orion.contest.create.CreateContestFragment;
-import com.orion.orion.contest.joined.JoinedContestFragment;
-import com.orion.orion.contest.upcoming.UpcomingContestFragment;
-import com.orion.orion.login.LoginActivity;
-import com.orion.orion.util.BottomNaavigationViewHelper;
-
-import static java.security.AccessController.getContext;
-
-public class contestMainActivity extends AppCompatActivity {
-    private static final String TAG = "contest";
-    private static final int ACTIVITY_NUM = 0;
-    private static final int CREATE_CONTEST = 1;
-    public static final String TIME_SERVER = "time-a.nist.gov";
-    private Context mContext;
-    private FirebaseAuth mAuth;
-    private FirebaseAuth.AuthStateListener mAuthListener;
-    private FirebaseUser mUser;
-
-    private ViewPager mViewPager;
-
-    @Override
-    protected void onCreate(@Nullable Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_contest);
-        Log.d(TAG, "onCreate: started.");
-        mContext = contestMainActivity.this;
-        mViewPager = findViewById(R.id.viewpager_container);
-        mViewPager.setOffscreenPageLimit(3);
-        setupBottomNavigationView();
-        setupFirebaseAuth();
-        checkCurrentuser(mAuth.getCurrentUser());
-        setupViewPager();
-        hideSoftKeyboard();
-        Log.d(TAG, " context"+this+"  "+getContext()+"  "+getApplicationContext());
-    }
-
-    //    for adding 3 tabs -media,home,message
-
-    private void setupViewPager() {
-        SectionPagerAdapter adapter = new SectionPagerAdapter(getSupportFragmentManager());
-        adapter.addFragment(new CreateContestFragment());
-        adapter.addFragment(new UpcomingContestFragment());
-        adapter.addFragment(new JoinedContestFragment());
-        mViewPager.postDelayed(() -> {
-            mViewPager.setAdapter(adapter);
-            TabLayout tablayout = (TabLayout) findViewById(R.id.tabs);
-            tablayout.setupWithViewPager(mViewPager);
-            mViewPager.setCurrentItem(CREATE_CONTEST);
-//        for giving icon to them
-            tablayout.getTabAt(0).setText("create");
-            tablayout.getTabAt(1).setText("upcoming");
-            tablayout.getTabAt(2).setText("joined");
-        }, 1000);
-    }
-    @Override
-    public void onBackPressed() {
-        super.onBackPressed();
-
-    }
-
-    private void hideSoftKeyboard() {
-        if (getCurrentFocus() != null) {
-            InputMethodManager imm = (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);
-            imm.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0);
-        }
-    }
-
-    private void setupBottomNavigationView() {
-        Log.d(TAG, " setupBottomNavigationView:setting up BottomNavigationView");
-        BottomNavigationViewEx bottomNavigationViewEx = (BottomNavigationViewEx) findViewById(R.id.BottomNavViewBar);
-        BottomNaavigationViewHelper.setupBottomNavigationView(bottomNavigationViewEx,this);
-        BottomNaavigationViewHelper.enableNavigation(contestMainActivity.this, this, bottomNavigationViewEx);
-
-        Menu menu = bottomNavigationViewEx.getMenu();
-        MenuItem menuItem = menu.getItem(ACTIVITY_NUM);
-        menuItem.setChecked(true);
-
-    }
-
-    private void checkCurrentuser(FirebaseUser user) {
-        Log.d(TAG, "checkCurrentuser:check if current user logged in");
-        if (user == null) startActivity(new Intent(contestMainActivity.this, LoginActivity.class));
-    }
-
-    private void setupFirebaseAuth() {
-        Log.d(TAG, "setup FirebaseAuth: setting up firebase auth.");
-        mAuth = FirebaseAuth.getInstance();
-        mAuthListener = firebaseAuth -> {
-            mUser = firebaseAuth.getCurrentUser();
-            if (mUser == null) {
-                Log.d(TAG, "onAuthStateChanged:signed_out");
-                Log.d(TAG, "onAuthStateChanged: navigating to login");
-                SharedPreferences settings = getSharedPreferences("shared preferences", Context.MODE_PRIVATE);
-                new android.app.AlertDialog.Builder(mContext)
-                        .setTitle("No user logon found")
-                        .setMessage("We will be logging u out. \n Please try to log in again")
-                        .setPositiveButton(android.R.string.ok, (dialog, which) -> {
-                            Intent intent = new Intent(mContext, LoginActivity.class);
-                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);
-                            settings.edit().clear().apply();
-                            if (mAuthListener != null) mAuth.removeAuthStateListener(mAuthListener);
-                            startActivity(intent);
-                        })
-                        .show();
-            } else Log.d(TAG, "onAuthStateChanged: signed_in:" + mUser.getUid());
-        };
-    }
-
-    @Override
-    public void onStart() {
-        super.onStart();
-        mAuth.addAuthStateListener(mAuthListener);
-        mViewPager.setCurrentItem(CREATE_CONTEST);
-        checkCurrentuser(mAuth.getCurrentUser());
-    }
-
-    @Override
-    public void onStop() {
-        super.onStop();
-        if (mAuthListener != null) mAuth.removeAuthStateListener(mAuthListener);
-    }
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/orion/orion/contest/upcoming/UpcomingContestFragment.java
===================================================================
--- app/src/main/java/com/orion/orion/contest/upcoming/UpcomingContestFragment.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/java/com/orion/orion/contest/upcoming/UpcomingContestFragment.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
@@ -1,702 +0,0 @@
-package com.orion.orion.contest.upcoming;
-
-import android.animation.Animator;
-import android.animation.ValueAnimator;
-import android.os.Build;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Looper;
-import android.text.Editable;
-import android.text.TextWatcher;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.view.animation.DecelerateInterpolator;
-import android.widget.Adapter;
-import android.widget.AdapterView;
-import android.widget.EditText;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.ProgressBar;
-import android.widget.RelativeLayout;
-import android.widget.Spinner;
-import android.widget.TextView;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.annotation.RequiresApi;
-import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.GridLayoutManager;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
-
-import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.auth.FirebaseUser;
-import com.google.firebase.database.DataSnapshot;
-import com.google.firebase.database.DatabaseError;
-import com.google.firebase.database.DatabaseReference;
-import com.google.firebase.database.FirebaseDatabase;
-import com.google.firebase.database.ValueEventListener;
-import com.orion.orion.Adapters.AdapterContestJoined;
-import com.orion.orion.Adapters.AdapterContestSearch;
-import com.orion.orion.Adapters.AdapterContestUpcoming;
-import com.orion.orion.Adapters.AdapterContestUpcomingGrid;
-import com.orion.orion.R;
-import com.orion.orion.models.ContestDetail;
-import com.orion.orion.util.SNTPClient;
-import com.orion.orion.util.StringManipilation;
-
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Date;
-import java.util.Objects;
-import java.util.TimeZone;
-
-
-public class UpcomingContestFragment extends Fragment {
-
-    private static final String TAG = "UPCOMING FRAGMENT";
-    RecyclerView upcomingContestRv, contestSearchRv, upcomingFilterRv;
-    private ArrayList<ContestDetail> contestlist;
-    private FirebaseAuth fAuth;
-    private EditText searchBox;
-    int prevHeight;
-    int height, dummyHeight;
-    TextView noPost;
-    LinearLayout blurBg;
-    int x = 0;
-    private int mResults;
-    ProgressBar bottomProgress;
-
-    private int mResults2;
-    RelativeLayout relativeLayout;
-    ImageView gridB, gridY, colY, colB, filterB, filterY, cross;
-    private ArrayList<ContestDetail> contestlist2;
-    private ArrayList<ContestDetail> contestlist3;
-    private ArrayList<ContestDetail> paginatedcontestlist;
-    private ArrayList<ContestDetail> paginatedcontestSearch;
-    SwipeRefreshLayout contesRefresh;
-    boolean flag1 = false;
-    private static int RETRY_DURATION = 1000;
-    private static final Handler handler = new Handler(Looper.getMainLooper());
-
-    private Spinner domainspinner, entryfeeSpinner;
-    String domain = "Overall", entryfee = "Overall";
-
-
-    private View view;
-
-
-    private AdapterContestUpcoming contestUpcoming;
-    private AdapterContestUpcomingGrid adapterContestUpcomingGrid;
-    private AdapterContestSearch adapterContestSearch;
-
-    @Override
-    public void onActivityCreated(@Nullable  Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-        getContestFiltered(domain, entryfee);
-    }
-
-    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
-    @Nullable
-    @Override
-    public View onCreateView(@NonNull final LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        view = inflater.inflate(R.layout.activity_fragment_upcoming_contest, container, false);
-
-        initWidgets();
-
-        final GridLayoutManager[] linearLayoutManager1 = {new GridLayoutManager(getContext(), 1)};
-        contestlist2 = new ArrayList<>();
-        adapterContestSearch = new AdapterContestSearch(getContext(), contestlist2);
-
-        contestSearchRv.setHasFixedSize(true);
-        contestSearchRv.setLayoutManager(linearLayoutManager1[0]);
-        contestSearchRv.setAdapter(adapterContestSearch);
-
-        final GridLayoutManager[] linearLayoutManager = {new GridLayoutManager(getContext(), 1)};
-        contestlist = new ArrayList<>();
-        contestUpcoming = new AdapterContestUpcoming(getContext(), contestlist);
-
-        upcomingContestRv.setHasFixedSize(true);
-        upcomingContestRv.setLayoutManager(linearLayoutManager[0]);
-        contestUpcoming.setHasStableIds(true);
-        upcomingContestRv.setAdapter(contestUpcoming);
-
-
-        gridB.setOnClickListener(v -> {
-            gridB.setVisibility(View.GONE);
-            gridY.setVisibility(View.VISIBLE);
-            colY.setVisibility(View.GONE);
-            colB.setVisibility(View.VISIBLE);
-            linearLayoutManager[0] = new GridLayoutManager(getContext(), 2);
-            upcomingContestRv.setLayoutManager(linearLayoutManager[0]);
-            adapterContestUpcomingGrid = new AdapterContestUpcomingGrid(getContext(), paginatedcontestlist);
-            adapterContestUpcomingGrid.setHasStableIds(true);
-            upcomingContestRv.setAdapter(adapterContestUpcomingGrid);
-
-        });
-        filterB.setOnClickListener(v -> {
-            filterY.setVisibility(View.VISIBLE);
-            filterB.setVisibility(View.GONE);
-            expand(relativeLayout, 1000);
-        });
-        filterY.setOnClickListener(v -> {
-            filterY.setVisibility(View.GONE);
-            filterB.setVisibility(View.VISIBLE);
-            expand(relativeLayout, 1000);
-        });
-        colB.setOnClickListener(v -> {
-            gridB.setVisibility(View.VISIBLE);
-            gridY.setVisibility(View.GONE);
-            colY.setVisibility(View.VISIBLE);
-            colB.setVisibility(View.GONE);
-            linearLayoutManager[0] = new GridLayoutManager(getContext(), 1);
-            upcomingContestRv.setLayoutManager(linearLayoutManager[0]);
-            contestUpcoming = new AdapterContestUpcoming(getContext(), paginatedcontestlist);
-            contestUpcoming.setHasStableIds(true);
-            upcomingContestRv.setAdapter(contestUpcoming);
-        });
-        cross.setOnClickListener(view1 -> {
-            paginatedcontestSearch.clear();
-            adapterContestSearch.notifyDataSetChanged();
-            searchBox.setText("");
-            blurBg.setVisibility(View.GONE);
-        });
-        contestSearchRv.addOnScrollListener(new RecyclerView.OnScrollListener() {
-            @Override
-            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
-                super.onScrollStateChanged(recyclerView, newState);
-                if (!recyclerView.canScrollVertically(1) && newState == RecyclerView.SCROLL_STATE_IDLE)
-                    displayMoreSearch();
-            }
-        });
-        contestlist3 = new ArrayList<>();
-        fAuth = FirebaseAuth.getInstance();
-        upcomingContestRv.addOnScrollListener(new RecyclerView.OnScrollListener() {
-            @Override
-            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
-                super.onScrollStateChanged(recyclerView, newState);
-                if (!recyclerView.canScrollVertically(1) && newState == RecyclerView.SCROLL_STATE_IDLE) {
-                    if (contestlist.size() != paginatedcontestlist.size())
-                        bottomProgress.setVisibility(View.VISIBLE);
-                    displayMoreContest();
-                } else bottomProgress.setVisibility(View.GONE);
-            }
-        });
-        domainspinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
-            @Override
-            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
-                domain = domainspinner.getSelectedItem().toString();
-                getContestFiltered(domain, entryfee);
-            }
-
-            @Override
-            public void onNothingSelected(AdapterView<?> parent) {
-
-            }
-        });
-        entryfeeSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
-            @Override
-            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
-                entryfee = entryfeeSpinner.getSelectedItem().toString();
-                getContestFiltered(domain, entryfee);
-            }
-
-            @Override
-            public void onNothingSelected(AdapterView<?> parent) {
-
-            }
-        });
-        searchBox.addTextChangedListener(new TextWatcher() {
-            @Override
-            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
-
-            }
-
-            @Override
-            public void onTextChanged(CharSequence s, int start, int before, int count) {
-
-            }
-
-            @Override
-            public void afterTextChanged(Editable s) {
-
-                String key = "";
-                if (!searchBox.getText().toString().contains(".") &&
-                        !searchBox.getText().toString().contains(",") &&
-                        !searchBox.getText().toString().contains("#") &&
-                        !searchBox.getText().toString().contains("$") &&
-                        !searchBox.getText().toString().contains("[") &&
-                        !searchBox.getText().toString().contains("]"))
-                    key = searchBox.getText().toString();
-                searchContest(key);
-            }
-        });
-        contesRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
-            @Override
-            public void onRefresh() {
-                flag1 = false;
-                getContestFiltered(domain, entryfee);
-                Log.d(TAG, "onRefresh: 11");
-                checkRefresh();
-            }
-
-            private void checkRefresh() {
-                if (contesRefresh.isRefreshing() && flag1) {
-                    contesRefresh.setRefreshing(false);
-                    handler.removeCallbacks(this::checkRefresh);
-                    flag1 = false;
-                } else handler.postDelayed(this::checkRefresh, RETRY_DURATION);
-            }
-        });
-
-        return view;
-    }
-    public void initWidgets(){
-        upcomingContestRv = view.findViewById(R.id.recycler_view1);
-        contestSearchRv = view.findViewById(R.id.recyclerKey);
-        searchBox = view.findViewById(R.id.search);
-        domainspinner = view.findViewById(R.id.domainspinner);
-        entryfeeSpinner = view.findViewById(R.id.entryfeeSpinner);
-        gridB = view.findViewById(R.id.gridB);
-        gridY = view.findViewById(R.id.gridY);
-        colB = view.findViewById(R.id.columnB);
-        colY = view.findViewById(R.id.columnY);
-        filterB = view.findViewById(R.id.filter);
-        filterY = view.findViewById(R.id.filteryellow);
-        relativeLayout = view.findViewById(R.id.relparent);
-        contesRefresh = view.findViewById(R.id.contest_refresh);
-        blurBg = view.findViewById(R.id.pro);
-        cross = view.findViewById(R.id.cross);
-        bottomProgress = view.findViewById(R.id.pro2);
-        noPost = view.findViewById(R.id.noPost);
-    }
-
-    public void expand(final View v, int duration) {
-        final boolean expand = v.getVisibility() != View.VISIBLE;
-
-        prevHeight = v.getHeight();
-        if (x == 0) {
-            x++;
-            dummyHeight = v.getHeight();
-        }
-        if (prevHeight == 0) {
-            int measureSpecParams = View.MeasureSpec.getSize(View.MeasureSpec.UNSPECIFIED);
-            v.measure(measureSpecParams, measureSpecParams);
-            height = dummyHeight;
-        } else {
-            height = 0;
-        }
-        ValueAnimator valueAnimator = ValueAnimator.ofInt(prevHeight, height);
-        int finalHeight = height;
-        valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
-            @Override
-            public void onAnimationUpdate(ValueAnimator animation) {
-                v.getLayoutParams().height = (int) animation.getAnimatedValue();
-                v.requestLayout();
-
-            }
-        });
-
-        valueAnimator.addListener(new Animator.AnimatorListener() {
-            @Override
-            public void onAnimationStart(Animator animation) {
-                if (expand) {
-                    v.setVisibility(View.VISIBLE);
-                }
-            }
-
-            @Override
-            public void onAnimationEnd(Animator animation) {
-                if (!expand) {
-                    v.setVisibility(View.INVISIBLE);
-                }
-            }
-
-            @Override
-            public void onAnimationCancel(Animator animation) {
-
-            }
-
-            @Override
-            public void onAnimationRepeat(Animator animation) {
-
-            }
-        });
-        valueAnimator.setInterpolator(new DecelerateInterpolator());
-        valueAnimator.setDuration(duration);
-        valueAnimator.start();
-    }
-
-    private void getContestFiltered(String domain, String entryfee) {
-        final String[] timestamp = new String[1];
-        SNTPClient.getDate(TimeZone.getTimeZone("Asia/Colombo"), new SNTPClient.Listener() {
-            @Override
-            public void onTimeReceived(String rawDate) {
-                // rawDate -> 2019-11-05T17:51:01+0530
-
-                //*************************************************************************
-                String currentTime = StringManipilation.getTime(rawDate);
-                java.text.DateFormat formatter1 = new SimpleDateFormat("dd-MM-yyyy");
-                Date date1 = null;
-                try {
-                    date1 = (Date) formatter1.parse(currentTime);
-                } catch (ParseException e) {
-                    e.printStackTrace();
-                }
-
-                timestamp[0] = String.valueOf(date1.getTime());
-
-                if (!domain.equals("Overall")) {
-
-
-                    DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
-                    reference.child(getString(R.string.dbname_contestlist))
-                            .orderByChild(getString(R.string.field_domain)).equalTo(domain)
-                            .addListenerForSingleValueEvent(new ValueEventListener() {
-                                @Override
-                                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
-                                    contestlist.clear();
-                                    for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
-
-                                        String resDate = snapshot.child(getString(R.string.field_winners_declare)).getValue().toString();
-                                        java.text.DateFormat formatter5 = new SimpleDateFormat("dd-MM-yyyy");
-                                        Date date5 = null;
-                                        try {
-                                            date5 = (Date) formatter5.parse(resDate);
-                                        } catch (ParseException e) {
-                                            e.printStackTrace();
-                                        }
-                                        String resDate2 = String.valueOf(date5.getTime());
-                                        if ((Long.parseLong(resDate2) + 604800000) >= Long.parseLong(timestamp[0])) {
-                                            ContestDetail contestDetail = snapshot.getValue(ContestDetail.class);
-
-                                            contestlist.add(contestDetail);
-                                        }
-                                    }
-                                    if (!entryfee.equals("Overall")) {
-
-                                        contestlist3.clear();
-                                        for (int x = 0; x < contestlist.size(); x++) {
-                                            ContestDetail contestDetail = contestlist.get(x);
-                                            if (entryfee.equals("Free")) {
-                                                if (contestDetail.getEf().equals(entryfee)) {
-
-                                                    contestlist3.add(contestDetail);
-                                                }
-                                            }
-                                            if (!entryfee.equals("Free"))
-                                                if (!contestDetail.getEf().equals("Free")) {
-                                                    contestlist3.add(contestDetail);
-                                                }
-                                        }
-                                        contestlist.clear();
-                                        contestlist.addAll(contestlist3);
-                                        Collections.reverse(contestlist);
-                                        displaycontest();
-                                    } else {
-                                        Collections.reverse(contestlist);
-
-                                        displaycontest();
-                                    }
-
-
-                                }
-
-                                @Override
-                                public void onCancelled(@NonNull DatabaseError databaseError) {
-
-                                }
-                            });
-
-                } else {
-                    DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
-                    reference.child(getString(R.string.dbname_contestlist))
-                            .addListenerForSingleValueEvent(new ValueEventListener() {
-                                @Override
-                                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
-                                    contestlist.clear();
-                                    for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
-                                        String resDate = snapshot.child(getString(R.string.field_winners_declare)).getValue().toString();
-                                        java.text.DateFormat formatter5 = new SimpleDateFormat("dd-MM-yyyy");
-                                        Date date5 = null;
-                                        try {
-                                            date5 = (Date) formatter5.parse(resDate);
-                                        } catch (ParseException e) {
-                                            e.printStackTrace();
-                                        }
-                                        String resDate2 = String.valueOf(date5.getTime());
-                                        if ((Long.parseLong(resDate2) + 604800000) >= Long.parseLong(timestamp[0])) {
-                                            ContestDetail contestDetail = snapshot.getValue(ContestDetail.class);
-
-                                            contestlist.add(contestDetail);
-                                        }
-                                    }
-
-                                    if (!entryfee.equals("Overall")) {
-                                        contestlist3.clear();
-                                        for (int x = 0; x < contestlist.size(); x++) {
-                                            ContestDetail contestDetail = contestlist.get(x);
-                                            if (entryfee.equals("Free")) {
-                                                if (contestDetail.getEf().equals(entryfee)) {
-
-                                                    contestlist3.add(contestDetail);
-                                                }
-                                            }
-                                            if (!entryfee.equals("Free"))
-                                                if (!contestDetail.getEf().equals("Free")) {
-                                                    contestlist3.add(contestDetail);
-                                                }
-                                        }
-                                        contestlist.clear();
-                                        contestlist.addAll(contestlist3);
-                                        Collections.reverse(contestlist);
-                                        displaycontest();
-                                    } else {
-                                        Collections.reverse(contestlist);
-                                        displaycontest();
-                                    }
-
-
-                                }
-
-                                @Override
-                                public void onCancelled(@NonNull DatabaseError databaseError) {
-
-                                }
-                            });
-                }
-            }
-
-
-            @Override
-            public void onError(Exception ex) {
-                Log.e(SNTPClient.TAG, ex.getMessage());
-            }
-        });
-    }
-
-    @Override
-    public void onStart() {
-        super.onStart();
-
-
-    }
-
-    private void searchContest(String key) {
-
-        if (key.length() < 20) {
-
-        } else {
-            DatabaseReference reference = FirebaseDatabase.getInstance().getReference();
-            reference.child(getString(R.string.dbname_contestlist))
-                    .child(key)
-                    .addListenerForSingleValueEvent(new ValueEventListener() {
-                        @Override
-                        public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
-                            if (dataSnapshot.exists()) {
-                                contestlist2.clear();
-                                ContestDetail contestDetail = dataSnapshot.getValue(ContestDetail.class);
-
-                                contestlist2.add(contestDetail);
-                                Collections.reverse(contestlist2);
-                                displaysearch();
-                            }
-
-
-                        }
-
-                        @Override
-                        public void onCancelled(@NonNull DatabaseError databaseError) {
-
-                        }
-                    });
-
-
-        }
-
-    }
-
-    private void displaycontest() {
-        noPost.setVisibility(View.GONE);
-        bottomProgress.setVisibility(View.GONE);
-
-        flag1 = true;
-        paginatedcontestlist = new ArrayList<>();
-
-        if (contestlist != null && contestlist.size() != 0) {
-
-            try {
-
-
-                int iteration = contestlist.size();
-                if (iteration > 5) {
-                    iteration = 5;
-                }
-                mResults = 5;
-                for (int i = 0; i < iteration; i++) {
-                    paginatedcontestlist.add(contestlist.get(i));
-                }
-                if (upcomingContestRv.getAdapter().getClass().equals(contestUpcoming.getClass())) {
-
-                    contestUpcoming = new AdapterContestUpcoming(getContext(), paginatedcontestlist);
-                    contestUpcoming.setHasStableIds(true);
-
-                    upcomingContestRv.setAdapter(contestUpcoming);
-
-                } else {
-
-                    adapterContestUpcomingGrid = new AdapterContestUpcomingGrid(getContext(), paginatedcontestlist);
-                    adapterContestUpcomingGrid.setHasStableIds(true);
-
-                    upcomingContestRv.setAdapter(adapterContestUpcomingGrid);
-                }
-
-
-            } catch (NullPointerException e) {
-                Log.e(TAG, "Null pointer exception" + e.getMessage());
-
-            } catch (IndexOutOfBoundsException e) {
-                Log.e(TAG, "index out of bound" + e.getMessage());
-
-            }
-
-        } else {
-            bottomProgress.setVisibility(View.GONE);
-            noPost.setVisibility(View.VISIBLE);
-            if (upcomingContestRv.getAdapter().getClass().equals(contestUpcoming.getClass())) {
-
-                contestUpcoming = new AdapterContestUpcoming(getContext(), contestlist);
-                contestUpcoming.setHasStableIds(true);
-
-                upcomingContestRv.setAdapter(contestUpcoming);
-
-            } else {
-
-                adapterContestUpcomingGrid = new AdapterContestUpcomingGrid(getContext(), contestlist);
-                adapterContestUpcomingGrid.setHasStableIds(true);
-
-                upcomingContestRv.setAdapter(adapterContestUpcomingGrid);
-
-
-            }
-
-        }
-    }
-
-    public void displayMoreContest() {
-
-        try {
-            if (contestlist.size() > mResults && contestlist.size() > 0) {
-
-                int iterations;
-                if (contestlist.size() > (mResults + 10)) {
-                    iterations = 10;
-                } else {
-                    iterations = contestlist.size() - mResults;
-                }
-                for (int i = mResults; i < mResults + iterations; i++) {
-                    paginatedcontestlist.add(contestlist.get(i));
-
-                }
-                upcomingContestRv.post(new Runnable() {
-                    @Override
-                    public void run() {
-                        if (upcomingContestRv.getAdapter().getClass().equals(contestUpcoming.getClass())) {
-                            contestUpcoming.notifyItemRangeInserted(mResults, iterations);
-
-
-                        } else {
-                            adapterContestUpcomingGrid.notifyItemRangeInserted(mResults, iterations);
-                        }
-                    }
-                });
-                mResults = mResults + iterations;
-
-
-            } else {
-                bottomProgress.setVisibility(View.GONE);
-
-            }
-
-        } catch (NullPointerException e) {
-            Log.e(TAG, "Null pointer exception" + e.getMessage());
-
-        } catch (IndexOutOfBoundsException e) {
-            Log.e(TAG, "index out of bound" + e.getMessage());
-
-        }
-
-    }
-
-    private void displaysearch() {
-        blurBg.setVisibility(View.VISIBLE);
-        paginatedcontestSearch = new ArrayList<>();
-        if (contestlist2 != null) {
-
-            try {
-
-
-                int iteration = contestlist2.size();
-                if (iteration > 5) {
-                    iteration = 5;
-                }
-                mResults2 = 5;
-                for (int i = 0; i < iteration; i++) {
-                    paginatedcontestSearch.add(contestlist2.get(i));
-                }
-                adapterContestSearch = new AdapterContestSearch(getContext(), paginatedcontestSearch);
-                contestSearchRv.setAdapter(adapterContestSearch);
-
-            } catch (NullPointerException e) {
-                Log.e(TAG, "Null pointer exception" + e.getMessage());
-
-            } catch (IndexOutOfBoundsException e) {
-                Log.e(TAG, "index out of bound" + e.getMessage());
-
-            }
-
-        }
-    }
-
-    public void displayMoreSearch() {
-
-        try {
-            if (contestlist2.size() > mResults2 && contestlist2.size() > 0) {
-
-                int iterations;
-                if (contestlist2.size() > (mResults2 + 10)) {
-                    iterations = 10;
-                } else {
-                    iterations = contestlist2.size() - mResults2;
-                }
-                for (int i = mResults2; i < mResults2 + iterations; i++) {
-                    paginatedcontestSearch.add(contestlist2.get(i));
-
-                }
-                mResults2 = mResults2 + iterations;
-                contestSearchRv.post(new Runnable() {
-                    @Override
-                    public void run() {
-                        adapterContestSearch.notifyDataSetChanged();
-                    }
-                });
-
-            }
-
-        } catch (NullPointerException e) {
-            Log.e(TAG, "Null pointer exception" + e.getMessage());
-
-        } catch (IndexOutOfBoundsException e) {
-            Log.e(TAG, "index out of bound" + e.getMessage());
-
-        }
-
-    }
-
-
-}
Index: app/src/main/res/layout/activity_fragment_create_contest.xml
===================================================================
--- app/src/main/res/layout/activity_fragment_create_contest.xml	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/res/layout/activity_fragment_create_contest.xml	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
@@ -1,57 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:background="@color/white"
-    android:layout_height="match_parent"
-    xmlns:app="http://schemas.android.com/apk/res-auto">
-    <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:id="@+id/contest_refresh">
-    <RelativeLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
-
-
-    <androidx.recyclerview.widget.RecyclerView
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:id="@+id/recycler_view3">
-
-    </androidx.recyclerview.widget.RecyclerView>
-        <ProgressBar
-            android:id="@+id/pro2"
-            style="?android:attr/progressBarStyle"
-            android:layout_width="25dp"
-            android:layout_height="25dp"
-            android:layout_alignParentBottom="true"
-            android:layout_centerHorizontal="true"
-            android:background="@android:color/transparent"
-            android:visibility="visible" />
-
-    </RelativeLayout>
-    </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>
-    <com.google.android.material.floatingactionbutton.FloatingActionButton
-        android:layout_height="wrap_content"
-        android:layout_width="wrap_content"
-        android:src="@drawable/ic_add"
-        android:elevation="6dp"
-        app:backgroundTint="@color/colorPrimary"
-        app:fabSize="normal"
-        android:layout_margin="16dp"
-        android:id="@+id/float_btn"
-        android:layout_alignParentEnd="true"
-        android:layout_alignParentBottom="true"
-        android:layout_gravity="end|bottom"
-        android:layout_alignParentRight="true" />
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="NO CONTEST CREATED"
-        android:id="@+id/noPost"
-        android:visibility="gone"
-        android:gravity="center"
-        android:layout_centerHorizontal="true"
-        android:layout_centerVertical="true"
-        android:textSize="18sp"/>
-</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/orion/orion/Notifications/FirebaseMessaging.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.Notifications;\r\n\r\nimport android.app.Notification;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.media.RingtoneManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.core.app.NotificationCompat;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.messaging.FirebaseMessagingService;\r\nimport com.google.firebase.messaging.RemoteMessage;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.contest.contestMainActivity;\r\n\r\nimport java.util.Random;\r\n\r\nimport static androidx.constraintlayout.widget.Constraints.TAG;\r\n\r\npublic class FirebaseMessaging extends FirebaseMessagingService {\r\n\r\n\r\n    @Override\r\n    public void onMessageReceived(@NonNull RemoteMessage remoteMessage) {\r\n        super.onMessageReceived(remoteMessage);\r\n\r\n        SharedPreferences sp = getSharedPreferences(\"SP_USER\", MODE_PRIVATE);\r\n        String savedCurrentUser = sp.getString(\"Current_USERID\", \"None\");\r\n\r\n        String sent = remoteMessage.getData().get(\"sent\");\r\n        String user = remoteMessage.getData().get(\"user\");\r\n        FirebaseUser fuser = FirebaseAuth.getInstance().getCurrentUser();\r\n        if (fuser != null && sent.equals(fuser.getUid())) {\r\n            if (!savedCurrentUser.equals(user)) {\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n                    sendOAndAboveNotification(remoteMessage);\r\n                } else {\r\n                    sendNormalNotification(remoteMessage);\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void sendNormalNotification(RemoteMessage remoteMessage) {\r\n        String user = remoteMessage.getData().get(\"user\");\r\n\r\n        String icon = remoteMessage.getData().get(\"icon\");\r\n\r\n        String title = remoteMessage.getData().get(\"title\");\r\n\r\n        String body = remoteMessage.getData().get(\"body\");\r\n\r\n        RemoteMessage.Notification notification = remoteMessage.getNotification();\r\n        assert user != null;\r\n        Random rand = new Random();\r\n        Log.d(TAG, \"sendOAndAboveNotification: rand  \" + rand.nextInt());\r\n        int i = rand.nextInt();\r\n        Log.d(TAG, \"sendNormalNotification: vo1 \" + i);\r\n\r\n        Intent intent = new Intent(this, contestMainActivity.class);\r\n        Bundle bundle = new Bundle();\r\n        bundle.putString(getString(R.string.his_uid), user);\r\n        intent.putExtras(bundle);\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        PendingIntent pIntent = PendingIntent.getActivity(this, i, intent, PendingIntent.FLAG_ONE_SHOT);\r\n\r\n        Uri defSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);\r\n        NotificationCompat.Builder builder = new NotificationCompat.Builder(this)\r\n                .setSmallIcon(Integer.parseInt(icon))\r\n                .setContentText(body)\r\n                .setContentTitle(title)\r\n                .setAutoCancel(true)\r\n                .setSound(defSoundUri)\r\n                .setContentIntent(pIntent);\r\n\r\n        NotificationManager notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\r\n        int j = 0;\r\n        if (i > 0) {\r\n            j = i;\r\n            notificationManager.notify(j, builder.build());\r\n\r\n        } else {\r\n            i = Math.abs(i);\r\n            j = i;\r\n            notificationManager.notify(j, builder.build());\r\n\r\n        }\r\n        notificationManager.notify(j, builder.build());\r\n\r\n\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    private void sendOAndAboveNotification(RemoteMessage remoteMessage) {\r\n        String user = remoteMessage.getData().get(\"user\");\r\n\r\n        String icon = remoteMessage.getData().get(\"icon\");\r\n\r\n        String title = remoteMessage.getData().get(\"title\");\r\n\r\n        String body = remoteMessage.getData().get(\"body\");\r\n\r\n        RemoteMessage.Notification notification = remoteMessage.getNotification();\r\n        assert user != null;\r\n        Random rand = new Random();\r\n        Log.d(TAG, \"sendOAndAboveNotification: rand  \" + rand.nextInt());\r\n        int i = rand.nextInt();\r\n        Log.d(TAG, \"sendNormalNotification: vo \" + String.valueOf(i));\r\n        Intent intent = new Intent(this, contestMainActivity.class);\r\n        Bundle bundle = new Bundle();\r\n        bundle.putString(getString(R.string.his_uid), user);\r\n        intent.putExtras(bundle);\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        PendingIntent pIntent = PendingIntent.getActivity(this, i, intent, PendingIntent.FLAG_ONE_SHOT);\r\n\r\n        Uri defSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);\r\n\r\n        OreoAndAboveNotification notification1 = new OreoAndAboveNotification(this);\r\n        Notification.Builder builder = notification1.getONotification(title, body, pIntent, defSoundUri, icon);\r\n\r\n\r\n        int j = 0;\r\n        if (i > 0) {\r\n            j = i;\r\n\r\n        } else {\r\n            i = Math.abs(i);\r\n            j = i;\r\n\r\n        }\r\n        notification1.getManager().notify(j, builder.build());\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onNewToken(@NonNull String s) {\r\n        super.onNewToken(s);\r\n        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n        if (user != null) {\r\n            updateToken(s);\r\n        }\r\n    }\r\n\r\n    private void updateToken(String tokenRefresh) {\r\n        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(\"Tokens\");\r\n        Token token = new Token(tokenRefresh);\r\n        ref.child(user.getUid()).setValue(token);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/Notifications/FirebaseMessaging.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/java/com/orion/orion/Notifications/FirebaseMessaging.java	(date 1622647940449)
@@ -23,7 +23,7 @@
 import com.google.firebase.messaging.FirebaseMessagingService;
 import com.google.firebase.messaging.RemoteMessage;
 import com.orion.orion.R;
-import com.orion.orion.contest.contestMainActivity;
+import com.orion.orion.contest.upcoming.UpcomingContestActivity;
 
 import java.util.Random;
 
@@ -72,7 +72,7 @@
         int i = rand.nextInt();
         Log.d(TAG, "sendNormalNotification: vo1 " + i);
 
-        Intent intent = new Intent(this, contestMainActivity.class);
+        Intent intent = new Intent(this, UpcomingContestActivity.class);
         Bundle bundle = new Bundle();
         bundle.putString(getString(R.string.his_uid), user);
         intent.putExtras(bundle);
@@ -121,7 +121,7 @@
         Log.d(TAG, "sendOAndAboveNotification: rand  " + rand.nextInt());
         int i = rand.nextInt();
         Log.d(TAG, "sendNormalNotification: vo " + String.valueOf(i));
-        Intent intent = new Intent(this, contestMainActivity.class);
+        Intent intent = new Intent(this, UpcomingContestActivity.class);
         Bundle bundle = new Bundle();
         bundle.putString(getString(R.string.his_uid), user);
         intent.putExtras(bundle);
Index: app/src/main/java/com/orion/orion/login/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.login;\r\n\r\nimport android.app.Activity;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.daimajia.androidanimations.library.Techniques;\r\nimport com.daimajia.androidanimations.library.YoYo;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.gson.Gson;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.contest.UpcomingContestActivity;\r\nimport com.orion.orion.contest.contestMainActivity;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n    private static final String TAG = \"activity_login\";\r\n    private static final int ANIMATION_DURATION = 1000;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private Context mContext;\r\n    private RelativeLayout rootView;\r\n    private ProgressBar mProgressBar;\r\n    private ImageView appIcon;\r\n    private TextView appTitle;\r\n    private RelativeLayout afterAnimationView;\r\n    private EditText mEmail;\r\n    private EditText mPassword;\r\n    private Button btnLogin;\r\n    private TextView linkSignup,flg;\r\n    private TextView forgotPassword;\r\n    String justRegistered;\r\n\r\n    //    SP\r\n    Gson gson;\r\n    SharedPreferences sp;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        Log.d(TAG, \"onCreate: started.\");\r\n\r\n//          Initialize SharedPreference variables\r\n        sp = getSharedPreferences(\"Login\", Context.MODE_PRIVATE);\r\n        gson = new Gson();\r\n        justRegistered = sp.getString(\"yes\", \"\");\r\n\r\n        initializeWidgets();\r\n        setupFirebaseAuth();\r\n        if (!justRegistered.equals(\"yes\")) {\r\n            if (mAuth.getCurrentUser() != null) {\r\n                Intent intent = new Intent(LoginActivity.this, UpcomingContestActivity.class);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        }else{\r\n            flg.setVisibility(View.VISIBLE);\r\n        }\r\n        init();\r\n\r\n    }\r\n\r\n\r\n    private void initializeWidgets() {\r\n        Log.d(TAG, \"initializeWidgets: \");\r\n        appIcon = findViewById(R.id.appIcon);\r\n        rootView = findViewById(R.id.rootView);\r\n        flg = findViewById(R.id.flg);\r\n\r\n        afterAnimationView = findViewById(R.id.afterAnimationView);\r\n        mProgressBar = findViewById(R.id.loginrequestloadingprogressbar);\r\n        mProgressBar.setVisibility(View.GONE);\r\n        mEmail = findViewById(R.id.input_email);\r\n        mPassword = findViewById(R.id.input_password);\r\n        btnLogin = findViewById(R.id.btn_login);\r\n        linkSignup = findViewById(R.id.link_signup);\r\n        forgotPassword = findViewById(R.id.forgotPassword);\r\n        mContext = LoginActivity.this;\r\n    }\r\n\r\n\r\n    private void init() {\r\n        rootView.setOnClickListener(v -> {\r\n            InputMethodManager imm = (InputMethodManager) mContext.getSystemService(Activity.INPUT_METHOD_SERVICE);\r\n            assert imm != null;\r\n            imm.hideSoftInputFromWindow(rootView.getWindowToken(), 0);\r\n        });\r\n\r\n\r\n\r\n        btnLogin.setOnClickListener(v -> {\r\n            mProgressBar.setVisibility(View.VISIBLE);\r\n            String email = mEmail.getText().toString();\r\n            String password = mPassword.getText().toString();\r\n            if (email.equals(\"\")) {\r\n                mProgressBar.setVisibility(View.GONE);\r\n                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mEmail);\r\n                mEmail.setText(\"\");\r\n                mEmail.setError(\"Please enter a email-id\");\r\n                mEmail.requestFocus();\r\n            } else if (password.equals(\"\")) {\r\n                mProgressBar.setVisibility(View.GONE);\r\n                YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n                mPassword.setText(\"\");\r\n                mPassword.setError(\"Please enter a password\");\r\n                mPassword.requestFocus();\r\n            } else {\r\n                mProgressBar.setVisibility(View.VISIBLE);\r\n                mEmail.setFocusable(false);\r\n                mPassword.setFocusable(false);\r\n                mAuth.signInWithEmailAndPassword(email, password).addOnCompleteListener(LoginActivity.this, task -> {\r\n                    FirebaseUser user = mAuth.getCurrentUser();\r\n                    if (task.isSuccessful()) {\r\n                        // Sign in success, update UI with the signed-in user's information\r\n                        Log.d(TAG, \"signInWithEmail:success\");\r\n                        ProgressDialog progressDialog = new ProgressDialog(mContext);\r\n                        progressDialog.setMessage(\"Authenticating\");\r\n                        progressDialog.show();\r\n                        mProgressBar.setVisibility(View.GONE);\r\n                        try {\r\n                            assert user != null;\r\n                            Log.d(TAG, \"init: \" + user);\r\n                            if (user.isEmailVerified()) {\r\n                                Log.d(TAG, \"onComplete:email is verified.\");\r\n                                SharedPreferences.Editor editor = sp.edit();\r\n                                editor.putString(\"yes\", \"no\");\r\n                                editor.apply();\r\n                                progressDialog.dismiss();\r\n                                Intent intent = new Intent(LoginActivity.this, contestMainActivity.class);\r\n                                startActivity(intent);\r\n                            } else {\r\n                                new AlertDialog.Builder(mContext)\r\n                                        .setTitle(\"Sorry\")\r\n                                        .setMessage(\"Email is not verified \\n Check your email inbox\")\r\n                                        .setPositiveButton(android.R.string.ok, (dialog, which) -> {\r\n                                            dialog.dismiss();\r\n                                            mEmail.setFocusableInTouchMode(true);\r\n                                            mPassword.setFocusableInTouchMode(true);\r\n                                        })\r\n                                        .show();\r\n                                mProgressBar.setVisibility(View.GONE);\r\n                                mAuth.signOut();\r\n                            }\r\n\r\n                        } catch (NullPointerException e) {\r\n                            Log.e(TAG, \"NullPointerException\" + e.getMessage());\r\n                        }\r\n\r\n                    } else {\r\n                        // If sign in fails, display a message to the user.\r\n                        Log.w(TAG, \"signInWithEmail:failure\", task.getException());\r\n                        new AlertDialog.Builder(mContext)\r\n                                .setTitle(\"Sorry\")\r\n                                .setMessage(\"We ran into an error \\n Please try again later\")\r\n                                .setPositiveButton(android.R.string.ok, (dialog, which) -> {\r\n                                    dialog.dismiss();\r\n                                    mEmail.setFocusableInTouchMode(true);\r\n                                    mPassword.setFocusableInTouchMode(true);\r\n                                })\r\n                                .show();\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mEmail);\r\n                        YoYo.with(Techniques.Shake).duration(ANIMATION_DURATION).playOn(mPassword);\r\n                        mEmail.setText(\"\");\r\n                        mPassword.setText(\"\");\r\n                        mProgressBar.setVisibility(View.GONE);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        forgotPassword.setOnClickListener(v -> {\r\n            // get prompts.xml view\r\n            LayoutInflater li = LayoutInflater.from(mContext);\r\n            View promptsView = li.inflate(R.layout.dialog_find_your_account, null);\r\n\r\n            AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(mContext);\r\n\r\n            // set prompts.xml to alertdialog builder\r\n            alertDialogBuilder.setView(promptsView);\r\n\r\n            final EditText userInput = (EditText) promptsView.findViewById(R.id.input_email);\r\n\r\n            // set dialog message\r\n            alertDialogBuilder\r\n                    .setCancelable(false)\r\n                    .setPositiveButton(\"OK\",\r\n                            (dialog, id) -> {\r\n                                // get user input and set it to result\r\n                                // edit text\r\n                                if (userInput.getText() != null && userInput.getText().length() != 0) {\r\n                                    FirebaseAuth.getInstance().setLanguageCode(\"en\"); // Set to English\r\n                                    FirebaseAuth.getInstance().sendPasswordResetEmail(String.valueOf(userInput.getText()))\r\n                                            .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                                @Override\r\n                                                public void onComplete(@NonNull Task<Void> task) {\r\n\r\n                                                }\r\n                                            })\r\n                                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                @Override\r\n                                                public void onSuccess(Void aVoid) {\r\n                                                    Toast.makeText(mContext, \"We have sent and email to \" + userInput.getText() + \" please confirm to reset password\", Toast.LENGTH_LONG).show();\r\n                                                }\r\n                                            })\r\n                                            .addOnFailureListener(new OnFailureListener() {\r\n                                                @Override\r\n                                                public void onFailure(@NonNull Exception e) {\r\n                                                    Toast.makeText(mContext, \"Reset password request is failed\", Toast.LENGTH_LONG).show();\r\n\r\n\r\n                                                }\r\n                                            });\r\n                                } else {\r\n                                    Toast.makeText(mContext, \"Please enter Something!\", Toast.LENGTH_LONG).show();\r\n\r\n                                }\r\n\r\n\r\n                            });\r\n\r\n            // create alert dialog\r\n            AlertDialog alertDialog = alertDialogBuilder.create();\r\n\r\n            // show it\r\n            alertDialog.show();\r\n        });\r\n\r\n        linkSignup.setOnClickListener(v -> {\r\n            Log.d(TAG, \"on Click:navigating to register screen\");\r\n            Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);\r\n            startActivity(intent);\r\n        });\r\n\r\n        Log.d(TAG, \"init: mAuth.getCurrentUser()\" + mAuth.getCurrentUser());\r\n\r\n    }\r\n\r\n    //    *********************FIREBASE***************************\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mAuthListener = firebaseAuth -> {\r\n            FirebaseUser user = firebaseAuth.getCurrentUser();\r\n            if (user != null) {\r\n                Log.d(TAG, \"onAuthStateChanged:signed in:\" + user.getUid());\r\n            } else {\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n            }\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        moveTaskToBack(true);\r\n    }\r\n    //   ************************FIREBASE****************************\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/login/LoginActivity.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/java/com/orion/orion/login/LoginActivity.java	(date 1622647885795)
@@ -30,8 +30,7 @@
 import com.google.firebase.auth.FirebaseUser;
 import com.google.gson.Gson;
 import com.orion.orion.R;
-import com.orion.orion.contest.UpcomingContestActivity;
-import com.orion.orion.contest.contestMainActivity;
+import com.orion.orion.contest.upcoming.UpcomingContestActivity;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -155,7 +154,7 @@
                                 editor.putString("yes", "no");
                                 editor.apply();
                                 progressDialog.dismiss();
-                                Intent intent = new Intent(LoginActivity.this, contestMainActivity.class);
+                                Intent intent = new Intent(LoginActivity.this, UpcomingContestActivity.class);
                                 startActivity(intent);
                             } else {
                                 new AlertDialog.Builder(mContext)
Index: app/src/main/java/com/orion/orion/contest/joined/JoiningForm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.contest.joined;\r\n\r\nimport android.annotation.TargetApi;\r\nimport android.app.AlertDialog;\r\nimport android.content.ContentUris;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.DocumentsContract;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.util.Patterns;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.contest.contestMainActivity;\r\nimport com.orion.orion.login.LoginActivity;\r\nimport com.orion.orion.util.FirebaseMethods;\r\nimport com.orion.orion.util.Permissions;\r\nimport com.orion.orion.util.SNTPClient;\r\n\r\nimport java.io.File;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.TimeZone;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport static com.orion.orion.profile.ProfileActivity.VERIFY_PERMISSION_REQUEST;\r\nimport static com.orion.orion.util.FileUtils.generateFileName;\r\nimport static com.orion.orion.util.FileUtils.getDocumentCacheDir;\r\nimport static com.orion.orion.util.FileUtils.getFileName;\r\nimport static com.orion.orion.util.FileUtils.saveFileFromUri;\r\n\r\npublic class JoiningForm extends AppCompatActivity {\r\n    private static final String TAG = \"JoiningForm\";\r\n    private final Context mContext = JoiningForm.this;\r\n\r\n    private TextView mTopBarTitle;\r\n    private EditText collegeEt, urlEt;\r\n    private ImageView idIv, submissionIv, backArrow;\r\n    TextView warn, decline;\r\n    private Button submitBtn, idBtn, mediaBtn;\r\n    boolean isKitKat;\r\n    private String imgurl = \"\";\r\n    private int selectedImage;\r\n    String mediaLink = \"\", idLink = \"\", userId, contestId;\r\n    private FirebaseMethods mFirebaseMethods;\r\n    private LinearLayout a1, a2, a3;\r\n    int imageCount = 0;\r\n    String openfor = \"\";\r\n    LinearLayout mediaLinear, imageLinear;\r\n    String type = \"\";\r\n    String p5 = \"p5\", p6 = \"p6\";\r\n    public LinearLayout linearLayout;\r\n    String isJuryOrHost = \"false\";\r\n\r\n    //firebase\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private FirebaseUser mUser;\r\n    private DatabaseReference myRef;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_joining_form);\r\n        setupFirebaseAuth();\r\n        mTopBarTitle = findViewById(R.id.titleTopBar);\r\n        mTopBarTitle.setText(\"Joining Contest\");\r\n        mFirebaseMethods = new FirebaseMethods(JoiningForm.this);\r\n\r\n        Intent i = getIntent();\r\n        userId = i.getStringExtra(\"userId\");\r\n        contestId = i.getStringExtra(\"contestId\");\r\n        isJuryOrHost = i.getStringExtra(\"isJuryOrHost\");\r\n\r\n        collegeEt = findViewById(R.id.collegeEt);\r\n        urlEt = findViewById(R.id.url_submission);\r\n\r\n        submitBtn = findViewById(R.id.submitBtn);\r\n        idBtn = findViewById(R.id.selectid);\r\n        mediaBtn = findViewById(R.id.selectSubmission);\r\n\r\n        idIv = findViewById(R.id.idIv);\r\n        submissionIv = findViewById(R.id.submisionIv);\r\n        a1 = findViewById(R.id.college);\r\n        a2 = findViewById(R.id.collegeid);\r\n        warn = findViewById(R.id.warn);\r\n        imageLinear = findViewById(R.id.ImageLinearLayout);\r\n        mediaLinear = findViewById(R.id.mediaLinearLayout);\r\n        linearLayout = findViewById(R.id.pro);\r\n        backArrow = findViewById(R.id.backarrow);\r\n        decline = findViewById(R.id.decline);\r\n\r\n        backArrow.setOnClickListener(view -> finish());\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(getString(R.string.dbname_contests))\r\n                .child(userId)\r\n                .child(getString(R.string.created_contest))\r\n                .child(contestId)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        com.orion.orion.models.CreateForm createForm = dataSnapshot.getValue(com.orion.orion.models.CreateForm.class);\r\n                        openfor = createForm.getOf();\r\n                        type = createForm.getFt();\r\n                        if (type.equals(\"Image\")) {\r\n                            imageLinear.setVisibility(View.VISIBLE);\r\n                            submissionIv.setVisibility(View.VISIBLE);\r\n                            mediaLinear.setVisibility(View.GONE);\r\n\r\n                        } else {\r\n                            mediaLinear.setVisibility(View.VISIBLE);\r\n                            imageLinear.setVisibility(View.GONE);\r\n                            submissionIv.setVisibility(View.GONE);\r\n\r\n                        }\r\n                        if (openfor.equals(\"Students\")) {\r\n                            a1.setVisibility(View.VISIBLE);\r\n                            a2.setVisibility(View.VISIBLE);\r\n                            idIv.setVisibility(View.VISIBLE);\r\n                        } else if (openfor.equals(\"All\")) {\r\n                            a1.setVisibility(View.GONE);\r\n                            a2.setVisibility(View.GONE);\r\n                            idIv.setVisibility(View.GONE);\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference(getString(R.string.dbname_contestlist));\r\n        ref.child(contestId)\r\n                .child(getString(R.string.field_Participant_List))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                        if (dataSnapshot.exists()) {\r\n                            submitBtn.setEnabled(false);\r\n                            warn.setVisibility(View.VISIBLE);\r\n                        } else {\r\n                            DatabaseReference ref1 = FirebaseDatabase.getInstance().getReference();\r\n                            ref1.child(mContext.getString(R.string.dbname_request))\r\n                                    .child(mContext.getString(R.string.dbname_participantList))\r\n                                    .child(contestId)\r\n                                    .orderByChild(getString(R.string.field_user_id))\r\n                                    .equalTo(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                            if (snapshot.exists()) {\r\n                                                submitBtn.setEnabled(false);\r\n                                                warn.setVisibility(View.VISIBLE);\r\n                                            }\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                    }\r\n                });\r\n\r\n        idBtn.setOnClickListener(v -> {\r\n            selectedImage = 1;\r\n            idBtn.setEnabled(true);\r\n            if (checkPermissionArray(Permissions.PERMISSIONS)) {\r\n                isKitKat = true;\r\n                Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);\r\n                intent.addCategory(Intent.CATEGORY_OPENABLE);\r\n                intent.setType(\"image/*\");\r\n                startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), 1);\r\n            } else verifyPermission(Permissions.PERMISSIONS);\r\n        });\r\n        mediaBtn.setOnClickListener(v -> {\r\n            mediaBtn.setEnabled(true);\r\n            selectedImage = 2;\r\n            if (checkPermissionArray(Permissions.PERMISSIONS)) {\r\n                isKitKat = true;\r\n                Intent intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);\r\n                intent.addCategory(Intent.CATEGORY_OPENABLE);\r\n                intent.setType(\"image/*\");\r\n                startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), 1);\r\n            } else {\r\n                verifyPermission(Permissions.PERMISSIONS);\r\n            }\r\n\r\n        });\r\n        if (isJuryOrHost.equals(\"true\")) {\r\n            decline.setVisibility(View.VISIBLE);\r\n            submitBtn.setEnabled(false);\r\n        }\r\n        submitBtn.setOnClickListener(v -> {\r\n            AlertDialog.Builder builder = new AlertDialog.Builder(mContext);\r\n            builder.setTitle(\"Submit Joining Form\");\r\n            builder.setMessage(\"Are you sure you want to submit this CreateForm?\");\r\n\r\n//                set buttons\r\n            builder.setPositiveButton(\"Yes\", (dialog, which) -> {\r\n\r\n                if (mediaLink != null) {\r\n                    boolean ok = checkValidity();\r\n                    if (ok) {\r\n                        getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE, WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                        linearLayout.setVisibility(View.VISIBLE);\r\n                        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n                            @Override\r\n                            public void onTimeReceived(String rawDate) {\r\n                                // rawDate -> 2019-11-05T17:51:01+0530\r\n                                String str_date = rawDate;\r\n                                java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                                Date date = null;\r\n                                try {\r\n                                    date = formatter.parse(str_date);\r\n                                } catch (ParseException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                                String timeStamp = String.valueOf(date.getTime());\r\n                                DatabaseReference db1 = FirebaseDatabase.getInstance().getReference();\r\n                                String JoiningKey = db1.child(getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(getString(R.string.joined_contest))\r\n                                        .push().getKey();\r\n                                if (!type.equals(\"Image\"))\r\n                                    mediaLink = urlEt.getText().toString();\r\n                                HashMap<String, Object> hashMap = new HashMap<>();\r\n                                hashMap.put(getString(R.string.field_college), collegeEt.getText().toString());\r\n                                hashMap.put(getString(R.string.field_status), \"waiting\");\r\n                                hashMap.put(getString(R.string.field_host), userId);\r\n                                hashMap.put(getString(R.string.field_contest_ID), contestId);\r\n                                hashMap.put(getString(R.string.field_timestamp), timeStamp);\r\n                                hashMap.put(getString(R.string.field_joining_ID), JoiningKey);\r\n                                hashMap.put(getString(R.string.field_id_link), idLink);\r\n                                hashMap.put(getString(R.string.field_media_link), mediaLink);\r\n                                hashMap.put(getString(R.string.field_user_id), FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                                db1.child(getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(getString(R.string.joined_contest))\r\n                                        .child(JoiningKey)\r\n                                        .setValue(hashMap).addOnSuccessListener(aVoid -> {\r\n                                    DatabaseReference db2 = FirebaseDatabase.getInstance().getReference();\r\n                                    HashMap<String, Object> hashMap2 = new HashMap<>();\r\n                                    hashMap2.put(getString(R.string.field_timestamp), timeStamp);\r\n                                    hashMap2.put(getString(R.string.field_joining_ID), JoiningKey);\r\n                                    hashMap2.put(getString(R.string.field_total_score), 0);\r\n                                    hashMap2.put(getString(R.string.field_contest_ID), contestId);\r\n                                    hashMap2.put(getString(R.string.field_media_link), mediaLink);\r\n                                    hashMap2.put(getString(R.string.field_user_id), FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                                    db2.child(getString(R.string.dbname_request))\r\n                                            .child(getString(R.string.dbname_participantList))\r\n                                            .child(contestId)\r\n                                            .child(JoiningKey)\r\n                                            .setValue(hashMap2).addOnSuccessListener(aVoid1 -> {\r\n                                        int c = 0;\r\n                                        if (!idLink.equals(\"\")) {\r\n                                            mFirebaseMethods.uploadContest(imageCount, idLink, null, contestId, p5, JoiningKey);\r\n                                        } else {\r\n                                            c++;\r\n                                        }\r\n                                        if (type.equals(\"Image\")) {\r\n                                            mFirebaseMethods.uploadContest(imageCount, mediaLink, null, contestId, p6, JoiningKey);\r\n                                        } else {\r\n                                            c++;\r\n                                        }\r\n                                        if (c == 2) {\r\n                                            linearLayout.setVisibility(View.GONE);\r\n                                            getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i1 = new Intent(JoiningForm.this, contestMainActivity.class);\r\n                                            startActivity(i1);\r\n                                            Toast.makeText(JoiningForm.this, \"Your submission has been submitted.\", Toast.LENGTH_SHORT).show();\r\n                                        }\r\n                                    });\r\n                                });\r\n\r\n                                Log.e(SNTPClient.TAG, rawDate);\r\n\r\n                            }\r\n\r\n                            @Override\r\n                            public void onError(Exception ex) {\r\n                                Log.e(SNTPClient.TAG, ex.getMessage());\r\n                            }\r\n                        });\r\n\r\n\r\n                    } else {\r\n                        Toast.makeText(JoiningForm.this, \"Please fill all the entries correctly!\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }else{\r\n                    Toast.makeText(JoiningForm.this, \"Sorry!There is something wrong.\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            }).setNegativeButton(\"No\", (dialog, which) -> dialog.dismiss());\r\n            builder.create().show();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    public boolean checkValidity() {\r\n        if (openfor.equals(\"Students\"))\r\n            if (collegeEt.getText().equals(\"\") || idIv.getDrawable() == null || collegeEt.getText() == null||idLink==null)\r\n                return false;\r\n            else if (type.equals(\"Image\")) {\r\n                if (submissionIv.getDrawable() == null) return false;\r\n            } else return isValidUrl(urlEt.getText().toString());\r\n        else if (type.equals(\"Image\")) {\r\n            return submissionIv.getDrawable() != null;\r\n        } else return isValidUrl(urlEt.getText().toString());\r\n        return true;\r\n    }\r\n\r\n    private boolean isValidUrl(String url) {\r\n        Pattern p = Patterns.WEB_URL;\r\n        Matcher m = p.matcher(url.toLowerCase());\r\n        return m.matches();\r\n    }\r\n\r\n    public void verifyPermission(String[] permissions) {\r\n        ActivityCompat.requestPermissions(\r\n                JoiningForm.this,\r\n                permissions,\r\n                VERIFY_PERMISSION_REQUEST\r\n        );\r\n    }\r\n\r\n    public boolean checkPermissionArray(String[] permissions) {\r\n\r\n        for (String check : permissions)\r\n            if (!checkPermissions(check)) return false;\r\n        return true;\r\n    }\r\n\r\n    public boolean checkPermissions(String permission) {\r\n\r\n        int permissionRequest = ActivityCompat.checkSelfPermission(JoiningForm.this, permission);\r\n        return permissionRequest == PackageManager.PERMISSION_GRANTED;\r\n    }\r\n\r\n    public static String getDataColumn(Context context, Uri uri, String selection, String[] selectionArgs) {\r\n        Cursor cursor = null;\r\n        final String column = \"_data\";\r\n        final String[] projection = {\r\n                column\r\n        };\r\n        try {\r\n            cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs, null);\r\n            if (cursor != null && cursor.moveToFirst()) {\r\n                final int index = cursor.getColumnIndexOrThrow(column);\r\n                return cursor.getString(index);\r\n            }\r\n        } finally {\r\n            if (cursor != null) cursor.close();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static boolean isExternalStorageDocument(Uri uri) {\r\n        return \"com.android.externalstorage.documents\".equals(uri.getAuthority());\r\n    }\r\n\r\n    public static boolean isDownloadsDocument(Uri uri) {\r\n        return \"com.android.providers.downloads.documents\".equals(uri.getAuthority());\r\n    }\r\n\r\n    public static boolean isMediaDocument(Uri uri) {\r\n        return \"com.android.providers.media.documents\".equals(uri.getAuthority());\r\n    }\r\n\r\n    public static boolean isGooglePhotosUri(Uri uri) {\r\n        return \"com.google.android.apps.photos.content\".equals(uri.getAuthority());\r\n    }\r\n\r\n    public static String getPathFromUri(final Context context, final Uri uri) {\r\n        // DocumentProvider\r\n        if (DocumentsContract.isDocumentUri(context, uri)) {\r\n            // ExternalStorageProvider\r\n            if (isExternalStorageDocument(uri)) {\r\n                final String docId = DocumentsContract.getDocumentId(uri);\r\n                final String[] split = docId.split(\":\");\r\n                final String type = split[0];\r\n                if (\"primary\".equalsIgnoreCase(type))\r\n                    return Environment.getExternalStorageDirectory() + \"/\" + split[1];\r\n                // TODO handle non-primary volumes\r\n            }\r\n            // DownloadsProvider\r\n            else if (isDownloadsDocument(uri)) {\r\n                final String id = DocumentsContract.getDocumentId(uri);\r\n                if (id != null && id.startsWith(\"raw:\")) {\r\n                    return id.substring(4);\r\n                }\r\n                String[] contentUriPrefixesToTry = new String[]{\r\n                        \"content://downloads/public_downloads\",\r\n                        \"content://downloads/my_downloads\"\r\n                };\r\n                for (String contentUriPrefix : contentUriPrefixesToTry) {\r\n                    Uri contentUri = ContentUris.withAppendedId(Uri.parse(contentUriPrefix), Long.valueOf(id));\r\n                    try {\r\n                        String path = getDataColumn(context, contentUri, null, null);\r\n                        if (path != null) {\r\n                            return path;\r\n                        }\r\n                    } catch (Exception e) {\r\n                    }\r\n                }\r\n\r\n                // path could not be retrieved using ContentResolver, therefore copy file to accessible cache using streams\r\n                String fileName = getFileName(context, uri);\r\n                File cacheDir = getDocumentCacheDir(context);\r\n                File file = generateFileName(fileName, cacheDir);\r\n                String destinationPath = null;\r\n                if (file != null) {\r\n                    destinationPath = file.getAbsolutePath();\r\n                    saveFileFromUri(context, uri, destinationPath);\r\n                }\r\n                return destinationPath;\r\n            }\r\n            // MediaProvider\r\n            else if (isMediaDocument(uri)) {\r\n                final String docId = DocumentsContract.getDocumentId(uri);\r\n                final String[] split = docId.split(\":\");\r\n                final String type = split[0];\r\n                Uri contentUri = null;\r\n                if (\"image\".equals(type)) contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;\r\n                else if (\"video\".equals(type))\r\n                    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;\r\n                else if (\"audio\".equals(type))\r\n                    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\r\n                final String selection = \"_id=?\";\r\n                final String[] selectionArgs = new String[]{\r\n                        split[1]\r\n                };\r\n                return getDataColumn(context, contentUri, selection, selectionArgs);\r\n            }\r\n        }\r\n        // MediaStore (and general)\r\n        else if (\"content\".equalsIgnoreCase(uri.getScheme())) {\r\n            // Return the remote address\r\n            if (isGooglePhotosUri(uri)) return uri.getLastPathSegment();\r\n            return getDataColumn(context, uri, null, null);\r\n        }\r\n        // File\r\n        else if (\"file\".equalsIgnoreCase(uri.getScheme()))\r\n            return uri.getPath();\r\n        else\r\n            Toast.makeText(context, \"Unable to upload image\", Toast.LENGTH_LONG).show();\r\n        return null;\r\n    }\r\n\r\n    @TargetApi(19)\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        mediaBtn.setEnabled(true);\r\n        String imgPath = \"\";\r\n        if (data != null && data.getData() != null && resultCode == RESULT_OK) {\r\n            Uri uri = data.getData();\r\n            if (uri != null) {\r\n                imgPath = getPathFromUri(mContext, uri);\r\n                if (imgPath != null) {\r\n                    Log.d(TAG, \"onActivityResult: path: \" + imgPath);\r\n                    Log.d(TAG, \"onActivityResult: uri: \" + uri);\r\n                    imgurl = imgPath;\r\n                    setImage();\r\n                }\r\n            }\r\n        }\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n\r\n    private void setImage() {\r\n        if (selectedImage == 1) {\r\n            idLink = imgurl;\r\n            Glide.with(getApplicationContext())\r\n                    .load(idLink)\r\n                    .placeholder(R.drawable.load)\r\n                    .error(R.drawable.default_image2)\r\n                    .placeholder(R.drawable.load)\r\n                    .thumbnail(0.25f)\r\n                    .into(idIv);\r\n        }\r\n        if (selectedImage == 2) {\r\n            mediaLink = imgurl;\r\n            Glide.with(getApplicationContext())\r\n                    .load(mediaLink)\r\n                    .placeholder(R.drawable.load)\r\n                    .error(R.drawable.default_image2)\r\n                    .placeholder(R.drawable.load)\r\n                    .into(submissionIv);\r\n        }\r\n\r\n    }\r\n\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        mAuthListener = firebaseAuth -> {\r\n            mUser = firebaseAuth.getCurrentUser();\r\n            if (mUser == null) {\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                Log.d(TAG, \"onAuthStateChanged: navigating to login\");\r\n                SharedPreferences settings = getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n                new AlertDialog.Builder(mContext)\r\n                        .setTitle(\"No user logon found\")\r\n                        .setMessage(\"We will be logging u out. \\n Please try to log in again\")\r\n                        .setPositiveButton(android.R.string.ok, (dialog, which) -> {\r\n                            Intent intent = new Intent(mContext, LoginActivity.class);\r\n                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                            settings.edit().clear().apply();\r\n                            startActivity(intent);\r\n                        })\r\n                        .show();\r\n            } else Log.d(TAG, \"onAuthStateChanged: signed_in:\" + mUser.getUid());\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) {\r\n            mAuth.removeAuthStateListener(mAuthListener);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/contest/joined/JoiningForm.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/java/com/orion/orion/contest/joined/JoiningForm.java	(date 1622647866208)
@@ -35,7 +35,6 @@
 import com.google.firebase.database.FirebaseDatabase;
 import com.google.firebase.database.ValueEventListener;
 import com.orion.orion.R;
-import com.orion.orion.contest.contestMainActivity;
 import com.orion.orion.login.LoginActivity;
 import com.orion.orion.util.FirebaseMethods;
 import com.orion.orion.util.Permissions;
@@ -307,7 +306,7 @@
                                         if (c == 2) {
                                             linearLayout.setVisibility(View.GONE);
                                             getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
-                                            Intent i1 = new Intent(JoiningForm.this, contestMainActivity.class);
+                                            Intent i1 = new Intent(JoiningForm.this, JoinedActivity.class);
                                             startActivity(i1);
                                             Toast.makeText(JoiningForm.this, "Your submission has been submitted.", Toast.LENGTH_SHORT).show();
                                         }
Index: app/src/main/java/com/orion/orion/util/BottomNaavigationViewHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.util;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.NonNull;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.chat.MessagesActivity;\r\nimport com.orion.orion.NotificationActivity;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.contest.UpcomingContestActivity;\r\nimport com.orion.orion.contest.contestMainActivity;\r\nimport com.orion.orion.LeaderboardActivity;\r\nimport com.orion.orion.models.Chat;\r\nimport com.orion.orion.profile.profile;\r\n\r\nimport java.security.AccessControlContext;\r\n\r\npublic class BottomNaavigationViewHelper {\r\n\r\n    private static final String TAG = \"BottomNavigationViewHel\";\r\n    static int curItem, prevItem;\r\n\r\n\r\n    public static void setupBottomNavigationView(BottomNavigationViewEx bottomNavigationViewEx, Context context) {\r\n        Log.d(TAG, \"set BottomNavigationView Setting up BottomNavigationView\");\r\n        bottomNavigationViewEx.enableAnimation(true);\r\n        bottomNavigationViewEx.enableItemShiftingMode(true);\r\n        bottomNavigationViewEx.enableShiftingMode(true);\r\n        bottomNavigationViewEx.setTextVisibility(true);\r\n        bottomNavigationViewEx.setTextSize(10);\r\n        DatabaseReference db = FirebaseDatabase.getInstance().getReference();\r\n        db.child(context.getString(R.string.dbname_users))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(context.getString(R.string.field_Notifications))\r\n                .orderByKey()\r\n                .limitToLast(1)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (snapshot.exists()) {\r\n                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                if (snapshot1.child(context.getString(R.string.field_if_seen)).getValue().equals(\"false\")) {\r\n\r\n                                    bottomNavigationViewEx.getMenu().getItem(3).setIcon(R.drawable.ic_noti_red);\r\n                                    break;\r\n                                }\r\n\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n        checkMessageSeen(context,bottomNavigationViewEx);\r\n    }\r\n\r\n    public static void enableNavigation(final Context context, final Activity callingActivity, BottomNavigationViewEx view) {\r\n        view.setOnNavigationItemSelectedListener(item -> {\r\n\r\n\r\n            curItem = item.getItemId();\r\n            if (curItem != prevItem) {\r\n                switch (item.getItemId()) {\r\n                    case R.id.ic_contest:\r\n                        prevItem = curItem;\r\n                        item.setEnabled(false);\r\n                        Intent intent1 = new Intent(context, UpcomingContestActivity.class);\r\n                        context.startActivity(intent1);\r\n                        break;\r\n                    case R.id.ic_chat:\r\n                        prevItem = curItem;\r\n                        checkMessageSeen(context, view);\r\n                        item.setEnabled(false);\r\n                        Intent intent2 = new Intent(context, MessagesActivity.class);\r\n                        context.startActivity(intent2);\r\n                        break;\r\n                    case R.id.ic_leaderboard:\r\n                        prevItem = curItem;\r\n                        item.setEnabled(false);\r\n                        Intent intent3 = new Intent(context, LeaderboardActivity.class);\r\n                        context.startActivity(intent3);\r\n                        break;\r\n                    case R.id.ic_notification:\r\n\r\n                        prevItem = curItem;\r\n                        view.postDelayed((Runnable) () -> {\r\n                        DatabaseReference db1 = FirebaseDatabase.getInstance().getReference();\r\n                        db1.child(context.getString(R.string.dbname_users))\r\n                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                .child(context.getString(R.string.field_Notifications))\r\n                                .orderByChild(context.getString(R.string.field_if_seen))\r\n                                .equalTo(\"false\")\r\n                                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        if (snapshot.exists()) {\r\n                                            for (DataSnapshot snapshot1 : snapshot.getChildren()) {\r\n                                                if (view.getMenuItemPosition(item)== 3) {\r\n                                                    db1.child(context.getString(R.string.dbname_users))\r\n                                                            .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                            .child(context.getString(R.string.field_Notifications))\r\n                                                            .child(snapshot1.getKey())\r\n                                                            .child(context.getString(R.string.field_if_seen))\r\n                                                            .setValue(\"true\");\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                    }\r\n                                });\r\n                }, 10);\r\n                        item.setEnabled(false);\r\n                        Intent intent4 = new Intent(context, NotificationActivity.class);\r\n                        context.startActivity(intent4);\r\n                        break;\r\n                    case R.id.ic_profile:\r\n                        prevItem = curItem;\r\n                        Intent intent5 = new Intent(context, profile.class);\r\n                        context.startActivity(intent5);\r\n                        break;\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n\r\n    }\r\n\r\n    public static void checkMessageSeen(Context context, BottomNavigationViewEx view) {\r\n\r\n        DatabaseReference refer = FirebaseDatabase.getInstance().getReference();\r\n        Query query = refer.child(context.getString(R.string.dbname_Chats))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                final long[] x = {0};\r\n                for (DataSnapshot dataSnapshot : snapshot.getChildren()) {\r\n\r\n                    refer.child(context.getString(R.string.dbname_ChatList))\r\n                            .child(dataSnapshot.getValue().toString())\r\n                            .orderByKey()\r\n                            .limitToLast(1)\r\n                            .addValueEventListener(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(@NonNull DataSnapshot snapshot1) {\r\n                                    for (DataSnapshot ds : snapshot1.getChildren()) {\r\n                                        if (ds.exists()) {\r\n\r\n                                            Chat chat = ds.getValue(Chat.class);\r\n                                            if (!chat.getIfs()&&chat.getRid().equals(FirebaseAuth.getInstance().getCurrentUser().getUid())) {\r\n                                                view.getMenu().getItem(1).setIcon(R.drawable.ic_msgw_red);\r\n                                                x[0]++;\r\n                                            }\r\n\r\n                                        }\r\n\r\n\r\n                                    }\r\n\r\n                                }\r\n\r\n\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                                }\r\n                            });\r\n\r\n                    if (x[0]>0){\r\n\r\n                        break;\r\n                    }else{\r\n                        view.getMenu().getItem(1).setIcon(R.drawable.ic_msgw);\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/util/BottomNaavigationViewHelper.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/java/com/orion/orion/util/BottomNaavigationViewHelper.java	(date 1622644478682)
@@ -18,14 +18,11 @@
 import com.orion.orion.chat.MessagesActivity;
 import com.orion.orion.NotificationActivity;
 import com.orion.orion.R;
-import com.orion.orion.contest.UpcomingContestActivity;
-import com.orion.orion.contest.contestMainActivity;
+import com.orion.orion.contest.upcoming.UpcomingContestActivity;
 import com.orion.orion.LeaderboardActivity;
 import com.orion.orion.models.Chat;
 import com.orion.orion.profile.profile;
 
-import java.security.AccessControlContext;
-
 public class BottomNaavigationViewHelper {
 
     private static final String TAG = "BottomNavigationViewHel";
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:dist=\"http://schemas.android.com/apk/distribution\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.orion.orion\">\r\n\r\n    <application\r\n        android:name=\".util.MyApplication\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@drawable/orion_logo_png_black\"\r\n        android:label=\"@string/app_name\"\r\n        android:requestLegacyExternalStorage=\"true\"\r\n        android:roundIcon=\"@drawable/orion_logo_png_black\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        tools:targetApi=\"m\">\r\n        <activity android:name=\".contest.create.CreatedActivity\"></activity>\r\n        <activity android:name=\".contest.joined.JoinedActivity\" />\r\n        <activity android:name=\".contest.UpcomingContestActivity\" />\r\n        <activity android:name=\".NotificationActivity\" />\r\n        <activity android:name=\".chat.MessagesActivity\" /> <!-- Activities -->\r\n        <!-- Splash Screen -->\r\n        <activity\r\n            android:name=\".SplashActivity\"\r\n            android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity> <!-- Login/Signup Section + Intro part -->\r\n        <activity\r\n            android:name=\".login.LoginActivity\"\r\n            android:noHistory=\"true\" />\r\n        <activity\r\n            android:name=\".login.RegisterActivity\"\r\n            android:noHistory=\"true\" /> <!-- Home Section -->\r\n        <activity android:name=\".chat.Message_Request\" />\r\n        <activity android:name=\".chat.Chat_Activity\" /> <!-- Contest Section -->\r\n        <activity android:name=\".contest.create.CreateForm\" />\r\n        <activity android:name=\".contest.create.CheckContest\" />\r\n        <activity android:name=\".contest.ViewContestDetails\" />\r\n        <activity android:name=\".contest.joined.JoiningForm\" />\r\n        <activity android:name=\".contest.joined.joined_contest_overview_activity\" />\r\n        <activity android:name=\".contest.ranking\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.Participant_Request\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.contest_evaluation_activity\" />\r\n        <activity android:name=\".contest.Contest_Evaluation.activity_view_media\" />\r\n        <activity android:name=\".contest.result.ResultDeclaredActivity\" />\r\n        <activity android:name=\".contest.jury_voting_media\" />\r\n        <activity android:name=\".contest.public_voting_media\" />\r\n        <activity\r\n            android:name=\".contest.contestMainActivity\"\r\n            android:windowSoftInputMode=\"adjustNothing\" /> <!-- Leaderboard Section -->\r\n        <activity android:name=\".LeaderboardActivity\" /> <!-- Profile Section -->\r\n        <activity\r\n            android:name=\".profile.profile\"\r\n            android:noHistory=\"true\" />\r\n        <activity\r\n            android:name=\".profile.ProfileActivity\"\r\n            android:launchMode=\"singleTop\" />\r\n        <activity\r\n            android:name=\".profile.ViewProfileActivity\"\r\n            android:launchMode=\"singleTop\" />\r\n        <activity android:name=\".profile.Account.AccountSettingActivity\" />\r\n        <activity android:name=\".profile.Account.EditProfile\" />\r\n        <activity android:name=\".profile.Account.Password_Reset\" />\r\n        <activity android:name=\".profile.Account.Contest\" />\r\n        <activity android:name=\".profile.Account.About\" />\r\n        <activity android:name=\".profile.Account.FanFolllowing.FanFollowList\" /> <!-- Extras -->\r\n        <!-- Services -->\r\n        <meta-data\r\n            android:name=\"com.google.firebase.messaging.some_id\"\r\n            android:value=\"some_id\" /> <!-- Meta data -->\r\n        <service\r\n            android:name=\".Notifications.FirebaseMessaging\"\r\n            android:enabled=\"true\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n    </application>\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission\r\n        android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\r\n        tools:ignore=\"ScopedStorage\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n\r\n    <dist:module dist:instant=\"true\" />\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/AndroidManifest.xml	(date 1622644478698)
@@ -17,7 +17,7 @@
         tools:targetApi="m">
         <activity android:name=".contest.create.CreatedActivity"></activity>
         <activity android:name=".contest.joined.JoinedActivity" />
-        <activity android:name=".contest.UpcomingContestActivity" />
+        <activity android:name=".contest.upcoming.UpcomingContestActivity" />
         <activity android:name=".NotificationActivity" />
         <activity android:name=".chat.MessagesActivity" /> <!-- Activities -->
         <!-- Splash Screen -->
Index: app/src/main/java/com/orion/orion/contest/UpcomingContestActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.contest;\r\n\r\nimport android.animation.Animator;\r\nimport android.animation.ValueAnimator;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.animation.DecelerateInterpolator;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Adapter;\r\nimport android.widget.AdapterView;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;\r\nimport com.orion.orion.Adapters.AdapterContestJoined;\r\nimport com.orion.orion.Adapters.AdapterContestSearch;\r\nimport com.orion.orion.Adapters.AdapterContestUpcoming;\r\nimport com.orion.orion.Adapters.AdapterContestUpcomingGrid;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.contest.create.CreatedActivity;\r\nimport com.orion.orion.contest.joined.JoinedActivity;\r\nimport com.orion.orion.login.LoginActivity;\r\nimport com.orion.orion.models.ContestDetail;\r\nimport com.orion.orion.util.BottomNaavigationViewHelper;\r\nimport com.orion.orion.util.SNTPClient;\r\nimport com.orion.orion.util.StringManipilation;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Date;\r\nimport java.util.Objects;\r\nimport java.util.TimeZone;\r\n\r\npublic class UpcomingContestActivity extends AppCompatActivity {\r\n    private static final String TAG = \"UPCOMING FRAGMENT\";\r\n    RecyclerView upcomingContestRv, contestSearchRv, upcomingFilterRv;\r\n    private ArrayList<ContestDetail> contestlist;\r\n    private FirebaseAuth fAuth;\r\n    private EditText searchBox;\r\n    int prevHeight;\r\n    int height, dummyHeight;\r\n    TextView noPost,joined,created;\r\n    LinearLayout blurBg;\r\n    int x = 0;\r\n    private int mResults;\r\n    ProgressBar bottomProgress;\r\n    private static final int ACTIVITY_NUM = 0;\r\n    private static final int CREATE_CONTEST = 1;\r\n    private int mResults2;\r\n    RelativeLayout relativeLayout;\r\n    ImageView gridB, gridY, colY, colB, filterB, filterY, cross;\r\n    private ArrayList<ContestDetail> contestlist2;\r\n    private ArrayList<ContestDetail> contestlist3;\r\n    private ArrayList<ContestDetail> paginatedcontestlist;\r\n    private ArrayList<ContestDetail> paginatedcontestSearch;\r\n    SwipeRefreshLayout contesRefresh;\r\n    boolean flag1 = false;\r\n    private Context mContext;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private FirebaseUser mUser;\r\n    private static int RETRY_DURATION = 1000;\r\n    private static final Handler handler = new Handler(Looper.getMainLooper());\r\n\r\n    private Spinner domainspinner, entryfeeSpinner;\r\n    String domain = \"Overall\", entryfee = \"Overall\";\r\n\r\n\r\n    private AdapterContestUpcoming contestUpcoming;\r\n    private AdapterContestUpcomingGrid adapterContestUpcomingGrid;\r\n    private AdapterContestSearch adapterContestSearch;\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_upcoming_contest);\r\n        initWidgets();\r\n        setupBottomNavigationView();\r\n        setupFirebaseAuth();\r\n        checkCurrentuser(mAuth.getCurrentUser());\r\n        hideSoftKeyboard();\r\n\r\n        joined.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(UpcomingContestActivity.this, JoinedActivity.class);\r\n                startActivity(i);\r\n            }\r\n        });\r\n        created.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(UpcomingContestActivity.this, CreatedActivity.class);\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n\r\n        final GridLayoutManager[] linearLayoutManager1 = {new GridLayoutManager(this, 1)};\r\n        contestlist2 = new ArrayList<>();\r\n        adapterContestSearch = new AdapterContestSearch(this, contestlist2);\r\n\r\n        contestSearchRv.setHasFixedSize(true);\r\n        contestSearchRv.setLayoutManager(linearLayoutManager1[0]);\r\n        contestSearchRv.setAdapter(adapterContestSearch);\r\n\r\n        final GridLayoutManager[] linearLayoutManager = {new GridLayoutManager(this, 1)};\r\n        contestlist = new ArrayList<>();\r\n        contestUpcoming = new AdapterContestUpcoming(this, contestlist);\r\n\r\n        upcomingContestRv.setHasFixedSize(true);\r\n        upcomingContestRv.setLayoutManager(linearLayoutManager[0]);\r\n        contestUpcoming.setHasStableIds(true);\r\n        upcomingContestRv.setAdapter(contestUpcoming);\r\n\r\n\r\n        gridB.setOnClickListener(v -> {\r\n            gridB.setVisibility(View.GONE);\r\n            gridY.setVisibility(View.VISIBLE);\r\n            colY.setVisibility(View.GONE);\r\n            colB.setVisibility(View.VISIBLE);\r\n            linearLayoutManager[0] = new GridLayoutManager(this, 2);\r\n            upcomingContestRv.setLayoutManager(linearLayoutManager[0]);\r\n            adapterContestUpcomingGrid = new AdapterContestUpcomingGrid(this, paginatedcontestlist);\r\n            adapterContestUpcomingGrid.setHasStableIds(true);\r\n            upcomingContestRv.setAdapter(adapterContestUpcomingGrid);\r\n\r\n        });\r\n        filterB.setOnClickListener(v -> {\r\n            filterY.setVisibility(View.VISIBLE);\r\n            filterB.setVisibility(View.GONE);\r\n            expand(relativeLayout, 1000);\r\n        });\r\n        filterY.setOnClickListener(v -> {\r\n            filterY.setVisibility(View.GONE);\r\n            filterB.setVisibility(View.VISIBLE);\r\n            expand(relativeLayout, 1000);\r\n        });\r\n        colB.setOnClickListener(v -> {\r\n            gridB.setVisibility(View.VISIBLE);\r\n            gridY.setVisibility(View.GONE);\r\n            colY.setVisibility(View.VISIBLE);\r\n            colB.setVisibility(View.GONE);\r\n            linearLayoutManager[0] = new GridLayoutManager(this, 1);\r\n            upcomingContestRv.setLayoutManager(linearLayoutManager[0]);\r\n            contestUpcoming = new AdapterContestUpcoming(this, paginatedcontestlist);\r\n            contestUpcoming.setHasStableIds(true);\r\n            upcomingContestRv.setAdapter(contestUpcoming);\r\n        });\r\n        cross.setOnClickListener(view1 -> {\r\n            paginatedcontestSearch.clear();\r\n            adapterContestSearch.notifyDataSetChanged();\r\n            searchBox.setText(\"\");\r\n            blurBg.setVisibility(View.GONE);\r\n        });\r\n        contestSearchRv.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\r\n                super.onScrollStateChanged(recyclerView, newState);\r\n                if (!recyclerView.canScrollVertically(1) && newState == RecyclerView.SCROLL_STATE_IDLE)\r\n                    displayMoreSearch();\r\n            }\r\n        });\r\n        contestlist3 = new ArrayList<>();\r\n        fAuth = FirebaseAuth.getInstance();\r\n        upcomingContestRv.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\r\n                super.onScrollStateChanged(recyclerView, newState);\r\n                if (!recyclerView.canScrollVertically(1) && newState == RecyclerView.SCROLL_STATE_IDLE) {\r\n                    if (contestlist.size() != paginatedcontestlist.size())\r\n                        bottomProgress.setVisibility(View.VISIBLE);\r\n                    displayMoreContest();\r\n                } else bottomProgress.setVisibility(View.GONE);\r\n            }\r\n        });\r\n        domainspinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                domain = domainspinner.getSelectedItem().toString();\r\n                getContestFiltered(domain, entryfee);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n        entryfeeSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                entryfee = entryfeeSpinner.getSelectedItem().toString();\r\n                getContestFiltered(domain, entryfee);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n        searchBox.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n                String key = \"\";\r\n                if (!searchBox.getText().toString().contains(\".\") &&\r\n                        !searchBox.getText().toString().contains(\",\") &&\r\n                        !searchBox.getText().toString().contains(\"#\") &&\r\n                        !searchBox.getText().toString().contains(\"$\") &&\r\n                        !searchBox.getText().toString().contains(\"[\") &&\r\n                        !searchBox.getText().toString().contains(\"]\"))\r\n                    key = searchBox.getText().toString();\r\n                searchContest(key);\r\n            }\r\n        });\r\n        contesRefresh.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n                flag1 = false;\r\n                getContestFiltered(domain, entryfee);\r\n                Log.d(TAG, \"onRefresh: 11\");\r\n                checkRefresh();\r\n            }\r\n\r\n            private void checkRefresh() {\r\n                if (contesRefresh.isRefreshing() && flag1) {\r\n                    contesRefresh.setRefreshing(false);\r\n                    handler.removeCallbacks(this::checkRefresh);\r\n                    flag1 = false;\r\n                } else handler.postDelayed(this::checkRefresh, RETRY_DURATION);\r\n            }\r\n        });\r\n\r\n        getContestFiltered(domain, entryfee);\r\n\r\n    }\r\n\r\n    public void initWidgets(){\r\n        upcomingContestRv = findViewById(R.id.recycler_view1);\r\n        contestSearchRv = findViewById(R.id.recyclerKey);\r\n        searchBox = findViewById(R.id.search);\r\n        domainspinner = findViewById(R.id.domainspinner);\r\n        entryfeeSpinner = findViewById(R.id.entryfeeSpinner);\r\n        gridB = findViewById(R.id.gridB);\r\n        gridY = findViewById(R.id.gridY);\r\n        colB =findViewById(R.id.columnB);\r\n        colY = findViewById(R.id.columnY);\r\n        filterB = findViewById(R.id.filter);\r\n        filterY = findViewById(R.id.filteryellow);\r\n        relativeLayout = findViewById(R.id.relparent);\r\n        contesRefresh = findViewById(R.id.contest_refresh);\r\n        blurBg = findViewById(R.id.pro);\r\n        cross = findViewById(R.id.cross);\r\n        bottomProgress = findViewById(R.id.pro2);\r\n        noPost = findViewById(R.id.noPost);\r\n        joined = findViewById(R.id.joined);\r\n        created = findViewById(R.id.created);\r\n\r\n\r\n    }\r\n\r\n    public void expand(final View v, int duration) {\r\n        final boolean expand = v.getVisibility() != View.VISIBLE;\r\n\r\n        prevHeight = v.getHeight();\r\n        if (x == 0) {\r\n            x++;\r\n            dummyHeight = v.getHeight();\r\n        }\r\n        if (prevHeight == 0) {\r\n            int measureSpecParams = View.MeasureSpec.getSize(View.MeasureSpec.UNSPECIFIED);\r\n            v.measure(measureSpecParams, measureSpecParams);\r\n            height = dummyHeight;\r\n        } else {\r\n            height = 0;\r\n        }\r\n        ValueAnimator valueAnimator = ValueAnimator.ofInt(prevHeight, height);\r\n        int finalHeight = height;\r\n        valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\r\n            @Override\r\n            public void onAnimationUpdate(ValueAnimator animation) {\r\n                v.getLayoutParams().height = (int) animation.getAnimatedValue();\r\n                v.requestLayout();\r\n\r\n            }\r\n        });\r\n\r\n        valueAnimator.addListener(new Animator.AnimatorListener() {\r\n            @Override\r\n            public void onAnimationStart(Animator animation) {\r\n                if (expand) {\r\n                    v.setVisibility(View.VISIBLE);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationEnd(Animator animation) {\r\n                if (!expand) {\r\n                    v.setVisibility(View.INVISIBLE);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationCancel(Animator animation) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onAnimationRepeat(Animator animation) {\r\n\r\n            }\r\n        });\r\n        valueAnimator.setInterpolator(new DecelerateInterpolator());\r\n        valueAnimator.setDuration(duration);\r\n        valueAnimator.start();\r\n    }\r\n\r\n    private void getContestFiltered(String domain, String entryfee) {\r\n        final String[] timestamp = new String[1];\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n                //*************************************************************************\r\n                String currentTime = StringManipilation.getTime(rawDate);\r\n                java.text.DateFormat formatter1 = new SimpleDateFormat(\"dd-MM-yyyy\");\r\n                Date date1 = null;\r\n                try {\r\n                    date1 = (Date) formatter1.parse(currentTime);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                timestamp[0] = String.valueOf(date1.getTime());\r\n\r\n                if (!domain.equals(\"Overall\")) {\r\n\r\n\r\n                    DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n                    reference.child(getString(R.string.dbname_contestlist))\r\n                            .orderByChild(getString(R.string.field_domain)).equalTo(domain)\r\n                            .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                                    contestlist.clear();\r\n                                    for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n\r\n                                        String resDate = snapshot.child(getString(R.string.field_winners_declare)).getValue().toString();\r\n                                        java.text.DateFormat formatter5 = new SimpleDateFormat(\"dd-MM-yyyy\");\r\n                                        Date date5 = null;\r\n                                        try {\r\n                                            date5 = (Date) formatter5.parse(resDate);\r\n                                        } catch (ParseException e) {\r\n                                            e.printStackTrace();\r\n                                        }\r\n                                        String resDate2 = String.valueOf(date5.getTime());\r\n                                        if ((Long.parseLong(resDate2) + 604800000) >= Long.parseLong(timestamp[0])) {\r\n                                            ContestDetail contestDetail = snapshot.getValue(ContestDetail.class);\r\n\r\n                                            contestlist.add(contestDetail);\r\n                                        }\r\n                                    }\r\n                                    if (!entryfee.equals(\"Overall\")) {\r\n\r\n                                        contestlist3.clear();\r\n                                        for (int x = 0; x < contestlist.size(); x++) {\r\n                                            ContestDetail contestDetail = contestlist.get(x);\r\n                                            if (entryfee.equals(\"Free\")) {\r\n                                                if (contestDetail.getEf().equals(entryfee)) {\r\n\r\n                                                    contestlist3.add(contestDetail);\r\n                                                }\r\n                                            }\r\n                                            if (!entryfee.equals(\"Free\"))\r\n                                                if (!contestDetail.getEf().equals(\"Free\")) {\r\n                                                    contestlist3.add(contestDetail);\r\n                                                }\r\n                                        }\r\n                                        contestlist.clear();\r\n                                        contestlist.addAll(contestlist3);\r\n                                        Collections.reverse(contestlist);\r\n                                        displaycontest();\r\n                                    } else {\r\n                                        Collections.reverse(contestlist);\r\n\r\n                                        displaycontest();\r\n                                    }\r\n\r\n\r\n                                }\r\n\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                                }\r\n                            });\r\n\r\n                } else {\r\n                    DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n                    reference.child(getString(R.string.dbname_contestlist))\r\n                            .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                @Override\r\n                                public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                                    contestlist.clear();\r\n                                    for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                                        String resDate = snapshot.child(getString(R.string.field_winners_declare)).getValue().toString();\r\n                                        java.text.DateFormat formatter5 = new SimpleDateFormat(\"dd-MM-yyyy\");\r\n                                        Date date5 = null;\r\n                                        try {\r\n                                            date5 = (Date) formatter5.parse(resDate);\r\n                                        } catch (ParseException e) {\r\n                                            e.printStackTrace();\r\n                                        }\r\n                                        String resDate2 = String.valueOf(date5.getTime());\r\n                                        if ((Long.parseLong(resDate2) + 604800000) >= Long.parseLong(timestamp[0])) {\r\n                                            ContestDetail contestDetail = snapshot.getValue(ContestDetail.class);\r\n\r\n                                            contestlist.add(contestDetail);\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!entryfee.equals(\"Overall\")) {\r\n                                        contestlist3.clear();\r\n                                        for (int x = 0; x < contestlist.size(); x++) {\r\n                                            ContestDetail contestDetail = contestlist.get(x);\r\n                                            if (entryfee.equals(\"Free\")) {\r\n                                                if (contestDetail.getEf().equals(entryfee)) {\r\n\r\n                                                    contestlist3.add(contestDetail);\r\n                                                }\r\n                                            }\r\n                                            if (!entryfee.equals(\"Free\"))\r\n                                                if (!contestDetail.getEf().equals(\"Free\")) {\r\n                                                    contestlist3.add(contestDetail);\r\n                                                }\r\n                                        }\r\n                                        contestlist.clear();\r\n                                        contestlist.addAll(contestlist3);\r\n                                        Collections.reverse(contestlist);\r\n                                        displaycontest();\r\n                                    } else {\r\n                                        Collections.reverse(contestlist);\r\n                                        displaycontest();\r\n                                    }\r\n\r\n\r\n                                }\r\n\r\n                                @Override\r\n                                public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                                }\r\n                            });\r\n                }\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onError(Exception ex) {\r\n                Log.e(SNTPClient.TAG, ex.getMessage());\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void searchContest(String key) {\r\n\r\n        if (key.length() < 20) {\r\n\r\n        } else {\r\n            DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n            reference.child(getString(R.string.dbname_contestlist))\r\n                    .child(key)\r\n                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                            if (dataSnapshot.exists()) {\r\n                                contestlist2.clear();\r\n                                ContestDetail contestDetail = dataSnapshot.getValue(ContestDetail.class);\r\n\r\n                                contestlist2.add(contestDetail);\r\n                                Collections.reverse(contestlist2);\r\n                                displaysearch();\r\n                            }\r\n\r\n\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n                        }\r\n                    });\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void displaycontest() {\r\n        noPost.setVisibility(View.GONE);\r\n        bottomProgress.setVisibility(View.GONE);\r\n\r\n        flag1 = true;\r\n        paginatedcontestlist = new ArrayList<>();\r\n\r\n        if (contestlist != null && contestlist.size() != 0) {\r\n\r\n            try {\r\n\r\n\r\n                int iteration = contestlist.size();\r\n                if (iteration > 5) {\r\n                    iteration = 5;\r\n                }\r\n                mResults = 5;\r\n                for (int i = 0; i < iteration; i++) {\r\n                    paginatedcontestlist.add(contestlist.get(i));\r\n                }\r\n                if (upcomingContestRv.getAdapter().getClass().equals(contestUpcoming.getClass())) {\r\n\r\n                    contestUpcoming = new AdapterContestUpcoming(this, paginatedcontestlist);\r\n                    contestUpcoming.setHasStableIds(true);\r\n\r\n                    upcomingContestRv.setAdapter(contestUpcoming);\r\n\r\n                } else {\r\n\r\n                    adapterContestUpcomingGrid = new AdapterContestUpcomingGrid(this, paginatedcontestlist);\r\n                    adapterContestUpcomingGrid.setHasStableIds(true);\r\n\r\n                    upcomingContestRv.setAdapter(adapterContestUpcomingGrid);\r\n                }\r\n\r\n\r\n            } catch (NullPointerException e) {\r\n                Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n            } catch (IndexOutOfBoundsException e) {\r\n                Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n            }\r\n\r\n        } else {\r\n            bottomProgress.setVisibility(View.GONE);\r\n            noPost.setVisibility(View.VISIBLE);\r\n            if (upcomingContestRv.getAdapter().getClass().equals(contestUpcoming.getClass())) {\r\n\r\n                contestUpcoming = new AdapterContestUpcoming(this, contestlist);\r\n                contestUpcoming.setHasStableIds(true);\r\n\r\n                upcomingContestRv.setAdapter(contestUpcoming);\r\n\r\n            } else {\r\n\r\n                adapterContestUpcomingGrid = new AdapterContestUpcomingGrid(this, contestlist);\r\n                adapterContestUpcomingGrid.setHasStableIds(true);\r\n\r\n                upcomingContestRv.setAdapter(adapterContestUpcomingGrid);\r\n\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public void displayMoreContest() {\r\n\r\n        try {\r\n            if (contestlist.size() > mResults && contestlist.size() > 0) {\r\n\r\n                int iterations;\r\n                if (contestlist.size() > (mResults + 10)) {\r\n                    iterations = 10;\r\n                } else {\r\n                    iterations = contestlist.size() - mResults;\r\n                }\r\n                for (int i = mResults; i < mResults + iterations; i++) {\r\n                    paginatedcontestlist.add(contestlist.get(i));\r\n\r\n                }\r\n                upcomingContestRv.post(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        if (upcomingContestRv.getAdapter().getClass().equals(contestUpcoming.getClass())) {\r\n                            contestUpcoming.notifyItemRangeInserted(mResults, iterations);\r\n\r\n\r\n                        } else {\r\n                            adapterContestUpcomingGrid.notifyItemRangeInserted(mResults, iterations);\r\n                        }\r\n                    }\r\n                });\r\n                mResults = mResults + iterations;\r\n\r\n\r\n            } else {\r\n                bottomProgress.setVisibility(View.GONE);\r\n\r\n            }\r\n\r\n        } catch (NullPointerException e) {\r\n            Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n        } catch (IndexOutOfBoundsException e) {\r\n            Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void displaysearch() {\r\n        blurBg.setVisibility(View.VISIBLE);\r\n        paginatedcontestSearch = new ArrayList<>();\r\n        if (contestlist2 != null) {\r\n\r\n            try {\r\n\r\n\r\n                int iteration = contestlist2.size();\r\n                if (iteration > 5) {\r\n                    iteration = 5;\r\n                }\r\n                mResults2 = 5;\r\n                for (int i = 0; i < iteration; i++) {\r\n                    paginatedcontestSearch.add(contestlist2.get(i));\r\n                }\r\n                adapterContestSearch = new AdapterContestSearch(this, paginatedcontestSearch);\r\n                contestSearchRv.setAdapter(adapterContestSearch);\r\n\r\n            } catch (NullPointerException e) {\r\n                Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n            } catch (IndexOutOfBoundsException e) {\r\n                Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    public void displayMoreSearch() {\r\n\r\n        try {\r\n            if (contestlist2.size() > mResults2 && contestlist2.size() > 0) {\r\n\r\n                int iterations;\r\n                if (contestlist2.size() > (mResults2 + 10)) {\r\n                    iterations = 10;\r\n                } else {\r\n                    iterations = contestlist2.size() - mResults2;\r\n                }\r\n                for (int i = mResults2; i < mResults2 + iterations; i++) {\r\n                    paginatedcontestSearch.add(contestlist2.get(i));\r\n\r\n                }\r\n                mResults2 = mResults2 + iterations;\r\n                contestSearchRv.post(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        adapterContestSearch.notifyDataSetChanged();\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n        } catch (NullPointerException e) {\r\n            Log.e(TAG, \"Null pointer exception\" + e.getMessage());\r\n\r\n        } catch (IndexOutOfBoundsException e) {\r\n            Log.e(TAG, \"index out of bound\" + e.getMessage());\r\n\r\n        }\r\n\r\n    }\r\n    private void setupBottomNavigationView() {\r\n        Log.d(TAG, \" setupBottomNavigationView:setting up BottomNavigationView\");\r\n        BottomNavigationViewEx bottomNavigationViewEx = (BottomNavigationViewEx) findViewById(R.id.BottomNavViewBar);\r\n        BottomNaavigationViewHelper.setupBottomNavigationView(bottomNavigationViewEx,this);\r\n        BottomNaavigationViewHelper.enableNavigation(UpcomingContestActivity.this, this, bottomNavigationViewEx);\r\n\r\n        Menu menu = bottomNavigationViewEx.getMenu();\r\n        MenuItem menuItem = menu.getItem(ACTIVITY_NUM);\r\n        menuItem.setChecked(true);\r\n\r\n    }\r\n    private void checkCurrentuser(FirebaseUser user) {\r\n        Log.d(TAG, \"checkCurrentuser:check if current user logged in\");\r\n        if (user == null) startActivity(new Intent(UpcomingContestActivity.this, LoginActivity.class));\r\n    }\r\n    private void setupFirebaseAuth() {\r\n        Log.d(TAG, \"setup FirebaseAuth: setting up firebase auth.\");\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mAuthListener = firebaseAuth -> {\r\n            mUser = firebaseAuth.getCurrentUser();\r\n            if (mUser == null) {\r\n                Log.d(TAG, \"onAuthStateChanged:signed_out\");\r\n                Log.d(TAG, \"onAuthStateChanged: navigating to login\");\r\n                SharedPreferences settings = getSharedPreferences(\"shared preferences\", Context.MODE_PRIVATE);\r\n                new android.app.AlertDialog.Builder(mContext)\r\n                        .setTitle(\"No user logon found\")\r\n                        .setMessage(\"We will be logging u out. \\n Please try to log in again\")\r\n                        .setPositiveButton(android.R.string.ok, (dialog, which) -> {\r\n                            Intent intent = new Intent(mContext, LoginActivity.class);\r\n                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                            settings.edit().clear().apply();\r\n                            if (mAuthListener != null) mAuth.removeAuthStateListener(mAuthListener);\r\n                            startActivity(intent);\r\n                        })\r\n                        .show();\r\n            } else Log.d(TAG, \"onAuthStateChanged: signed_in:\" + mUser.getUid());\r\n        };\r\n    }\r\n    private void hideSoftKeyboard() {\r\n        if (getCurrentFocus() != null) {\r\n            InputMethodManager imm = (InputMethodManager) getSystemService(INPUT_METHOD_SERVICE);\r\n            imm.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        mAuth.addAuthStateListener(mAuthListener);\r\n        checkCurrentuser(mAuth.getCurrentUser());\r\n    }\r\n\r\n    @Override\r\n    public void onStop() {\r\n        super.onStop();\r\n        if (mAuthListener != null) mAuth.removeAuthStateListener(mAuthListener);\r\n    }\r\n\r\n}
===================================================================
--- app/src/main/java/com/orion/orion/contest/UpcomingContestActivity.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/java/com/orion/orion/contest/upcoming/UpcomingContestActivity.java	(date 1622644478885)
@@ -1,25 +1,21 @@
-package com.orion.orion.contest;
+package com.orion.orion.contest.upcoming;
 
 import android.animation.Animator;
 import android.animation.ValueAnimator;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.Looper;
 import android.text.Editable;
 import android.text.TextWatcher;
 import android.util.Log;
-import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
-import android.view.ViewGroup;
 import android.view.animation.DecelerateInterpolator;
 import android.view.inputmethod.InputMethodManager;
-import android.widget.Adapter;
 import android.widget.AdapterView;
 import android.widget.EditText;
 import android.widget.ImageView;
@@ -30,12 +26,8 @@
 import android.widget.TextView;
 
 import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.annotation.RequiresApi;
 import androidx.appcompat.app.AppCompatActivity;
-import androidx.fragment.app.Fragment;
 import androidx.recyclerview.widget.GridLayoutManager;
-import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
 
@@ -47,7 +39,6 @@
 import com.google.firebase.database.FirebaseDatabase;
 import com.google.firebase.database.ValueEventListener;
 import com.ittianyu.bottomnavigationviewex.BottomNavigationViewEx;
-import com.orion.orion.Adapters.AdapterContestJoined;
 import com.orion.orion.Adapters.AdapterContestSearch;
 import com.orion.orion.Adapters.AdapterContestUpcoming;
 import com.orion.orion.Adapters.AdapterContestUpcomingGrid;
@@ -65,7 +56,6 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Date;
-import java.util.Objects;
 import java.util.TimeZone;
 
 public class UpcomingContestActivity extends AppCompatActivity {
Index: app/src/main/java/com/orion/orion/util/FirebaseMethods.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.orion.orion.util;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Matrix;\r\nimport android.graphics.Paint;\r\nimport android.media.ExifInterface;\r\nimport android.net.Uri;\r\nimport android.os.Environment;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.google.gson.Gson;\r\nimport com.orion.orion.Notifications.Data;\r\nimport com.orion.orion.Notifications.Sender;\r\nimport com.orion.orion.Notifications.Token;\r\nimport com.orion.orion.R;\r\nimport com.orion.orion.contest.contestMainActivity;\r\nimport com.orion.orion.contest.create.CheckContest;\r\nimport com.orion.orion.contest.joined.JoiningForm;\r\nimport com.orion.orion.models.CreateForm;\r\nimport com.orion.orion.models.ParticipantList;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.TimeZone;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.FragmentActivity;\r\n\r\npublic class FirebaseMethods {\r\n    private static final String TAG = \"FirebaseMethods\";\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseAuth.AuthStateListener mAuthListener;\r\n    private Context mContext;\r\n    private FirebaseDatabase mFirebaseDatabase;\r\n    private StorageReference mStorageReference;\r\n    private DatabaseReference myRef;\r\n    private String userID;\r\n    private double mPhotoUploadProgress = 0;\r\n    private RequestQueue requestQueue;\r\n    boolean flag1 = true, flag2 = true, flag3 = true, flag4 = true, flag5 = true, flag6 = true;\r\n    private static final float maxHeight = 1280.0f;\r\n    private static final float maxWidth = 1280.0f;\r\n\r\n    public FirebaseMethods(Context context) {\r\n        mContext = context;\r\n        mStorageReference = FirebaseStorage.getInstance().getReference();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        mFirebaseDatabase = FirebaseDatabase.getInstance();\r\n        myRef = mFirebaseDatabase.getReference();\r\n        requestQueue = Volley.newRequestQueue(mContext);\r\n\r\n        if (mAuth.getCurrentUser() != null) {\r\n            userID = mAuth.getCurrentUser().getUid();\r\n            userID = mAuth.getCurrentUser().getUid();\r\n        }\r\n\r\n    }\r\n\r\n    public void uploadContest(final int count, final String imgURL, Bitmap bm, String contestKey, String p, String joiningkey) {\r\n        FilePaths filepaths = new FilePaths();\r\n\r\n        if (!imgURL.equals(\"\")) {\r\n            String user_id = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n\r\n            String newKey = FirebaseDatabase.getInstance().getReference().child(mContext.getString(R.string.dbname_contests)).push().getKey();\r\n\r\n            final StorageReference storageReference = mStorageReference\r\n                    .child(filepaths.FIREBASE_CONTEST_STORAGE + \"/\" + user_id + \"/\" + contestKey + \"/\" + newKey);\r\n\r\n            if (bm == null) {\r\n                bm = ImageManager.getBitmap(imgURL);\r\n            }\r\n\r\n\r\n            String imgUrl2 = compressImage(imgURL);\r\n\r\n            bm = ImageManager.getBitmap(imgUrl2);\r\n\r\n\r\n            byte[] bytes;\r\n\r\n\r\n            bytes = ImageManager.getBytesFromBitmap(bm, 100);\r\n\r\n\r\n            UploadTask uploadTask = null;\r\n            uploadTask = storageReference.putBytes(bytes);\r\n\r\n            uploadTask.addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    storageReference.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            Uri firebaseurl = uri;\r\n                            CreateForm createForm = new CreateForm();\r\n//                           Toast.makeText(mContext, \"Photo Upload success\" , Toast.LENGTH_SHORT).show();\r\n                            DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n                            if (p.equals(\"p1\")) {\r\n                                flag1 = false;\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.created_contest))\r\n                                        .child(contestKey)\r\n                                        .child(mContext.getString(R.string.field_jury_pic_1)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag1 = true;\r\n                                        if (flag1 && flag2 && flag3 && flag4) {\r\n                                            ((CheckContest) mContext).progress.setVisibility(View.GONE);\r\n                                            ((CheckContest) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext.startActivity(i);\r\n                                            Toast.makeText(mContext, \"Your Contest request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (p.equals(\"p2\")) {\r\n\r\n                                flag2 = false;\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.created_contest))\r\n                                        .child(contestKey)\r\n                                        .child(mContext.getString(R.string.field_jury_pic_2)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag2 = true;\r\n                                        if (flag1 && flag2 && flag3 && flag4) {\r\n                                            ((CheckContest) mContext).progress.setVisibility(View.GONE);\r\n                                            ((CheckContest) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext.startActivity(i);\r\n                                            Toast.makeText(mContext, \"Your Contest request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (p.equals(\"p3\")) {\r\n                                flag3 = false;\r\n\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.created_contest))\r\n                                        .child(contestKey)\r\n                                        .child(mContext.getString(R.string.field_jury_pic_3)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag3 = true;\r\n                                        if (flag1 && flag2 && flag3 && flag4) {\r\n                                            ((CheckContest) mContext).progress.setVisibility(View.GONE);\r\n                                            ((CheckContest) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext.startActivity(i);\r\n                                            Toast.makeText(mContext, \"Your Contest request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (p.equals(\"p4\")) {\r\n                                flag4 = false;\r\n\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.created_contest))\r\n                                        .child(contestKey)\r\n                                        .child(mContext.getString(R.string.field_poster)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag4 = true;\r\n                                        if (flag1 && flag2 && flag3 && flag4) {\r\n                                            ((CheckContest) mContext).progress.setVisibility(View.GONE);\r\n                                            ((CheckContest) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext.startActivity(i);\r\n                                            Toast.makeText(mContext, \"Your Contest request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                            if (p.equals(\"p5\")) {\r\n\r\n                                flag5 = false;\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.joined_contest))\r\n                                        .child(joiningkey)\r\n                                        .child(mContext.getString(R.string.field_id_link)).setValue(firebaseurl.toString());\r\n                                ref.child(mContext.getString(R.string.dbname_request))\r\n                                        .child(mContext.getString(R.string.dbname_participantList))\r\n                                        .child(contestKey)\r\n                                        .child(joiningkey)\r\n                                        .child(mContext.getString(R.string.field_id_link)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag5 = true;\r\n                                        if (flag5 && flag6) {\r\n                                            ((JoiningForm) mContext).linearLayout.setVisibility(View.GONE);\r\n                                            ((JoiningForm) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext.startActivity(i);\r\n                                            Toast.makeText(mContext, \"Your participation request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n                                        }\r\n\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (p.equals(\"p6\")) {\r\n\r\n                                flag6 = false;\r\n                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                        .child(mContext.getString(R.string.joined_contest))\r\n                                        .child(joiningkey)\r\n                                        .child(mContext.getString(R.string.field_media_link)).setValue(firebaseurl.toString());\r\n                                ref.child(mContext.getString(R.string.dbname_request))\r\n                                        .child(mContext.getString(R.string.dbname_participantList))\r\n                                        .child(contestKey)\r\n                                        .child(joiningkey)\r\n                                        .child(mContext.getString(R.string.field_media_link)).setValue(firebaseurl.toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n                                        flag6 = true;\r\n                                        if (flag5 && flag6) {\r\n                                            ((JoiningForm) mContext).linearLayout.setVisibility(View.GONE);\r\n                                            ((JoiningForm) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\r\n                                            Intent i = new Intent(mContext, contestMainActivity.class);\r\n                                            mContext.startActivity(i);\r\n                                            Toast.makeText(mContext, \"Your participation request has been submitted.\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                        }\r\n\r\n                    });\r\n\r\n//                   Intent intent = new Intent(mContext, MainActivity.class);\r\n//                   mContext.startActivity(intent);\r\n\r\n\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Log.d(TAG, \"onFailure: Photo Upload Failed\");\r\n                    Toast.makeText(mContext, \"Pics Upload failed\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    public void sendNotification(final String hisUID, final String username, final String message, final String tittle) {\r\n        final DatabaseReference allToken = FirebaseDatabase.getInstance().getReference(\"Tokens\");\r\n        Query query = allToken.orderByKey().equalTo(hisUID);\r\n        query.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                for (DataSnapshot ds : dataSnapshot.getChildren()) {\r\n                    Token token = ds.getValue(Token.class);\r\n                    Data data = new Data(FirebaseAuth.getInstance().getCurrentUser().getUid(), username + \" \" + message, tittle, hisUID, R.drawable.orion_logo_png);\r\n                    Sender sender = new Sender(data, token.getToken());\r\n                    try {\r\n                        JSONObject senderJsonObj = new JSONObject(new Gson().toJson(sender));\r\n                        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(\r\n                                \"https://fcm.googleapis.com/fcm/send\", senderJsonObj,\r\n                                response -> Log.d(\"JSON_RESPONSE\", \"onResponse: \" + response.toString()),\r\n                                error -> Log.d(\"JSON_RESPONSE\", \"onError: \" + error.toString())\r\n                        ) {\r\n                            @Override\r\n                            public Map<String, String> getHeaders() {\r\n                                Map<String, String> headers = new HashMap<>();\r\n                                headers.put(\"Content-Type\", \"application/json\");\r\n                                headers.put(\"Authorization\", \"key=AAAAPBXWnHs:APA91bFkGt9VULR-c7XBIcsF0SYlKTiWod88zRpKwIBf-74w46zKCUuIqKIsATJ_Lbv56jdPWhJ0QclNp56kN8__I1mJOQcKJeGjg6CfrIkDYL9SmEy_Dz0zDhyF4WJIlMdE0khSk7qI\");\r\n                                return headers;\r\n                            }\r\n                        };\r\n                        requestQueue.add(jsonObjectRequest);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public String getTim() {\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\", Locale.ENGLISH);\r\n        sdf.setTimeZone(TimeZone.getTimeZone(\"Asia/Kolkata\"));\r\n        return sdf.format(new Date());\r\n    }\r\n\r\n\r\n    public String compressImage(String imagePath) {\r\n\r\n        File file = new File(imagePath);\r\n        if (file.exists() && file.canRead()) {\r\n            Log.d(TAG, \"compressImage: yes\");\r\n            Bitmap scaledBitmap = null;\r\n\r\n            BitmapFactory.Options options = new BitmapFactory.Options();\r\n            options.inJustDecodeBounds = true;\r\n            Bitmap bmp = BitmapFactory.decodeFile(imagePath, options);\r\n\r\n            int actualHeight = options.outHeight;\r\n            int actualWidth = options.outWidth;\r\n\r\n            float imgRatio = (float) actualWidth / (float) actualHeight;\r\n            float maxRatio = maxWidth / maxHeight;\r\n\r\n            if (actualHeight > maxHeight || actualWidth > maxWidth) {\r\n                if (imgRatio < maxRatio) {\r\n                    imgRatio = maxHeight / actualHeight;\r\n                    actualWidth = (int) (imgRatio * actualWidth);\r\n                    actualHeight = (int) maxHeight;\r\n                } else if (imgRatio > maxRatio) {\r\n                    imgRatio = maxWidth / actualWidth;\r\n                    actualHeight = (int) (imgRatio * actualHeight);\r\n                    actualWidth = (int) maxWidth;\r\n                } else {\r\n                    actualHeight = (int) maxHeight;\r\n                    actualWidth = (int) maxWidth;\r\n\r\n                }\r\n            }\r\n\r\n            options.inSampleSize = calculateInSampleSize(options, actualWidth, actualHeight);\r\n            options.inJustDecodeBounds = false;\r\n            options.inDither = false;\r\n            options.inPurgeable = true;\r\n            options.inInputShareable = true;\r\n            options.inTempStorage = new byte[16 * 1024];\r\n\r\n            try {\r\n                bmp = BitmapFactory.decodeFile(imagePath, options);\r\n            } catch (OutOfMemoryError exception) {\r\n                exception.printStackTrace();\r\n\r\n            }\r\n            try {\r\n                scaledBitmap = Bitmap.createBitmap(actualWidth, actualHeight, Bitmap.Config.RGB_565);\r\n            } catch (OutOfMemoryError exception) {\r\n                exception.printStackTrace();\r\n            }\r\n\r\n            float ratioX = actualWidth / (float) options.outWidth;\r\n            float ratioY = actualHeight / (float) options.outHeight;\r\n            float middleX = actualWidth / 2.0f;\r\n            float middleY = actualHeight / 2.0f;\r\n\r\n            Matrix scaleMatrix = new Matrix();\r\n            scaleMatrix.setScale(ratioX, ratioY, middleX, middleY);\r\n\r\n            Canvas canvas = new Canvas(scaledBitmap);\r\n            canvas.setMatrix(scaleMatrix);\r\n            canvas.drawBitmap(bmp, middleX - bmp.getWidth() / 2, middleY - bmp.getHeight() / 2, new Paint(Paint.FILTER_BITMAP_FLAG));\r\n\r\n            if (bmp != null) {\r\n                bmp.recycle();\r\n            }\r\n\r\n            ExifInterface exif;\r\n            try {\r\n                exif = new ExifInterface(imagePath);\r\n                int orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, 0);\r\n                Matrix matrix = new Matrix();\r\n                if (orientation == 6) {\r\n                    matrix.postRotate(90);\r\n                } else if (orientation == 3) {\r\n                    matrix.postRotate(180);\r\n                } else if (orientation == 8) {\r\n                    matrix.postRotate(270);\r\n                }\r\n                scaledBitmap = Bitmap.createBitmap(scaledBitmap, 0, 0, scaledBitmap.getWidth(), scaledBitmap.getHeight(), matrix, true);\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            FileOutputStream out = null;\r\n            String filepath = getFilename();\r\n            try {\r\n                out = new FileOutputStream(filepath);\r\n\r\n                //write the compressed bitmap at the destination specified by filename.\r\n                scaledBitmap.compress(Bitmap.CompressFormat.JPEG, 80, out);\r\n\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            return filepath;\r\n\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    public static int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {\r\n        final int height = options.outHeight;\r\n        final int width = options.outWidth;\r\n        int inSampleSize = 1;\r\n\r\n        if (height > reqHeight || width > reqWidth) {\r\n            final int heightRatio = Math.round((float) height / (float) reqHeight);\r\n            final int widthRatio = Math.round((float) width / (float) reqWidth);\r\n            inSampleSize = heightRatio < widthRatio ? heightRatio : widthRatio;\r\n        }\r\n        final float totalPixels = width * height;\r\n        final float totalReqPixelsCap = reqWidth * reqHeight * 2;\r\n\r\n        while (totalPixels / (inSampleSize * inSampleSize) > totalReqPixelsCap) {\r\n            inSampleSize++;\r\n        }\r\n\r\n        return inSampleSize;\r\n    }\r\n\r\n    public String getFilename() {\r\n        File mediaStorageDir = new File(Environment.getExternalStorageDirectory()\r\n                + \"/Android/data/\"\r\n                + mContext.getApplicationContext().getPackageName()\r\n                + \"/Files/Compressed\");\r\n\r\n        // Create the storage directory if it does not exist\r\n        if (!mediaStorageDir.exists()) {\r\n            mediaStorageDir.mkdirs();\r\n        }\r\n\r\n        String mImageName = \"IMG_\" + String.valueOf(System.currentTimeMillis()) + \".jpg\";\r\n        String uriString = (mediaStorageDir.getAbsolutePath() + \"/\" + mImageName);\r\n        ;\r\n        return uriString;\r\n\r\n    }\r\n\r\n\r\n    public void publishResut(boolean manual, String Conteskey, ArrayList<ParticipantList> participantLists,\r\n                             LinearLayout progress, FragmentActivity activity, ArrayList<ParticipantList> winnerList) {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n\r\n        if (manual) {\r\n\r\n            ref.child(mContext.getString(R.string.dbname_contestlist))\r\n                    .child(Conteskey)\r\n                    .child(mContext.getString(R.string.field_result))\r\n                    .setValue(true)\r\n                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            ref.child(mContext.getString(R.string.dbname_contests))\r\n                                    .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                    .child(mContext.getString(R.string.field_contest_completed))\r\n                                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                            if (snapshot.exists()) {\r\n                                                long x = (long) snapshot.getValue();\r\n                                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                        .child(mContext.getString(R.string.field_contest_completed))\r\n                                                        .setValue(x + 1)\r\n                                                        .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                            @Override\r\n                                                            public void onSuccess(Void aVoid) {\r\n                                                                publishResutFurther(manual, Conteskey, participantLists,\r\n                                                                        progress, activity, winnerList);\r\n                                                            }\r\n                                                        });\r\n                                            } else {\r\n                                                ref.child(mContext.getString(R.string.dbname_contests))\r\n                                                        .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                                                        .child(mContext.getString(R.string.field_contest_completed))\r\n                                                        .setValue(1).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(Void aVoid) {\r\n                                                        publishResutFurther(manual, Conteskey, participantLists, progress, activity, winnerList);\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n                    });\r\n\r\n\r\n        } else {\r\n            ref.child(mContext.getString(R.string.dbname_contestlist))\r\n                    .child(Conteskey)\r\n                    .child(mContext.getString(R.string.field_result))\r\n                    .setValue(true)\r\n                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            publishResutFurther(manual, Conteskey, participantLists, progress, activity, winnerList);\r\n                        }\r\n                    });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void publishResutFurther(boolean manual, String Conteskey, ArrayList<ParticipantList> participantLists, LinearLayout progress, FragmentActivity activity, ArrayList<ParticipantList> winnerList) {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n\r\n        ref.child(mContext.getString(R.string.dbname_contests))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .child(mContext.getString(R.string.created_contest))\r\n                .child(Conteskey)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if (!snapshot.child(mContext.getString(R.string.field_jury_name_1)).getValue().toString().equals(\"\")) {\r\n                            ref.child(mContext.getString(R.string.dbname_username))\r\n                                    .child(snapshot.child(mContext.getString(R.string.field_jury_name_1)).getValue().toString())\r\n                                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                            if (snapshot.exists()) {\r\n                                                DatabaseReference ref2 = FirebaseDatabase.getInstance().getReference(mContext.getString(R.string.dbname_contests))\r\n                                                        .child(snapshot.getValue().toString())\r\n                                                        .child(mContext.getString(R.string.field_contest_judged));\r\n\r\n                                                ref2.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                                    @Override\r\n                                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                                        if (snapshot.exists()) {\r\n                                                            long l = (long) snapshot.getValue();\r\n                                                            ref2.setValue(l + 1);\r\n                                                            Log.d(TAG, \"onDataChange: cgy 1\");\r\n                                                        } else {\r\n                                                            ref2.setValue(1);\r\n                                                        }\r\n\r\n                                                    }\r\n\r\n                                                    @Override\r\n                                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                                    }\r\n                                                });\r\n\r\n                                            }\r\n\r\n\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n                        if (!snapshot.child(mContext.getString(R.string.field_jury_name_2)).getValue().toString().equals(\"\")) {\r\n                            ref.child(mContext.getString(R.string.dbname_username))\r\n                                    .child(snapshot.child(mContext.getString(R.string.field_jury_name_2)).getValue().toString())\r\n                                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                            if (snapshot.exists()) {\r\n                                                DatabaseReference ref2 = FirebaseDatabase.getInstance().getReference(mContext.getString(R.string.dbname_contests))\r\n                                                        .child(snapshot.getValue().toString())\r\n                                                        .child(mContext.getString(R.string.field_contest_judged));\r\n\r\n                                                ref2.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                                    @Override\r\n                                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                                        if (snapshot.exists()) {\r\n                                                            long l = (long) snapshot.getValue();\r\n                                                            ref2.setValue(l + 1);\r\n                                                        } else {\r\n                                                            ref2.setValue(1);\r\n                                                        }\r\n\r\n                                                    }\r\n\r\n                                                    @Override\r\n                                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                                    }\r\n                                                });\r\n\r\n                                            }\r\n\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n                        if (!snapshot.child(mContext.getString(R.string.field_jury_name_3)).getValue().toString().equals(\"\")) {\r\n                            ref.child(mContext.getString(R.string.dbname_username))\r\n                                    .child(snapshot.child(mContext.getString(R.string.field_jury_name_3)).getValue().toString())\r\n                                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                            if (snapshot.exists()) {\r\n                                                DatabaseReference ref2 = FirebaseDatabase.getInstance().getReference(mContext.getString(R.string.dbname_contests))\r\n                                                        .child(snapshot.getValue().toString())\r\n                                                        .child(mContext.getString(R.string.field_contest_judged));\r\n\r\n                                                ref2.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                                    @Override\r\n                                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                                        if (snapshot.exists()) {\r\n                                                            long l = (long) snapshot.getValue();\r\n                                                            ref2.setValue(l + 1);\r\n                                                        } else {\r\n                                                            ref2.setValue(1);\r\n                                                        }\r\n\r\n                                                    }\r\n\r\n                                                    @Override\r\n                                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                                    }\r\n                                                });\r\n\r\n                                            }\r\n\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n                        }\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n        Log.d(TAG, \"onDataChange: cgy 3\" + winnerList + \" \" + participantLists);\r\n\r\n        if (winnerList.size() != 0) {\r\n            Log.d(TAG, \"onDataChange: cgy 2\");\r\n\r\n\r\n            for (int x = 0; x < winnerList.size(); x++) {\r\n                DatabaseReference ref3 = FirebaseDatabase.getInstance().getReference(mContext.getString(R.string.dbname_contests))\r\n                        .child(winnerList.get(x).getUi())\r\n                        .child(mContext.getString(R.string.field_contest_wins));\r\n\r\n                int finalX = x;\r\n                int finalX1 = x;\r\n                ref3.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot1) {\r\n                        if (snapshot1.exists()) {\r\n                            long l = (long) snapshot1.getValue();\r\n                            ref3.setValue(l + 1)\r\n                                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                        @Override\r\n                                        public void onSuccess(Void aVoid) {\r\n                                            if (finalX1 == winnerList.size() - 1) {\r\n                                                sendNotyToParticipants(participantLists, progress);\r\n\r\n                                            }\r\n                                        }\r\n                                    });\r\n                        } else {\r\n                            ref3.setValue(1)\r\n                                    .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                        @Override\r\n                                        public void onSuccess(Void aVoid) {\r\n                                            if (finalX1 == winnerList.size() - 1) {\r\n                                                sendNotyToParticipants(participantLists, progress);\r\n\r\n                                            }\r\n                                        }\r\n\r\n                                        ;\r\n                                    });\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n            if (winnerList.size() == 0) {\r\n                sendNotyToParticipants(participantLists, progress);\r\n            }\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void sendNotyToParticipants(ArrayList<ParticipantList> participantLists, LinearLayout progress) {\r\n        DatabaseReference ref = FirebaseDatabase.getInstance().getReference();\r\n        Log.d(TAG, \"onDataChange: cgy 5\");\r\n\r\n        if (participantLists.size() != 0) {\r\n            Log.d(TAG, \"onDataChange: cgy 4\");\r\n\r\n            for (int x = 0; x < participantLists.size(); x++) {\r\n\r\n                sendNotification(participantLists.get(x).getUi(), \"\", \"Result has been declared of a contest.Check your ranking now.\", \"Result Declared\");\r\n\r\n\r\n                addToHisNotification(\"\" + participantLists.get(x).getUi(), \"Result has been declared of a contest.Check your ranking now.\");\r\n\r\n                int finalX = x;\r\n                ref.child(mContext.getString(R.string.dbname_contests))\r\n                        .child(participantLists.get(finalX).getUi())\r\n                        .child(mContext.getString(R.string.field_contest_participated))\r\n                        .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if (snapshot.exists()) {\r\n                                    long l = (long) snapshot.getValue();\r\n                                    ref.child(mContext.getString(R.string.dbname_contests))\r\n                                            .child(participantLists.get(finalX).getUi())\r\n                                            .child(mContext.getString(R.string.field_contest_participated))\r\n                                            .setValue(l + 1);\r\n                                    if (finalX == participantLists.size() - 1) {\r\n                                        Log.d(TAG, \"onDataChange: cgy 7\");\r\n\r\n                                        progress.setVisibility(View.GONE);\r\n                                    }\r\n                                } else {\r\n                                    ref.child(mContext.getString(R.string.dbname_contests))\r\n                                            .child(participantLists.get(finalX).getUi())\r\n                                            .child(mContext.getString(R.string.field_contest_participated))\r\n                                            .setValue(1);\r\n                                    if (finalX == participantLists.size() - 1) {\r\n                                        Log.d(TAG, \"onDataChange: cgy 8\");\r\n\r\n                                        progress.setVisibility(View.GONE);\r\n\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n\r\n\r\n            }\r\n        } else {\r\n            Log.d(TAG, \"onDataChange: cgy 6\");\r\n\r\n            progress.setVisibility(View.GONE);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private void addToHisNotification(String hisUid, String notification) {\r\n\r\n        SNTPClient.getDate(TimeZone.getTimeZone(\"Asia/Colombo\"), new SNTPClient.Listener() {\r\n            @Override\r\n            public void onTimeReceived(String rawDate) {\r\n                // rawDate -> 2019-11-05T17:51:01+0530\r\n\r\n                String str_date = rawDate;\r\n                java.text.DateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\");\r\n                Date date = null;\r\n                try {\r\n                    date = (Date) formatter.parse(str_date);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                String timestamp = String.valueOf(date.getTime());\r\n\r\n\r\n//        data to put in notification\r\n                HashMap<Object, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"pId\", \"false\");\r\n\r\n                hashMap.put(mContext.getString(R.string.field_timestamp), timestamp);\r\n\r\n                hashMap.put(\"pUid\", hisUid);\r\n\r\n                hashMap.put(mContext.getString(R.string.field_notification_message), notification);\r\n                hashMap.put(mContext.getString(R.string.field_if_seen), \"false\");\r\n\r\n                hashMap.put(\"sUid\", FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n\r\n                DatabaseReference ref = FirebaseDatabase.getInstance().getReference(mContext.getString(R.string.dbname_users));\r\n                ref.child(hisUid).child(mContext.getString(R.string.field_Notifications)).child(timestamp).setValue(hashMap)\r\n                        .addOnSuccessListener(aVoid -> {\r\n\r\n                        }).addOnFailureListener(e -> {\r\n\r\n                });\r\n                Log.e(SNTPClient.TAG, rawDate);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onError(Exception ex) {\r\n                Log.e(SNTPClient.TAG, ex.getMessage());\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    public int getImageCount(DataSnapshot dataSnapshot) {\r\n\r\n        int count = 0;\r\n        for (DataSnapshot ds : dataSnapshot\r\n                .child(mContext.getString(R.string.dbname_user_photos))\r\n                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .getChildren()) {\r\n            count++;\r\n        }\r\n        return count;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/orion/orion/util/FirebaseMethods.java	(revision 99fcbc1b0e15329f7e58d2bb8d5ee5f02915fc8b)
+++ app/src/main/java/com/orion/orion/util/FirebaseMethods.java	(date 1622647843200)
@@ -36,8 +36,9 @@
 import com.orion.orion.Notifications.Sender;
 import com.orion.orion.Notifications.Token;
 import com.orion.orion.R;
-import com.orion.orion.contest.contestMainActivity;
 import com.orion.orion.contest.create.CheckContest;
+import com.orion.orion.contest.create.CreatedActivity;
+import com.orion.orion.contest.joined.JoinedActivity;
 import com.orion.orion.contest.joined.JoiningForm;
 import com.orion.orion.models.CreateForm;
 import com.orion.orion.models.ParticipantList;
@@ -144,7 +145,7 @@
                                         if (flag1 && flag2 && flag3 && flag4) {
                                             ((CheckContest) mContext).progress.setVisibility(View.GONE);
                                             ((CheckContest) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
-                                            Intent i = new Intent(mContext, contestMainActivity.class);
+                                            Intent i = new Intent(mContext, CreatedActivity.class);
                                             mContext.startActivity(i);
                                             Toast.makeText(mContext, "Your Contest request has been submitted.", Toast.LENGTH_SHORT).show();
 
@@ -167,7 +168,7 @@
                                         if (flag1 && flag2 && flag3 && flag4) {
                                             ((CheckContest) mContext).progress.setVisibility(View.GONE);
                                             ((CheckContest) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
-                                            Intent i = new Intent(mContext, contestMainActivity.class);
+                                            Intent i = new Intent(mContext, CreatedActivity.class);
                                             mContext.startActivity(i);
                                             Toast.makeText(mContext, "Your Contest request has been submitted.", Toast.LENGTH_SHORT).show();
 
@@ -190,7 +191,7 @@
                                         if (flag1 && flag2 && flag3 && flag4) {
                                             ((CheckContest) mContext).progress.setVisibility(View.GONE);
                                             ((CheckContest) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
-                                            Intent i = new Intent(mContext, contestMainActivity.class);
+                                            Intent i = new Intent(mContext, CreatedActivity.class);
                                             mContext.startActivity(i);
                                             Toast.makeText(mContext, "Your Contest request has been submitted.", Toast.LENGTH_SHORT).show();
 
@@ -213,7 +214,7 @@
                                         if (flag1 && flag2 && flag3 && flag4) {
                                             ((CheckContest) mContext).progress.setVisibility(View.GONE);
                                             ((CheckContest) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
-                                            Intent i = new Intent(mContext, contestMainActivity.class);
+                                            Intent i = new Intent(mContext, CreatedActivity.class);
                                             mContext.startActivity(i);
                                             Toast.makeText(mContext, "Your Contest request has been submitted.", Toast.LENGTH_SHORT).show();
 
@@ -242,7 +243,7 @@
                                         if (flag5 && flag6) {
                                             ((JoiningForm) mContext).linearLayout.setVisibility(View.GONE);
                                             ((JoiningForm) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
-                                            Intent i = new Intent(mContext, contestMainActivity.class);
+                                            Intent i = new Intent(mContext, JoinedActivity.class);
                                             mContext.startActivity(i);
                                             Toast.makeText(mContext, "Your participation request has been submitted.", Toast.LENGTH_SHORT).show();
                                         }
@@ -269,7 +270,7 @@
                                         if (flag5 && flag6) {
                                             ((JoiningForm) mContext).linearLayout.setVisibility(View.GONE);
                                             ((JoiningForm) mContext).getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
-                                            Intent i = new Intent(mContext, contestMainActivity.class);
+                                            Intent i = new Intent(mContext, JoinedActivity.class);
                                             mContext.startActivity(i);
                                             Toast.makeText(mContext, "Your participation request has been submitted.", Toast.LENGTH_SHORT).show();
 
